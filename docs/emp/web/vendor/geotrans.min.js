(function(){var initializing=false,fnTest=/xyz/.test(function(){xyz})?/\b_super\b/:/.*/;this.Class=function(){};Class.extend=function(prop){var _super=this.prototype;initializing=true;var prototype=new this;initializing=false;for(var name in prop){prototype[name]=typeof prop[name]=="function"&&typeof _super[name]=="function"&&fnTest.test(prop[name])?function(name,fn){return function(){var tmp=this._super;this._super=_super[name];var ret=fn.apply(this,arguments);this._super=tmp;return ret}}(name,prop[name]):prop[name]}function Class(){if(!initializing&&this.init)this.init.apply(this,arguments)}Class.prototype=prototype;Class.prototype.constructor=Class;Class.extend=arguments.callee;return Class}})();var PI=3.141592653589793;function convert(coordinates,sourceCoordintateSystemName,targetCoordinateSystemName){var sourceCoordintateSystem;var convertedSourceCoordinates;var sourceEllipsoid=new Ellipsoid;var sourceDatum=new Datum;try{if(sourceCoordintateSystemName==="GEODETIC"){sourceCoordintateSystem=new Geodetic(sourceEllipsoid,sourceDatum);convertedSourceCoordinates=convertCoordinatesToGeodeticCoordinates(coordinates)}else if(sourceCoordintateSystemName==="UTM"){sourceCoordintateSystem=new UTM(sourceEllipsoid,sourceDatum);convertedSourceCoordinates=convertCoordinatesToUtmCoordinates(coordinates)}else if(sourceCoordintateSystemName==="USNG"){sourceCoordintateSystem=new USNG(sourceEllipsoid,sourceDatum);convertedSourceCoordinates=convertCoordinatesToUsngOrMgrsCoordinates(coordinates);convertedSourceCoordinates.setCoordinateType("usNationalGrid")}else if(sourceCoordintateSystemName==="MGRS"){sourceCoordintateSystem=new MGRS(sourceEllipsoid,sourceDatum);convertedSourceCoordinates=convertCoordinatesToUsngOrMgrsCoordinates(coordinates);convertedSourceCoordinates.setCoordinateType("militaryGridReferenceSystem")}}catch(error){return error.message||error.getMessage()}var target;var targetEllipsoid=new Ellipsoid;var targetDatum=new Datum;try{if(targetCoordinateSystemName==="GEODETIC"){var targetCoordinateSystem=new Geodetic(targetEllipsoid,targetDatum);var results=sourceCoordintateSystem.convert(convertedSourceCoordinates,targetCoordinateSystem,"geodetic");var resultLat=results.latitude()*(180/this.PI);var resultLon=results.longitude()*(180/this.PI);return{latitude:resultLat,longitude:resultLon}}else if(targetCoordinateSystemName==="UTM"){var targetCoordinateSystem=new UTM(targetEllipsoid,targetDatum);var results=sourceCoordintateSystem.convert(convertedSourceCoordinates,targetCoordinateSystem,"universalTransverseMercator");return{zone:results._zone,hemisphere:results._hemisphere,easting:results._easting,northing:results._northing}}else if(targetCoordinateSystemName==="USNG"){var targetCoordinateSystem=new USNG(targetEllipsoid,targetDatum);var results=sourceCoordintateSystem.convert(convertedSourceCoordinates,targetCoordinateSystem,"usng");return{coordinateString:results.coordinateString}}else if(targetCoordinateSystemName==="MGRS"){var targetCoordinateSystem=new MGRS(targetEllipsoid,targetDatum);var results=sourceCoordintateSystem.convert(convertedSourceCoordinates,targetCoordinateSystem,"mgrs");return{coordinateString:results.coordinateString}}}catch(error){return error.message||error.getMessage()}}function convertCoordinatesToUsngOrMgrsCoordinates(coordinates){if(coordinates.coordinateString===undefined||coordinates.coordinateString===null){throw new CoordinateConversionException("coordinateString is a required input for MGRS and USNG")}var usngOrMgrsCoordinates=new MGRSorUSNGCoordinates;usngOrMgrsCoordinates.set(coordinates.coordinateString);return usngOrMgrsCoordinates}function convertCoordinatesToUtmCoordinates(coordinates){if(coordinates.zone===undefined||coordinates.zone===null){throw new CoordinateConversionException("zone is a required input for UTM")}if(coordinates.hemisphere===undefined||coordinates.hemisphere===null){throw new CoordinateConversionException("hemisphere is a required input for UTM")}if(coordinates.easting===undefined||coordinates.easting===null){throw new CoordinateConversionException("easting is a required input for UTM")}if(coordinates.northing===undefined||coordinates.northing===null){throw new CoordinateConversionException("northing is a required input for UTM")}var utmCoordinates=new UTMCoordinates;utmCoordinates.setZone(coordinates.zone);utmCoordinates.setHemisphere(coordinates.hemisphere);utmCoordinates.setEasting(coordinates.easting);utmCoordinates.setNorthing(coordinates.northing);return utmCoordinates}function convertCoordinatesToGeodeticCoordinates(coordinates){if(coordinates.latitude===undefined||coordinates.latitude===null){throw new CoordinateConversionException("latitude is a required input for GEODETIC")}if(coordinates.longitude===undefined||coordinates.longitude===null){throw new CoordinateConversionException("longitude is a required input for GEODETIC")}var geoCoordinates=new GeodeticCoordinates;geoCoordinates.setLatitude(coordinates.latitude*(this.PI/180));geoCoordinates.setLongitude(coordinates.longitude*(this.PI/180));geoCoordinates.setHeight(coordinates.height);return geoCoordinates}var CoordinateSystem=Class.extend({_datum:null,_ellipsoid:null,_parameters:null,coordinateType:null,baseConvert:function(source,targetCoordSys){var geodeticCoord=this.convertToGeodetic(source);return targetCoordSys.convertFromGeodetic(geodeticCoord)},isCompatible:function(coord){var compatible=true;if(_parameters.getCoordinateType()!=coord.getCoordinateType()){compatible=false}return compatible},checkEllipsoid:function(ellipsoid){if(ellipsoid.semiMajorAxis()<=0){throw new CoordinateConversionException(ErrorMessages_semiMajorAxis)}var invF=1/ellipsoid.flattening();if(invF<250||invF>350){throw new CoordinateConversionException(ErrorMessages_ellipsoidFlattening)}},getCoordinateType:function(){return this.coordinateType},setCoordinateType:function(coordinateType){this.coordinateType=coordinateType},getDatum:function(){return _datum},setDatum:function(datum){this._datum=datum},getEllipsoid:function(){return _ellipsoid},setEllipsoid:function(ellipsoid){this._ellipsoid=ellipsoid},setCSParameters:function(params){this._parameters=params}});var Datum=Class.extend({_index:0,_code:null,_ellipsoidCode:null,_name:null,_datumType:"threeParamDatum",_deltaX:0,_deltaY:0,_deltaZ:0,_westLongitude:0,_eastLongitude:0,_southLatitude:0,_northLatitude:0,_userDefined:0,Datum:function(){},index:function(){return this._index},code:function(){return this._code},ellipsoidCode:function(){return this._ellipsoidCode},name:function(){return this._name},datumType:function(){return this._datumType},deltaX:function(){return this._deltaX},deltaY:function(){return this._deltaY},deltaZ:function(){return this._deltaZ},westLongitude:function(){return this._westLongitude},eastLongitude:function(){return this._eastLongitude},southLatitude:function(){return this._southLatitude},northLatitude:function(){return this._northLatitude},userDefined:function(){return this._userDefined}});var Ellipsoid=Class.extend({_index:0,_code:null,_name:null,_semiMajorAxis:6378137,_semiMinorAxis:6356752.3142,_flattening:1/298.257223563,_eccentricitySquared:.00669437999014138,_userDefined:false,init:function(){},index:function(){return this._index},code:function(){return this._code},name:function(){return this._name},semiMajorAxis:function(){return this._semiMajorAxis},semiMinorAxis:function(){return this._semiMinorAxis},flattening:function(){return this._flattening},eccentricitySquared:function(){return this._eccentricitySquared},userDefined:function(){return this._userDefined}});var Geodetic=CoordinateSystem.extend({init:function(ellipsoid,datum){this._ellipsoid=ellipsoid;this._datum=datum;this.coordinateType="geodetic"},convert:function(source,targetCoordSys,coordinateType,precision){return this.baseConvert(source,targetCoordSys)},convertToGeodetic:function(source){return source},convertFromGeodetic:function(source){return source}});var MGRS=CoordinateSystem.extend({EPSILON:1.75e-7,letterLocation:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],LETTER_A:0,LETTER_B:1,LETTER_C:2,LETTER_D:3,LETTER_E:4,LETTER_F:5,LETTER_G:6,LETTER_H:7,LETTER_I:8,LETTER_J:9,LETTER_K:10,LETTER_L:11,LETTER_M:12,LETTER_N:13,LETTER_O:14,LETTER_P:15,LETTER_Q:16,LETTER_R:17,LETTER_S:18,LETTER_T:19,LETTER_U:20,LETTER_V:21,LETTER_W:22,LETTER_X:23,LETTER_Y:24,LETTER_Z:25,ONEHT:1e5,TWOMIL:2e6,TRUE:1,FALSE:0,PI:3.141592653589793,PI_OVER_2:PI/2,PI_OVER_180:PI/180,MIN_EASTING:1e5,MAX_EASTING:9e5,MIN_NORTHING:0,MAX_NORTHING:1e7,MAX_PRECISION:5,MIN_MGRS_NON_POLAR_LAT:-80*(PI/180),MAX_MGRS_NON_POLAR_LAT:84*(PI/180),MIN_EAST_NORTH:0,MAX_EAST_NORTH:3999999,_6:6*(PI/180),_8:8*(PI/180),_72:72*(PI/180),_80:80*(PI/180),_80_5:80.5*(PI/180),_84_5:84.5*(PI/180),_500000:5e5,CLARKE_1866:"CC",CLARKE_1880:"CD",BESSEL_1841:"BR",BESSEL_1841_NAMIBIA:"BN",EPSILON2:499e-6,Latitude_Band_Table:[{letter:2,min_northing:11e5,north:-72,south:-80.5,northing_offset:0},{letter:3,min_northing:2e6,north:-64,south:-72,northing_offset:2e6},{letter:4,min_northing:28e5,north:-56,south:-64,northing_offset:2e6},{letter:5,min_northing:37e5,north:-48,south:-56,northing_offset:2e6},{letter:6,min_northing:46e5,north:-40,south:-48,northing_offset:4e6},{letter:7,min_northing:55e5,north:-32,south:-40,northing_offset:4e6},{letter:9,min_northing:64e5,north:-24,south:-32,northing_offset:6e6},{letter:10,min_northing:73e5,north:-16,south:-24,northing_offset:6e6},{letter:11,min_northing:82e5,north:-8,south:-16,northing_offset:8e6},{letter:12,min_northing:91e5,north:0,south:-8,northing_offset:8e6},{letter:13,min_northing:0,north:8,south:0,northing_offset:0},{letter:15,min_northing:8e5,north:16,south:8,northing_offset:0},{letter:16,min_northing:17e5,north:24,south:16,northing_offset:0},{letter:17,min_northing:26e5,north:32,south:24,northing_offset:2e6},{letter:18,min_northing:35e5,north:40,south:32,northing_offset:2e6},{letter:19,min_northing:44e5,north:48,south:40,northing_offset:4e6},{letter:20,min_northing:53e5,north:56,south:48,northing_offset:4e6},{letter:21,min_northing:62e5,north:64,south:56,northing_offset:6e6},{letter:22,min_northing:7e6,north:72,south:64,northing_offset:6e6},{letter:23,min_northing:79e5,north:84.5,south:72,northing_offset:6e6}],UPS_Constant_Table:[{letter:0,ltr2_low_value:9,ltr2_high_value:25,ltr3_high_value:25,false_easting:8e5,false_northing:8e5},{letter:1,ltr2_low_value:0,ltr2_high_value:17,ltr3_high_value:25,false_easting:2e6,false_northing:8e5},{letter:24,ltr2_low_value:9,ltr2_high_value:25,ltr3_high_value:15,false_easting:8e5,false_northing:13e5},{letter:25,ltr2_low_value:0,ltr2_high_value:9,ltr3_high_value:15,false_easting:2e6,false_northing:13e5}],computeScale:function(prec){var scale=1e5;switch(prec){case 0:scale=1e5;break;case 1:scale=1e4;break;case 2:scale=1e3;break;case 3:scale=100;break;case 4:scale=10;break;case 5:scale=1;break;default:break}return scale},makeMGRSString:function(results,zone,letters,easting,northing,precision){var i;var j;var divisor;var east;var north;var alphabet=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"];i=0;if(zone)results.MGRSString=zone;for(j=0;j<3;j++)results.MGRSString+=alphabet[letters[j]];divisor=this.computeScale(precision);easting=easting%1e5;if(easting>=99999.5)easting=99999;east=Math.floor((easting+this.EPSILON2)/divisor);var eastPadding=precision-east.toString().length;for(var k=0;k<eastPadding;k++){east="0"+east}results.MGRSString+=east;northing=northing%1e5;if(northing>=99999.5)northing=99999;north=Math.floor(northing/divisor);var northPadding=precision-north.toString().length;for(var k=0;k<northPadding;k++){north="0"+north}results.MGRSString+=north},breakMGRSString:function(MGRSString,results){var num_digits;var num_letters;var i=0;var j=0;while(MGRSString.charAt(i)===" ")i++;j=i;while(!isNaN(MGRSString.charAt(i))&&MGRSString.charAt(i)!=="")i++;num_digits=i-j;if(num_digits<=2)if(num_digits>0){var zone_string="";zone_string=MGRSString.substring(j,j+2);results.zone=parseInt(zone_string);if(results.zone<1||results.zone>60)throw new CoordinateConversionException(ErrorMessages_usngString)}else results.zone=0;else throw new CoordinateConversionException(ErrorMessages_mgrsString);j=i;while(isNaN(MGRSString.charAt(i)))i++;num_letters=i-j;if(num_letters==3){results.letters[0]=this.letterLocation.indexOf(MGRSString.charAt(j).toUpperCase());if(results.letters[0]==this.letterLocation.indexOf(this.LETTER_I)||results.letters[0]==this.letterLocation.indexOf(this.LETTER_O))throw new CoordinateConversionException(ErrorMessages_usngString);results.letters[1]=this.letterLocation.indexOf(MGRSString.charAt(j+1).toUpperCase());if(results.letters[1]==this.letterLocation.indexOf(this.LETTER_I)||results.letters[1]==this.letterLocation.indexOf(this.LETTER_O))throw new CoordinateConversionException(ErrorMessages_usngString);results.letters[2]=this.letterLocation.indexOf(MGRSString.charAt(j+2).toUpperCase());if(results.letters[2]==this.letterLocation.indexOf(this.LETTER_I)||results.letters[2]==this.letterLocation.indexOf(this.LETTER_O))throw new CoordinateConversionException(ErrorMessages_usngString)}else throw new CoordinateConversionException(ErrorMessages_mgrsString);j=i;while(!isNaN(MGRSString.charAt(i))&&MGRSString.charAt(i)!=="")i++;num_digits=i-j;if(num_digits<=10&&num_digits%2==0){var n;var east_string=[];var north_string=[];var east;var north;var multiplier;n=num_digits/2;results.precision=n;if(n>0){east_string=MGRSString.substring(j,j+n);east_string[n]=0;east=east_string;north_string=MGRSString.substring(j+n,j+n+n);north_string[n]=0;north=north_string;multiplier=this.computeScale(n);results.easting=east*multiplier;results.northing=north*multiplier}else{results.easting=0;results.northing=0}}else throw new CoordinateConversionException(ErrorMessages_mgrsString)},init:function(ellipsoid,datum){this.ups=new UPS(ellipsoid,datum);this.utm=new UTM(ellipsoid,datum);this._ellipsoid=ellipsoid;this._datum=datum;this.coordinateType="militaryGridReferenceSystem"},convert:function(source,targetCoordSys,coordinateType){var override=0;if(targetCoordSys.getCoordinateType()=="universalTransverseMercator"){override=targetCoordSys.override()}if(coordinateType=="universalTransverseMercator"&&override==0){return this.convertToUTM(source)}else if(coordinateType=="universalPolarStereographic"){return this.convertToUPS(source)}else{return this.baseConvert(source,targetCoordSys)}},convertFromGeodetic:function(source){var precision=5;var utmCoordinates;var upsCoordinates;var latitude=source.latitude();var longitude=source.longitude();if(latitude<-this.PI_OVER_2||latitude>this.PI_OVER_2){throw new CoordinateConversionException(ErrorMessages_latitude)}if(longitude<-this.PI-this.EPSILON||longitude>2*this.PI+this.EPSILON){throw new CoordinateConversionException(ErrorMessages_longitude)}if(precision<0||precision>this.MAX_PRECISION)throw new CoordinateConversionException(ErrorMessages_precision);var temp;if(latitude>=this.MIN_MGRS_NON_POLAR_LAT-this.EPSILON&&latitude<this.MAX_MGRS_NON_POLAR_LAT+this.EPSILON){utmCoordinates=this.utm.convertFromGeodetic(source);temp=this.fromUTM(utmCoordinates,longitude,latitude,precision)}else{upsCoordinates=this.ups.convertFromGeodetic(source);temp=this.fromUPS(upsCoordinates,precision)}var target=new MGRSorUSNGCoordinates;target.setCoordinateType("militaryGridReferenceSystem");target.set(temp.MGRSString());return target},convertToGeodetic:function(source){var mgrsorUSNGCoordinates=source;var utmCoordinates;var upsCoordinates;var target;var results={zone:null,letters:[],easting:null,northing:null,precision:null};this.breakMGRSString(mgrsorUSNGCoordinates.MGRSString(),results);if(results.zone){utmCoordinates=this.toUTM(results.zone,results.letters,results.easting,results.northing,results.precision);target=this.utm.convertToGeodetic(utmCoordinates);if(utmCoordinates.getWarningMessage().length>0){target.setWarningMessage(utmCoordinates.getWarningMessage())}}else{upsCoordinates=this.toUPS(results.letters,results.easting,results.northing);target=this.ups.convertToGeodetic(upsCoordinates)}return target},convertFromUTM:function(utmCoordinates,precision){var zone=utmCoordinates.zone();var hemisphere=utmCoordinates.hemisphere();var easting=utmCoordinates.easting();var northing=utmCoordinates.northing();var geodeticCoordinates;var upsCoordinates;var mgrsorUSNGCoordinates;if(zone<1||zone>60)throw new CoordinateConversionException(ErrorMessages_zone);if(hemisphere!="S"&&hemisphere!="N")throw new CoordinateConversionException(ErrorMessages_hemisphere);if(easting<this.MIN_EASTING||easting>this.MAX_EASTING)throw new CoordinateConversionException(ErrorMessages_easting);if(northing<this.MIN_NORTHING||northing>this.MAX_NORTHING)throw CoordinateConversionException(ErrorMessages_northing);if(precision<0||precision>this.MAX_PRECISION)throw new CoordinateConversionException(ErrorMessages_precision);geodeticCoordinates=this.utm.convertToGeodetic(utmCoordinates);var latitude=geodeticCoordinates.latitude();if(latitude>=this.MIN_MGRS_NON_POLAR_LAT-this.EPSILON&&latitude<this.MAX_MGRS_NON_POLAR_LAT+this.EPSILON)mgrsorUSNGCoordinates=this.fromUTM(utmCoordinates,geodeticCoordinates.longitude(),latitude,precision);else{upsCoordinates=this.ups.convertFromGeodetic(geodeticCoordinates);mgrsorUSNGCoordinates=this.fromUPS(upsCoordinates,precision)}return mgrsorUSNGCoordinates},convertToUTM:function(mgrsorUSNGCoordinates){var utmCoordinates;var geodeticCoordinates;var upsCoordinates;var mgrsString=mgrsorUSNGCoordinates.MGRSString();var results={zone:null,letters:[],easting:null,northing:null,precision:null};this.breakMGRSString(mgrsString,results);if(results.zone){utmCoordinates=this.toUTM(results.zone,results.letters,results.easting,results.northing,results.precision);this.utm.convertToGeodetic(utmCoordinates)}else{upsCoordinates=this.toUPS(results.letters,results.easting,results.northing);geodeticCoordinates=this.ups.convertToGeodetic(upsCoordinates);utmCoordinates=this.utm.convertFromGeodetic(geodeticCoordinates)}return utmCoordinates},convertFromUPS:function(upsCoordinates,precision){var index=0;var hemisphere=upsCoordinates.hemisphere();var easting=upsCoordinates.easting();var northing=upsCoordinates.northing();var utmCoordinates;var geodeticCoordinates;var mgrsorUSNGCoordinates;if(hemisphere!="N"&&hemisphere!="S")throw new CoordinateConversionException(ErrorMessages_hemisphere);if(easting<this.MIN_EAST_NORTH||easting>this.MAX_EAST_NORTH)throw new CoordinateConversionException(ErrorMessages_easting);if(northing<this.MIN_EAST_NORTH||northing>this.MAX_EAST_NORTH)throw new CoordinateConversionException(ErrorMessages_northing);if(precision<0||precision>this.MAX_PRECISION)throw new CoordinateConversionException(ErrorMessages_precision);geodeticCoordinates=this.ups.convertToGeodetic(upsCoordinates);var latitude=geodeticCoordinates.latitude();if(latitude<this.MIN_MGRS_NON_POLAR_LAT-this.EPSILON||latitude>=this.MAX_MGRS_NON_POLAR_LAT+this.EPSILON)mgrsorUSNGCoordinates=this.fromUPS(upsCoordinates,precision);else{utmCoordinates=this.utm.convertFromGeodetic(geodeticCoordinates);var longitude=geodeticCoordinates.longitude();mgrsorUSNGCoordinates=this.fromUTM(utmCoordinates,longitude,latitude,precision)}return mgrsorUSNGCoordinates},convertToUPS:function(mgrsorUSNGCoordinates){var index=0;var upsCoordinates;var geodeticCoordinates;var utmCoordinates;var results={zone:null,letters:null,easting:null,northing:null,precision:null};this.breakMGRSString(mgrsorUSNGCoordinates.MGRSString(),results.zone,results.letters,results.easting,results.northing,results.precision);if(!results.zone){upsCoordinates=this.toUPS(results.letters,results.easting,results.northing);geodeticCoordinates=this.ups.convertToGeodetic(upsCoordinates)}else{utmCoordinates=this.toUTM(results.zone,results.letters,results.easting,results.northing,results.precision);geodeticCoordinates=this.utm.convertToGeodetic(utmCoordinates);if(utmCoordinates.getWarningMessage().length>0){geodeticCoordinates.setWarningMessage(utmCoordinates.getWarningMessage())}upsCoordinates=this.ups.convertFromGeodetic(geodeticCoordinates)}return upsCoordinates},fromUTM:function(utmCoordinates,longitude,latitude,precision){var pattern_offset;var grid_northing;var ltr2_low_value;var ltr2_high_value;var letters=[];var MGRSString;var override=0;var natural_zone;var zone=utmCoordinates.zone();var hemisphere=utmCoordinates.hemisphere();var easting=utmCoordinates.easting();var northing=utmCoordinates.northing();var letterResults={letter:null};this.getLatitudeLetter(latitude,letterResults);letters[0]=letterResults.letter;var pad=this.EPSILON2/6378137;if(longitude<this.PI){natural_zone=31+(longitude+pad)/this._6}else{natural_zone=(longitude+pad)/this._6-29}natural_zone=Math.floor(natural_zone);if(natural_zone>60)natural_zone=1;if(zone!=natural_zone){var utmParams=new UTMParameters;utmParams.setOverride(natural_zone);var utmOverride=new UTM(this._ellipsoid,this._datum);utmOverride.setCSParameters(utmParams);var geodeticCoordinates=new GeodeticCoordinates("geodetic","",longitude,latitude,0);var utmCoordinatesOverride=utmOverride.convertFromGeodetic(geodeticCoordinates);zone=utmCoordinatesOverride.zone();hemisphere=utmCoordinatesOverride.hemisphere();easting=utmCoordinatesOverride.easting();northing=utmCoordinatesOverride.northing()}if(letters[0]==this.LETTER_V){if(zone==31&&easting>=this._500000)override=32}else if(letters[0]==this.LETTER_X){if(zone==32&&easting<this._500000)override=31;else if(zone==32&&easting>=this._500000||zone==34&&easting<this._500000)override=33;else if(zone==34&&easting>=this._500000||zone==36&&easting<this._500000)override=35;else if(zone==36&&easting>=this._500000)override=37}if(override){var utmParams=new UTMParameters;utmParams.setOverride(override);var utmOverride=new UTM(this._ellipsoid,this._datum);utmOverride.setCSParameters(utmParams);var geodeticCoordinates=new GeodeticCoordinates("geodetic","",longitude,latitude,0);var utmCoordinatesOverride=utmOverride.convertFromGeodetic(geodeticCoordinates);zone=utmCoordinatesOverride.zone();hemisphere=utmCoordinatesOverride.hemisphere();easting=utmCoordinatesOverride.easting();northing=utmCoordinatesOverride.northing()}var divisor=this.computeScale(precision);easting=(parseFloat(easting)+this.EPSILON2)/divisor*divisor;northing=(parseFloat(northing)+this.EPSILON2)/divisor*divisor;easting=Math.floor(easting);northing=Math.floor(northing);if(latitude<=0&&northing==1e7){latitude=0;northing=0}var gridResults={ltr2_low_value:ltr2_low_value,ltr2_high_value:ltr2_high_value,pattern_offset:pattern_offset};this.getGridValues(zone,gridResults);grid_northing=northing;while(grid_northing>=this.TWOMIL){grid_northing=grid_northing-this.TWOMIL}grid_northing=grid_northing+gridResults.pattern_offset;if(grid_northing>=this.TWOMIL)grid_northing=grid_northing-this.TWOMIL;letters[2]=grid_northing/this.ONEHT;letters[2]=Math.floor(letters[2]);if(letters[2]>this.LETTER_H){letters[2]=letters[2]+1;letters[2]=Math.floor(letters[2])}if(letters[2]>this.LETTER_N){letters[2]=letters[2]+1;letters[2]=Math.floor(letters[2])}letters[1]=gridResults.ltr2_low_value+(easting/this.ONEHT-1);letters[1]=Math.floor(letters[1]);if(gridResults.ltr2_low_value==this.LETTER_J&&letters[1]>this.LETTER_N){letters[1]=letters[1]+1}var MGRSStringResults={MGRSString:""};this.makeMGRSString(MGRSStringResults,zone,letters,easting,northing,precision);var target=new MGRSorUSNGCoordinates;target.setCoordinateType("militaryGridReferenceSystem");target.set(MGRSStringResults.MGRSString);target.setPrecision(precision);return target},toUTM:function(zone,letters,easting,northing,precision){var hemisphere;var grid_easting;var grid_northing;var temp_grid_northing=0;var fabs_grid_northing=0;var latitude=0;var longitude=0;var divisor=1;var utmCoordinates;if(letters[0]==this.LETTER_X&&(zone==32||zone==34||zone==36))throw new CoordinateConversionException(ErrorMessages_mgrsString);else if(letters[0]==this.LETTER_V&&zone==31&&letters[1]>this.LETTER_D)throw new CoordinateConversionException(ErrorMessages_mgrsString);else{if(letters[0]<this.LETTER_N)hemisphere="S";else hemisphere="N";var gridResults={ltr2_low_value:this.ltr2_low_value,ltr2_high_value:this.ltr2_high_value,pattern_offset:this.pattern_offset};this.getGridValues(zone,gridResults);if(letters[1]<gridResults.ltr2_low_value||letters[1]>gridResults.ltr2_high_value||letters[2]>this.LETTER_V)throw new CoordinateConversionException(ErrorMessages_mgrsString);grid_easting=(letters[1]-gridResults.ltr2_low_value+1)*this.ONEHT;if(gridResults.ltr2_low_value==this.LETTER_J&&letters[1]>this.LETTER_O)grid_easting=grid_easting-this.ONEHT;var row_letter_northing=letters[2]*this.ONEHT;if(letters[2]>this.LETTER_O)row_letter_northing=row_letter_northing-this.ONEHT;if(letters[2]>this.LETTER_I)row_letter_northing=row_letter_northing-this.ONEHT;if(row_letter_northing>=this.TWOMIL)row_letter_northing=row_letter_northing-this.TWOMIL;var bandResults={min_northing:this.min_northing,northing_offset:this.northing_offset};this.getLatitudeBandMinNorthing(letters[0],bandResults);grid_northing=row_letter_northing-gridResults.pattern_offset;if(grid_northing<0)grid_northing+=TWOMIL;grid_northing+=bandResults.northing_offset;if(grid_northing<bandResults.min_northing)grid_northing+=this.TWOMIL;easting=grid_easting+easting;northing=grid_northing+northing;utmCoordinates=new UTMCoordinates;utmCoordinates.set(zone,hemisphere,easting,northing);var geodeticCoordinates=this.utm.convertToGeodetic(utmCoordinates);var latitude=geodeticCoordinates.latitude();divisor=1e5/this.computeScale(precision);divisor=1e10;if(!this.inLatitudeRange(letters[0],latitude,this.PI_OVER_180/divisor)){var prevBand=letters[0]-1;var nextBand=letters[0]+1;if(letters[0]==this.LETTER_C)prevBand=letters[0];if(letters[0]==this.LETTER_X)nextBand=letters[0];if(prevBand==this.LETTER_I||prevBand==this.LETTER_O)prevBand--;if(nextBand==this.LETTER_I||nextBand==this.LETTER_O)nextBand++;if(this.inLatitudeRange(prevBand,latitude,this.PI_OVER_180/divisor)||this.inLatitudeRange(nextBand,latitude,this.PI_OVER_180/divisor)){utmCoordinates.setWarningMessage("Latitude band boundary cuts across 100km square\n")}else{throw new CoordinateConversionException(ErrorMessages_mgrsString)}}}return utmCoordinates},fromUPS:function(upsCoordinates,precision){var false_easting;var false_northing;var grid_easting;var grid_northing;var ltr2_low_value;var letters=[];var divisor;var index=0;var hemisphere=upsCoordinates.hemisphere();var easting=upsCoordinates.easting();var northing=upsCoordinates.northing();divisor=this.computeScale(precision);easting=Math.floor((easting+this.EPSILON2)/divisor*divisor);northing=Math.floor((northing+this.EPSILON2)/divisor*divisor);if(hemisphere=="N"){if(easting>=this.TWOMIL)letters[0]=this.LETTER_Z;else letters[0]=this.LETTER_Y;index=letters[0]-22;ltr2_low_value=this.UPS_Constant_Table[index].ltr2_low_value;false_easting=this.UPS_Constant_Table[index].false_easting;false_northing=this.UPS_Constant_Table[index].false_northing}else{if(easting>=this.TWOMIL)letters[0]=this.LETTER_B;else letters[0]=this.LETTER_A;ltr2_low_value=this.UPS_Constant_Table[letters[0]].ltr2_low_value;false_easting=this.UPS_Constant_Table[letters[0]].false_easting;false_northing=this.UPS_Constant_Table[letters[0]].false_northing}grid_northing=northing;grid_northing=grid_northing-false_northing;letters[2]=grid_northing/this.ONEHT;letters[2]=Math.floor(letters[2]);if(letters[2]>this.LETTER_H)letters[2]=letters[2]+1;if(letters[2]>this.LETTER_N)letters[2]=letters[2]+1;grid_easting=easting;grid_easting=grid_easting-false_easting;letters[1]=ltr2_low_value+Math.floor(grid_easting/this.ONEHT);letters[1]=Math.floor(letters[1]);if(easting<this.TWOMIL){if(letters[1]>this.LETTER_L)letters[1]=letters[1]+3;if(letters[1]>this.LETTER_U)letters[1]=letters[1]+2}else{if(letters[1]>this.LETTER_C)letters[1]=letters[1]+2;if(letters[1]>this.LETTER_H)letters[1]=letters[1]+1;if(letters[1]>this.LETTER_L)letters[1]=letters[1]+3}var results={MGRSString:""};this.makeMGRSString(results,0,letters,easting,northing,precision);var target=new MGRSorUSNGCoordinates;target.set(results.MGRSString);target.setPrecision(precision);return target},toUPS:function(letters,easting,northing){var ltr2_high_value;var ltr3_high_value;var ltr2_low_value;var false_easting;var false_northing;var grid_easting;var grid_northing;var hemisphere;var index=0;if(letters[0]==this.LETTER_Y||letters[0]==this.LETTER_Z){hemisphere="N";index=letters[0]-22;ltr2_low_value=UPS_Constant_Table[index].ltr2_low_value;ltr2_high_value=UPS_Constant_Table[index].ltr2_high_value;ltr3_high_value=UPS_Constant_Table[index].ltr3_high_value;false_easting=UPS_Constant_Table[index].false_easting;false_northing=UPS_Constant_Table[index].false_northing}else if(letters[0]==this.LETTER_A||letters[0]==this.LETTER_B){hemisphere="S";ltr2_low_value=this.UPS_Constant_Table[letters[0]].ltr2_low_value;ltr2_high_value=this.UPS_Constant_Table[letters[0]].ltr2_high_value;ltr3_high_value=this.UPS_Constant_Table[letters[0]].ltr3_high_value;false_easting=this.UPS_Constant_Table[letters[0]].false_easting;false_northing=this.UPS_Constant_Table[letters[0]].false_northing}else throw new CoordinateConversionException(ErrorMessages_mgrsString);if(letters[1]<ltr2_low_value||letters[1]>ltr2_high_value||(letters[1]==this.LETTER_D||letters[1]==this.LETTER_E||letters[1]==this.LETTER_M||letters[1]==this.LETTER_N||letters[1]==this.LETTER_V||letters[1]==this.LETTER_W)||letters[2]>ltr3_high_value)throw new CoordinateConversionException(ErrorMessages_mgrsString);grid_northing=letters[2]*this.ONEHT+false_northing;if(letters[2]>this.LETTER_I)grid_northing=grid_northing-this.ONEHT;if(letters[2]>this.LETTER_O)grid_northing=grid_northing-this.ONEHT;grid_easting=(letters[1]-ltr2_low_value)*this.ONEHT+false_easting;if(ltr2_low_value!=this.LETTER_A){if(letters[1]>this.LETTER_L)grid_easting=grid_easting-3e5;if(letters[1]>this.LETTER_U)grid_easting=grid_easting-2e5}else{if(letters[1]>this.LETTER_C)grid_easting=grid_easting-2e5;if(letters[1]>this.LETTER_I)grid_easting=grid_easting-ONEHT;if(letters[1]>this.LETTER_L)grid_easting=grid_easting-3e5}easting=grid_easting+easting;northing=grid_northing+northing;var target=new UPSCoordinates;target.set(hemisphere,easting,northing);return target},getGridValues:function(zone,results){var set_number;var aa_pattern;set_number=zone%6;if(!set_number)set_number=6;var MGRSEllipsoidCode=this._ellipsoid.code();if(MGRSEllipsoidCode==this.CLARKE_1866||MGRSEllipsoidCode==this.CLARKE_1880||MGRSEllipsoidCode==this.BESSEL_1841||MGRSEllipsoidCode==this.BESSEL_1841_NAMIBIA)aa_pattern=this.FALSE;else aa_pattern=this.TRUE;if(set_number==1||set_number==4){results.ltr2_low_value=this.LETTER_A;results.ltr2_high_value=this.LETTER_H}else if(set_number==2||set_number==5){results.ltr2_low_value=this.LETTER_J;results.ltr2_high_value=this.LETTER_R}else if(set_number==3||set_number==6){results.ltr2_low_value=this.LETTER_S;results.ltr2_high_value=this.LETTER_Z}if(aa_pattern){if(set_number%2==0)results.pattern_offset=5e5;else results.pattern_offset=0}else{if(set_number%2==0)results.pattern_offset=15e5;else results.pattern_offset=1e6}},getLatitudeBandMinNorthing:function(letter,results){if(letter>=this.LETTER_C&&letter<=this.LETTER_H){results.min_northing=this.Latitude_Band_Table[letter-2].min_northing;results.northing_offset=this.Latitude_Band_Table[letter-2].northing_offset}else if(letter>=this.LETTER_J&&letter<=this.LETTER_N){results.min_northing=this.Latitude_Band_Table[letter-3].min_northing;results.northing_offset=this.Latitude_Band_Table[letter-3].northing_offset}else if(letter>=this.LETTER_P&&letter<=this.LETTER_X){results.min_northing=this.Latitude_Band_Table[letter-4].min_northing;results.northing_offset=this.Latitude_Band_Table[letter-4].northing_offset}else throw new CoordinateConversionException(ErrorMessages_mgrsString)},inLatitudeRange:function(letter,latitude,border){var result=false;var north;var south;if(letter>=this.LETTER_C&&letter<=this.LETTER_H){
north=this.Latitude_Band_Table[letter-2].north*this.PI_OVER_180;south=this.Latitude_Band_Table[letter-2].south*this.PI_OVER_180}else if(letter>=this.LETTER_J&&letter<=this.LETTER_N){north=this.Latitude_Band_Table[letter-3].north*this.PI_OVER_180;south=this.Latitude_Band_Table[letter-3].south*this.PI_OVER_180}else if(letter>=this.LETTER_P&&letter<=this.LETTER_X){north=this.Latitude_Band_Table[letter-4].north*this.PI_OVER_180;south=this.Latitude_Band_Table[letter-4].south*this.PI_OVER_180}else throw new CoordinateConversionException(ErrorMessages_mgrsString);if(south-border<=latitude&&latitude<=north+border)result=true;return result},getLatitudeLetter:function(latitude,results){var band=0;if(latitude>=this._72&&latitude<this._84_5)results.letter=this.LETTER_X;else if(latitude>-this._80_5&&latitude<this._72){band=(latitude+this._80)/this._8+1e-12;if(band<0)band=0;results.letter=this.Latitude_Band_Table[Math.floor(band)].letter}else throw new CoordinateConversionException(ErrorMessages_latitude)}});var PolarStereographic=CoordinateSystem.extend({PI:3.141592653589793,PI_OVER_2:PI/2,PI_OVER_4:PI/4,TWO_PI:2*PI,MIN_SCALE_FACTOR:.1,MAX_SCALE_FACTOR:3,es:.08181919084262188,es_OVER_2:.040909595421311,Southern_Hemisphere:0,Polar_tc:1,Polar_k90:1.0033565552493,Polar_a_mc:6378137,two_Polar_a:12756274,Polar_Standard_Parallel:PI*90/180,Polar_Central_Meridian:0,Polar_False_Easting:0,Polar_False_Northing:0,Polar_Delta_Easting:12713601,Polar_Delta_Northing:12713601,Polar_Scale_Factor:1,init:function(ellipsoid,datum,params){this._ellipsoid=ellipsoid;this._datum=datum;this.coordinateType="polarStereographicScaleFactor";this.setCSParameters(params);var centralMeridian=params.centralMeridian();var scaleFactor=params.scaleFactor();var hemisphere=params.hemisphere();var falseEasting=params.falseEasting();var falseNorthing=params.falseNorthing();var es2;var sinolat,cosolat;var essin;var pow_es;var mc;var one_PLUS_es,one_MINUS_es;var one_PLUS_es_sk,one_MINUS_es_sk;var sk,sk_PLUS_1;var tolerance=1e-15;var count=30;if(scaleFactor<this.MIN_SCALE_FACTOR||scaleFactor>this.MAX_SCALE_FACTOR){throw new CoordinateConversionException(ErrorMessages_scaleFactor)}if(centralMeridian<-this.PI||centralMeridian>this.TWO_PI){throw new CoordinateConversionException(ErrorMessages_centralMeridian)}if(hemisphere!="N"&&hemisphere!="S")throw new CoordinateConversionException(ErrorMessages_hemisphere);var semiMajorAxis=this._ellipsoid.semiMajorAxis();var flattening=this._ellipsoid.flattening();this.Polar_Scale_Factor=scaleFactor;this.Polar_False_Easting=falseEasting;this.Polar_False_Northing=falseNorthing;this.two_Polar_a=2*semiMajorAxis;es2=2*flattening-flattening*flattening;this.es=Math.sqrt(es2);this.es_OVER_2=this.es/2;one_PLUS_es=1+this.es;one_MINUS_es=1-this.es;this.Polar_k90=Math.sqrt(Math.pow(one_PLUS_es,one_PLUS_es)*Math.pow(one_MINUS_es,one_MINUS_es));sk=0;sk_PLUS_1=-1+2*this.Polar_Scale_Factor;while(Math.abs(sk_PLUS_1-sk)>tolerance&&count){sk=sk_PLUS_1;one_PLUS_es_sk=1+this.es*sk;one_MINUS_es_sk=1-this.es*sk;sk_PLUS_1=2*this.Polar_Scale_Factor*Math.sqrt(Math.pow(one_PLUS_es_sk,one_PLUS_es)*Math.pow(one_MINUS_es_sk,one_MINUS_es))/this.Polar_k90-1;count--}if(!count)throw new CoordinateConversionException(ErrorMessages_originLatitude);var standardParallel=0;if(sk_PLUS_1>=-1&&sk_PLUS_1<=1)standardParallel=Math.asin(sk_PLUS_1);else throw new CoordinateConversionException(ErrorMessages_originLatitude);if(hemisphere=="S")standardParallel*=-1;if(centralMeridian>this.PI)centralMeridian-=this.TWO_PI;if(standardParallel<0){this.Southern_Hemisphere=1;this.Polar_Standard_Parallel=-standardParallel;this.Polar_Central_Meridian=-centralMeridian}else{this.Southern_Hemisphere=0;this.Polar_Standard_Parallel=standardParallel;this.Polar_Central_Meridian=centralMeridian}sinolat=Math.sin(this.Polar_Standard_Parallel);if(Math.abs(Math.abs(this.Polar_Standard_Parallel)-this.PI_OVER_2)>1e-10){essin=this.es*sinolat;pow_es=this.polarPow(essin);cosolat=Math.cos(this.Polar_Standard_Parallel);mc=cosolat/Math.sqrt(1-essin*essin);this.Polar_a_mc=semiMajorAxis*mc;this.Polar_tc=Math.tan(this.PI_OVER_4-this.Polar_Standard_Parallel/2)/pow_es}var tempGeodeticCoordinates=new GeodeticCoordinates("geodetic","",centralMeridian,0,0);var tempCoordinates=this.convertFromGeodetic(tempGeodeticCoordinates);this.Polar_Delta_Northing=tempCoordinates.northing();if(this.Polar_False_Northing)this.Polar_Delta_Northing-=this.Polar_False_Northing;if(this.Polar_Delta_Northing<0)this.Polar_Delta_Northing=-this.Polar_Delta_Northing;this.Polar_Delta_Northing*=1.01;this.Polar_Delta_Easting=this.Polar_Delta_Northing},convertFromGeodetic:function(source){var dlam;var slat;var essin;var t;var rho;var pow_es;var easting,northing;var longitude=source.longitude();var latitude=source.latitude();if(latitude<-this.PI_OVER_2||latitude>this.PI_OVER_2){throw new CoordinateConversionException(ErrorMessages_latitude)}else if(latitude<0&&this.Southern_Hemisphere==0){throw new CoordinateConversionException(ErrorMessages_latitude)}else if(latitude>0&&this.Southern_Hemisphere==1){throw new CoordinateConversionException(ErrorMessages_latitude)}if(longitude<-this.PI||longitude>this.TWO_PI){throw new CoordinateConversionException(ErrorMessages_longitude)}if(Math.abs(Math.abs(latitude)-this.PI_OVER_2)<1e-10){easting=this.Polar_False_Easting;northing=this.Polar_False_Northing}else{if(this.Southern_Hemisphere!=0){longitude*=-1;latitude*=-1}dlam=longitude-this.Polar_Central_Meridian;if(dlam>this.PI){dlam-=this.TWO_PI}if(dlam<-this.PI){dlam+=this.TWO_PI}slat=Math.sin(latitude);essin=this.es*slat;pow_es=this.polarPow(essin);t=Math.tan(this.PI_OVER_4-latitude/2)/pow_es;if(Math.abs(Math.abs(this.Polar_Standard_Parallel)-this.PI_OVER_2)>1e-10)rho=this.Polar_a_mc*t/this.Polar_tc;else rho=this.two_Polar_a*t/this.Polar_k90;if(this.Southern_Hemisphere!=0){easting=-(rho*Math.sin(dlam)-this.Polar_False_Easting);northing=rho*Math.cos(dlam)+this.Polar_False_Northing}else{easting=rho*Math.sin(dlam)+this.Polar_False_Easting;northing=-rho*Math.cos(dlam)+this.Polar_False_Northing}}var target=new MapProjectionCoordinates(null,easting,northing,"");return target},convertToGeodetic:function(source){var dy=0,dx=0;var rho=0;var t;var PHI,sin_PHI;var tempPHI=0;var essin;var pow_es;var delta_radius;var longitude,latitude;var easting=source.easting();var northing=source.northing();var min_easting=this.Polar_False_Easting-this.Polar_Delta_Easting;var max_easting=this.Polar_False_Easting+this.Polar_Delta_Easting;var min_northing=this.Polar_False_Northing-this.Polar_Delta_Northing;var max_northing=this.Polar_False_Northing+this.Polar_Delta_Northing;if(easting>max_easting||easting<min_easting){throw new CoordinateConversionException(ErrorMessages_easting)}if(northing>max_northing||northing<min_northing){throw new CoordinateConversionException(ErrorMessages_northing)}dy=northing-this.Polar_False_Northing;dx=easting-this.Polar_False_Easting;rho=Math.sqrt(dx*dx+dy*dy);delta_radius=Math.sqrt(this.Polar_Delta_Easting*this.Polar_Delta_Easting+this.Polar_Delta_Northing*this.Polar_Delta_Northing);if(rho>delta_radius){throw new CoordinateConversionException(ErrorMessages_radius)}if(dy==0&&dx==0){latitude=this.PI_OVER_2;longitude=this.Polar_Central_Meridian}else{if(this.Southern_Hemisphere!=0){dy*=-1;dx*=-1}if(Math.abs(Math.abs(this.Polar_Standard_Parallel)-this.PI_OVER_2)>1e-10)t=rho*this.Polar_tc/this.Polar_a_mc;else t=rho*this.Polar_k90/this.two_Polar_a;PHI=this.PI_OVER_2-2*Math.atan(t);while(Math.abs(PHI-tempPHI)>1e-10){tempPHI=PHI;sin_PHI=Math.sin(PHI);essin=this.es*sin_PHI;pow_es=this.polarPow(essin);PHI=this.PI_OVER_2-2*Math.atan(t*pow_es)}latitude=PHI;longitude=this.Polar_Central_Meridian+Math.atan2(dx,-dy);if(longitude>this.PI)longitude-=this.TWO_PI;else if(longitude<-this.PI)longitude+=this.TWO_PI;if(latitude>this.PI_OVER_2)latitude=this.PI_OVER_2;else if(latitude<-this.PI_OVER_2)latitude=-this.PI_OVER_2;if(longitude>this.PI)longitude=this.PI;else if(longitude<-this.PI)longitude=-this.PI}if(this.Southern_Hemisphere!=0){latitude*=-1;longitude*=-1}target=new GeodeticCoordinates("geodetic","",longitude,latitude,0);return target},polarPow:function(esSin){return Math.pow((1-esSin)/(1+esSin),this.es_OVER_2)}});var TransverseMercator=CoordinateSystem.extend({ellipsoid:null,datum:null,mapParameters:null,N_TERMS:6,MAX_TERMS:8,PI:3.141592653589793,PI_OVER_2:this.PI/2,MAX_DELTA_LONG:this.PI*70/180,MIN_SCALE_FACTOR:.1,MAX_SCALE_FACTOR:10,TranMerc_aCoeff:[],TranMerc_bCoeff:[],TranMerc_eps:null,TranMerc_K0R4:null,TranMerc_K0R4inv:null,TranMerc_aCoeff:[],TranMerc_bCoeff:[],TranMerc_Origin_Lat:null,TranMerc_Origin_Long:null,TranMerc_False_Northing:null,TranMerc_False_Easting:null,TranMerc_Scale_Factor:null,TranMerc_Delta_Easting:null,TranMerc_Delta_Northing:null,init:function(ellipsoid,datum,mapParameters){this._ellipsoid=ellipsoid;this._datum=datum;this._parameters=mapParameters;this.TranMerc_Origin_Lat=mapParameters.originLatitude();this.TranMerc_Origin_Long=mapParameters.centralMeridian();this.TranMerc_False_Northing=mapParameters.falseNorthing();this.TranMerc_False_Easting=mapParameters.falseEasting();this.TranMerc_Scale_Factor=mapParameters.scaleFactor();this.TranMerc_Delta_Easting=2e7;this.TranMerc_Delta_Northing=1e7;var TranMerc_b;var flattening=this._ellipsoid.flattening();var invFlattening=1/flattening;if(this.TranMerc_Origin_Lat<-this.PI_OVER_2||this.TranMerc_Origin_Lat>this.PI_OVER_2){throw new CoordinateConversionException(ErrorMessages_originLatitude)}if(this.TranMerc_Origin_Long<-this.PI||this.TranMerc_Origin_Long>2*this.PI){throw new CoordinateConversionException(ErrorMessages_centralMeridian)}if(this.TranMerc_Scale_Factor<this.MIN_SCALE_FACTOR||this.TranMerc_Scale_Factor>this.MAX_SCALE_FACTOR){throw new CoordinateConversionException(ErrorMessages_scaleFactor)}if(this.TranMerc_Origin_Long>this.PI)this.TranMerc_Origin_Long-=2*this.PI;this.TranMerc_eps=Math.sqrt(2*flattening-flattening*flattening);var n1;var coefficientResults={aCoeff:this.TranMerc_aCoeff,bCoeff:this.TranMerc_bCoeff,R4oa:null};this.generateCoefficients(invFlattening,n1,coefficientResults);this.TranMerc_aCoeff=coefficientResults.aCoeff;this.TranMerc_bCoeff=coefficientResults.bCoeff;this.TranMerc_K0R4=coefficientResults.R4oa*this.TranMerc_Scale_Factor*this._ellipsoid.semiMajorAxis();this.TranMerc_K0R4inv=1/this.TranMerc_K0R4},checkEllipsoid:function(ellipsoid){if(ellipsoid.semiMajorAxis()<=0){throw new CoordinateConversionException(ErrorMessages_semiMajorAxis)}var invF=1/ellipsoid.flattening();if(invF<150){throw new CoordinateConversionException(ErrorMessages_ellipsoidFlattening)}},convertFromGeodetic:function(source){var longitude=source.longitude();var latitude=source.latitude();if(longitude>this.PI)longitude-=2*this.PI;if(longitude<-this.PI)longitude+=2*this.PI;var lamda=longitude-this.TranMerc_Origin_Long;if(lamda>this.PI)lamda-=2*this.PI;if(lamda<-this.PI)lamda+=2*this.PI;this.checkLatLon(latitude,lamda);var eastingNorthingResults={easting:null,northing:null};this.latLonToNorthingEasting(latitude,longitude,eastingNorthingResults);var falseEastingNorthingResults={easting:null,northing:null};this.latLonToNorthingEasting(this.TranMerc_Origin_Lat,this.TranMerc_Origin_Long,falseEastingNorthingResults);eastingNorthingResults.easting+=this.TranMerc_False_Easting-falseEastingNorthingResults.easting;eastingNorthingResults.northing+=this.TranMerc_False_Northing-falseEastingNorthingResults.northing;var warning;var invFlattening=1/this._ellipsoid.flattening();if(invFlattening<290||invFlattening>301)warning="Eccentricity is outside range that algorithm accuracy has been tested.";var coord=new MapProjectionCoordinates(undefined,eastingNorthingResults.easting,eastingNorthingResults.northing,warning);return coord},latLonToNorthingEasting:function(latitude,longitude,results){var lamda=longitude-this.TranMerc_Origin_Long;if(lamda>this.PI)lamda-=2*this.PI;if(lamda<-this.PI)lamda+=2*this.PI;this.checkLatLon(latitude,lamda);var cosLam=Math.cos(lamda);var sinLam=Math.sin(lamda);var cosPhi=Math.cos(latitude);var sinPhi=Math.sin(latitude);var P,part1,part2,denom,cosChi,sinChi;var U,V;var hyperbolicResults={c2ku:[],s2ku:[]};var trigResults={c2kv:[],s2kv:[]};P=Math.exp(this.TranMerc_eps*this.aTanH(this.TranMerc_eps*sinPhi));part1=(1+sinPhi)/P;part2=(1-sinPhi)*P;denom=part1+part2;cosChi=2*cosPhi/denom;sinChi=(part1-part2)/denom;U=this.aTanH(cosChi*sinLam);V=Math.atan2(sinChi,cosChi*cosLam);this.computeHyperbolicSeries(2*U,hyperbolicResults);this.computeTrigSeries(2*V,trigResults);var xStar=0;var yStar=0;for(var k=this.N_TERMS-1;k>=0;k--){xStar+=this.TranMerc_aCoeff[k]*hyperbolicResults.s2ku[k]*trigResults.c2kv[k];yStar+=this.TranMerc_aCoeff[k]*hyperbolicResults.c2ku[k]*trigResults.s2kv[k]}xStar+=U;yStar+=V;results.easting=this.TranMerc_K0R4*xStar;results.northing=this.TranMerc_K0R4*yStar},convertToGeodetic:function(source){var easting=source.easting();var northing=source.northing();if(easting<this.TranMerc_False_Easting-this.TranMerc_Delta_Easting||easting>this.TranMerc_False_Easting+this.TranMerc_Delta_Easting){throw new CoordinateConversionException(ErrorMessages_easting)}if(northing<this.TranMerc_False_Northing-this.TranMerc_Delta_Northing||northing>this.TranMerc_False_Northing+this.TranMerc_Delta_Northing){throw new CoordinateConversionException(ErrorMessages_northing)}var eastingNorthingResults={falseEasting:null,falseNorthing:null};this.latLonToNorthingEasting(this.TranMerc_Origin_Lat,this.TranMerc_Origin_Long,eastingNorthingResults);easting-=this.TranMerc_False_Easting-eastingNorthingResults.falseEasting;northing-=this.TranMerc_False_Northing-eastingNorthingResults.falseNorthing;var latLonResults={latitude:null,longitude:null};this.northingEastingToLatLon(northing,easting,latLonResults);var longitude=latLonResults.longitude<=-this.PI?latLonResults.longitude+2*this.PI:latLonResults.longitude;var latitude=latLonResults.latitude;if(Math.abs(latitude)>90*this.PI/180){throw new CoordinateConversionException(ErrorMessages_northing)}if(longitude>this.PI){longitude-=2*this.PI;if(Math.abs(longitude)>this.PI)throw new CoordinateConversionException(ErrorMessages_easting)}else if(longitude<-this.PI){longitude+=2*this.PI;if(Math.abs(longitude)>this.PI)throw new CoordinateConversionException(ErrorMessages_easting)}var warning="";var invFlattening=1/this._ellipsoid.flattening();if(invFlattening<290||invFlattening>301)warning="Eccentricity is outside range that algorithm accuracy has been tested.";return new GeodeticCoordinates("geodetic",warning,longitude,latitude,0)},northingEastingToLatLon:function(northing,easting,results){var hyperbolicResults={c2ku:[],s2ku:[]};var trigResults={c2kv:[],s2kv:[]};var U,V;var lamda;var sinChi;var xStar=this.TranMerc_K0R4inv*easting;var yStar=this.TranMerc_K0R4inv*northing;this.computeHyperbolicSeries(2*xStar,hyperbolicResults);this.computeTrigSeries(2*yStar,trigResults);U=0;V=0;for(var k=this.N_TERMS-1;k>=0;k--){U+=this.TranMerc_bCoeff[k]*hyperbolicResults.s2ku[k]*trigResults.c2kv[k];V+=this.TranMerc_bCoeff[k]*hyperbolicResults.c2ku[k]*trigResults.s2kv[k]}U+=xStar;V+=yStar;var coshU=Math.cosh(U);var sinhU=Math.sinh(U);var cosV=Math.cos(V);var sinV=Math.sin(V);if(Math.abs(cosV)<1e-11&&Math.abs(coshU)<1e-11)lamda=0;else lamda=Math.atan2(sinhU,cosV);sinChi=sinV/coshU;results.latitude=this.geodeticLat(sinChi,this.TranMerc_eps);results.longitude=this.TranMerc_Origin_Long+lamda},generateCoefficients:function(invfla,n1,results){var n2,n3,n4,n5,n6,n7,n8,n9,n10,coeff;n1=1/(2*invfla-1);n2=n1*n1;n3=n2*n1;n4=n3*n1;n5=n4*n1;n6=n5*n1;n7=n6*n1;n8=n7*n1;n9=n8*n1;n10=n9*n1;coeff=0;coeff+=-18975107*n8/50803200;coeff+=72161*n7/387072;coeff+=7891*n6/37800;coeff+=-127*n5/288;coeff+=41*n4/180;coeff+=5*n3/16;coeff+=-2*n2/3;coeff+=1*n1/2;results.aCoeff[0]=coeff;coeff=0;coeff+=148003883*n8/174182400;coeff+=13769*n7/28800;coeff+=-1983433*n6/1935360;coeff+=281*n5/630;coeff+=557*n4/1440;coeff+=-3*n3/5;coeff+=13*n2/48;results.aCoeff[1]=coeff;coeff=0;coeff+=79682431*n8/79833600;coeff+=-67102379*n7/29030400;coeff+=167603*n6/181440;coeff+=15061*n5/26880;coeff+=-103*n4/140;coeff+=61*n3/240;results.aCoeff[2]=coeff;coeff=0;coeff+=-40176129013*n8/7664025600;coeff+=97445*n7/49896;coeff+=6601661*n6/7257600;coeff+=-179*n5/168;coeff+=49561*n4/161280;results.aCoeff[3]=coeff;coeff=0;coeff+=2605413599*n8/622702080;coeff+=14644087*n7/9123840;coeff+=-3418889*n6/1995840;coeff+=34729*n5/80640;results.aCoeff[4]=coeff;coeff=0;coeff+=175214326799*n8/58118860800;coeff+=-30705481*n7/10378368;coeff+=212378941*n6/319334400;results.aCoeff[5]=coeff;coeff=0;coeff+=-16759934899*n8/3113510400;coeff+=1522256789*n7/1383782400;results.aCoeff[6]=coeff;coeff=0;coeff+=1424729850961*n8/743921418240;results.aCoeff[7]=coeff;coeff=0;coeff+=-7944359*n8/67737600;coeff+=5406467*n7/38707200;coeff+=-96199*n6/604800;coeff+=81*n5/512;coeff+=1*n4/360;coeff+=-37*n3/96;coeff+=2*n2/3;coeff+=-1*n1/2;results.bCoeff[0]=coeff;coeff=0;coeff+=-24749483*n8/348364800;coeff+=-51841*n7/1209600;coeff+=1118711*n6/3870720;coeff+=-46*n5/105;coeff+=437*n4/1440;coeff+=-1*n3/15;coeff+=-1*n2/48;results.bCoeff[1]=coeff;coeff=0;coeff+=6457463*n8/17740800;coeff+=-9261899*n7/58060800;coeff+=-5569*n6/90720;coeff+=209*n5/4480;coeff+=37*n4/840;coeff+=-17*n3/480;results.bCoeff[2]=coeff;coeff=0;coeff+=-324154477*n8/7664025600;coeff+=-466511*n7/2494800;coeff+=830251*n6/7257600;coeff+=11*n5/504;coeff+=-4397*n4/161280;results.bCoeff[3]=coeff;coeff=0;coeff+=-22894433*n8/124540416;coeff+=8005831*n7/63866880;coeff+=108847*n6/3991680;coeff+=-4583*n5/161280;results.bCoeff[4]=coeff;coeff=0;coeff+=2204645983*n8/12915302400;coeff+=16363163*n7/518918400;coeff+=-20648693*n6/638668800;results.bCoeff[5]=coeff;coeff=0;coeff+=497323811*n8/12454041600;coeff+=-219941297*n7/5535129600;results.bCoeff[6]=coeff;coeff=0;coeff+=-191773887257*n8/3719607091200;results.bCoeff[7]=coeff;coeff=0;coeff+=83349*n10/65536;coeff+=-20825*n9/16384;coeff+=20825*n8/16384;coeff+=-325*n7/256;coeff+=325*n6/256;coeff+=-81*n5/64;coeff+=81*n4/64;coeff+=-5*n3/4;coeff+=5*n2/4;coeff+=-1*n1/1;coeff+=1;results.R4oa=coeff},checkLatLon:function(latitude,deltaLon){if(deltaLon>this.PI)deltaLon-=2*this.PI;if(deltaLon<-this.PI)deltaLon+=2*this.PI;var testAngle=Math.abs(deltaLon);var delta=Math.abs(deltaLon-this.PI);if(delta<testAngle)testAngle=delta;delta=Math.abs(deltaLon+this.PI);if(delta<testAngle)testAngle=delta;delta=this.PI_OVER_2-latitude;if(delta<testAngle)testAngle=delta;delta=this.PI_OVER_2+latitude;if(delta<testAngle)testAngle=delta;if(testAngle>this.MAX_DELTA_LONG){throw new CoordinateConversionException(ErrorMessages_longitude)}},aTanH:function(x){return.5*Math.log((1+x)/(1-x))},geodeticLat:function(sinChi,e){var p;var pSq;var s_old=1e99;var s=sinChi;var onePlusSinChi=1+sinChi;var oneMinusSinChi=1-sinChi;for(var n=0;n<30;n++){p=Math.exp(e*this.aTanH(e*s));pSq=p*p;s=(onePlusSinChi*pSq-oneMinusSinChi)/(onePlusSinChi*pSq+oneMinusSinChi);if(Math.abs(s-s_old)<1e-12){break}s_old=s}return Math.asin(s)},computeHyperbolicSeries:function(twoX,results){results.c2ku[0]=Math.cosh(twoX);results.s2ku[0]=Math.sinh(twoX);results.c2ku[1]=2*results.c2ku[0]*results.c2ku[0]-1;results.s2ku[1]=2*results.c2ku[0]*results.s2ku[0];results.c2ku[2]=results.c2ku[0]*results.c2ku[1]+results.s2ku[0]*results.s2ku[1];results.s2ku[2]=results.c2ku[1]*results.s2ku[0]+results.c2ku[0]*results.s2ku[1];results.c2ku[3]=2*results.c2ku[1]*results.c2ku[1]-1;results.s2ku[3]=2*results.c2ku[1]*results.s2ku[1];results.c2ku[4]=results.c2ku[0]*results.c2ku[3]+results.s2ku[0]*results.s2ku[3];results.s2ku[4]=results.c2ku[3]*results.s2ku[0]+results.c2ku[0]*results.s2ku[3];results.c2ku[5]=2*results.c2ku[2]*results.c2ku[2]-1;results.s2ku[5]=2*results.c2ku[2]*results.s2ku[2];results.c2ku[6]=results.c2ku[0]*results.c2ku[5]+results.s2ku[0]*results.s2ku[5];results.s2ku[6]=results.c2ku[5]*results.s2ku[0]+results.c2ku[0]*results.s2ku[5];results.c2ku[7]=2*results.c2ku[3]*results.c2ku[3]-1;results.s2ku[7]=2*results.c2ku[3]*results.s2ku[3]},computeTrigSeries:function(twoY,results){results.c2kv[0]=Math.cos(twoY);results.s2kv[0]=Math.sin(twoY);results.c2kv[1]=2*results.c2kv[0]*results.c2kv[0]-1;results.s2kv[1]=2*results.c2kv[0]*results.s2kv[0];results.c2kv[2]=results.c2kv[1]*results.c2kv[0]-results.s2kv[1]*results.s2kv[0];results.s2kv[2]=results.c2kv[1]*results.s2kv[0]+results.c2kv[0]*results.s2kv[1];results.c2kv[3]=2*results.c2kv[1]*results.c2kv[1]-1;results.s2kv[3]=2*results.c2kv[1]*results.s2kv[1];results.c2kv[4]=results.c2kv[3]*results.c2kv[0]-results.s2kv[3]*results.s2kv[0];results.s2kv[4]=results.c2kv[3]*results.s2kv[0]+results.c2kv[0]*results.s2kv[3];results.c2kv[5]=2*results.c2kv[2]*results.c2kv[2]-1;results.s2kv[5]=2*results.c2kv[2]*results.s2kv[2];results.c2kv[6]=results.c2kv[5]*results.c2kv[0]-results.s2kv[5]*results.s2kv[0];results.s2kv[6]=results.c2kv[5]*results.s2kv[0]+results.c2kv[0]*results.s2kv[5];results.c2kv[7]=2*results.c2kv[3]*results.c2kv[3]-1;results.s2kv[7]=2*results.c2kv[3]*results.s2kv[3]}});var UPS=CoordinateSystem.extend({EPSILON:1.75e-7,PI:3.141592653589793,PI_OVER:this.PI/2,MAX_LAT:90*(this.PI/180),MAX_ORIGIN_LAT:81.114528*(this.PI/180),MIN_NORTH_LAT:83.5*(this.PI/180),MAX_SOUTH_LAT:-79.5*(this.PI/180),MIN_EAST_NORTH:0,MAX_EAST_NORTH:4e6,UPS_False_Easting:2e6,UPS_False_Northing:2e6,UPS_Origin_Longitude:0,transverseMercatorMap:new Array,UPS_Origin_Latitude:null,polarStereographicMap:new Array,init:function(ellipsoid,datum){this._ellipsoid=ellipsoid;this._datum=datum;this.coordinateType="universalPolarStereographic";UPS_Origin_Latitude=this.MAX_ORIGIN_LAT;var northParams=new PolarStereographicScaleFactorParameters;northParams.setCentralMeridian(this.UPS_Origin_Longitude);northParams.setScaleFactor(.994);northParams.setHemisphere("N");northParams.setFalseEasting(this.UPS_False_Easting);northParams.setFalseNorthing(this.UPS_False_Northing);this.polarStereographicMap["N"]=new PolarStereographic(ellipsoid,datum,northParams);var southParams=new PolarStereographicScaleFactorParameters;southParams.setCentralMeridian(this.UPS_Origin_Longitude);southParams.setScaleFactor(.994);southParams.setHemisphere("S");southParams.setFalseEasting(this.UPS_False_Easting);southParams.setFalseNorthing(this.UPS_False_Northing);this.polarStereographicMap["S"]=new PolarStereographic(ellipsoid,datum,southParams)},convert:function(source,targetCoordSys,coordinateType,precision){var temp_precision=precision;if(temp_precision===undefined||temp_precision===null)temp_precision=5;if(temp_precision===6||temp_precision===7||temp_precision===8)temp_precision=5;if(coordinateType=="militaryGridReferenceSystem"){var temp=targetCoordSys.convertFromUPS(source,temp_precision);return temp.MGRSString()}else if(coordinateType=="usNationalGrid"){var temp=targetCoordSys.convertFromUPS(source,temp_precision);return temp.MGRSString()}else{return this.baseConvert(source,targetCoordSys)}},convertFromGeodetic:function(source){var hemisphere;var longitude=source.longitude();var latitude=source.latitude();if(latitude<-this.MAX_LAT||latitude>this.MAX_LAT){throw new CoordinateConversionException(ErrorMessages_latitude)}else if(latitude<0&&latitude>=this.MAX_SOUTH_LAT+this.EPSILON)throw new CoordinateConversionException(ErrorMessages_latitude);else if(latitude>=0&&latitude<this.MIN_NORTH_LAT-this.EPSILON)throw new CoordinateConversionException(ErrorMessages_latitude);if(longitude<-this.PI||longitude>2*this.PI){throw new CoordinateConversionException(ErrorMessages_longitude)}if(latitude<0){this.UPS_Origin_Latitude=-this.MAX_ORIGIN_LAT;hemisphere="S"}else{this.UPS_Origin_Latitude=this.MAX_ORIGIN_LAT;hemisphere="N"}var polarStereographic=this.polarStereographicMap[hemisphere];var polarStereographicCoordinates=polarStereographic.convertFromGeodetic(source);var easting=polarStereographicCoordinates.easting();var northing=polarStereographicCoordinates.northing();var target=new UPSCoordinates;target.set(hemisphere,easting,northing);return target},convertToGeodetic:function(source){var hemisphere=source.hemisphere();var easting=source.easting();var northing=source.northing();if(hemisphere!="N"&&hemisphere!="S")throw new CoordinateConversionException(ErrorMessages_hemisphere);if(easting<this.MIN_EAST_NORTH||easting>this.MAX_EAST_NORTH)throw new CoordinateConversionException(ErrorMessages_easting);if(northing<this.MIN_EAST_NORTH||northing>this.MAX_EAST_NORTH)throw new CoordinateConversionException(ErrorMessages_northing);if(hemisphere=="N"){this.UPS_Origin_Latitude=this.MAX_ORIGIN_LAT}else if(hemisphere=="S"){this.UPS_Origin_Latitude=-this.MAX_ORIGIN_LAT}var polarStereographicCoordinates=new MapProjectionCoordinates("polarStereographicStandardParallel",easting,northing,null);var polarStereographic=this.polarStereographicMap[hemisphere];var target=polarStereographic.convertToGeodetic(polarStereographicCoordinates);var latitude=target.latitude();if(latitude<0&&latitude>=this.MAX_SOUTH_LAT+this.EPSILON){throw new CoordinateConversionException(ErrorMessages_latitude)}if(latitude>=0&&latitude<this.MIN_NORTH_LAT-this.EPSILON){throw new CoordinateConversionException(ErrorMessages_latitude)}return target}});var USNG=CoordinateSystem.extend({utm:null,ups:null,EPSILON:1.75e-7,letterLocation:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],LETTER_A:0,LETTER_B:1,LETTER_C:2,LETTER_D:3,LETTER_E:4,LETTER_F:5,LETTER_G:6,LETTER_H:7,LETTER_I:8,LETTER_J:9,LETTER_K:10,LETTER_L:11,LETTER_M:12,LETTER_N:13,LETTER_O:14,LETTER_P:15,LETTER_Q:16,LETTER_R:17,LETTER_S:18,LETTER_T:19,LETTER_U:20,LETTER_V:21,LETTER_W:22,LETTER_X:23,LETTER_Y:24,LETTER_Z:25,ONEHT:1e5,TWOMIL:2e6,PI:3.141592653589793,PI_OVER_2:this.PI/2,PI_OVER_180:this.PI/180,MIN_EASTING:1e5,MAX_EASTING:9e5,MIN_NORTHING:0,MAX_NORTHING:1e7,MAX_PRECISION:5,MIN_USNG_NON_POLAR_LAT:-80*(this.PI/180),MAX_USNG_NON_POLAR_LAT:84*(this.PI/180),MIN_EAST_NORTH:0,MAX_EAST_NORTH:3999999,_6:6*(this.PI/180),_8:8*(this.PI/180),_72:72*(this.PI/180),_80:80*(this.PI/180),_80_5:80.5*(this.PI/180),_84_5:84.5*(this.PI/180),_500000:5e5,Latitude_Band_Table:[{letter:2,min_northing:11e5,north:-72,south:-80.5,northing_offset:0},{letter:3,min_northing:2e6,north:-64,south:-72,northing_offset:2e6},{letter:4,min_northing:28e5,north:-56,south:-64,northing_offset:2e6},{letter:5,min_northing:37e5,north:-48,south:-56,northing_offset:2e6},{letter:6,min_northing:46e5,north:-40,south:-48,northing_offset:4e6},{letter:7,min_northing:55e5,north:-32,south:-40,northing_offset:4e6},{letter:9,min_northing:64e5,north:-24,south:-32,northing_offset:6e6},{letter:10,min_northing:73e5,north:-16,south:-24,northing_offset:6e6},{letter:11,min_northing:82e5,north:-8,south:-16,northing_offset:8e6},{letter:12,min_northing:91e5,north:0,south:-8,northing_offset:8e6},{letter:13,min_northing:0,north:8,south:0,northing_offset:0},{letter:15,min_northing:8e5,north:16,south:8,northing_offset:0},{letter:16,min_northing:17e5,north:24,south:16,northing_offset:0},{letter:17,min_northing:26e5,north:32,south:24,northing_offset:2e6},{letter:18,min_northing:35e5,north:40,south:32,northing_offset:2e6},{letter:19,min_northing:44e5,north:48,south:40,northing_offset:4e6},{letter:20,min_northing:53e5,north:56,south:48,northing_offset:4e6},{letter:21,min_northing:62e5,north:64,south:56,northing_offset:6e6},{letter:22,min_northing:7e6,north:72,south:64,northing_offset:6e6},{letter:23,min_northing:79e5,north:84.5,south:72,northing_offset:6e6}],UPS_Constant_Table:[{letter:0,ltr2_low_value:9,ltr2_high_value:25,ltr3_high_value:25,false_easting:8e5,false_northing:8e5},{letter:1,ltr2_low_value:0,ltr2_high_value:17,ltr3_high_value:25,false_easting:2e6,false_northing:8e5},{letter:24,ltr2_low_value:9,ltr2_high_value:25,ltr3_high_value:15,false_easting:8e5,false_northing:13e5},{letter:25,ltr2_low_value:0,ltr2_high_value:9,ltr3_high_value:15,false_easting:2e6,false_northing:13e5}],makeUSNGString:function(results,zone,letters,easting,northing,precision){var i;var j;var divisor;var east;var north;var alphabet=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"];i=0;if(zone)results.USNGString=zone;for(j=0;j<3;j++)results.USNGString+=alphabet[letters[j]];divisor=Math.pow(10,5-precision);easting=easting%1e5;if(easting>=99999.5)easting=99999;east=Math.floor(easting/divisor);var eastPadding=precision-east.toString().length;for(var k=0;k<eastPadding;k++){east="0"+east}results.USNGString+=east;northing=northing%1e5;if(northing>=99999.5)northing=99999;north=Math.floor(northing/divisor);var northPadding=precision-north.toString().length;for(var k=0;k<northPadding;k++){north="0"+north}results.USNGString+=north},breakUSNGString:function(USNGString,results){var num_digits;var num_letters;var i=0;var j=0;while(USNGString.charAt(i)===" ")i++;j=i;while(!isNaN(USNGString.charAt(i))&&USNGString.charAt(i)!=="")i++;num_digits=i-j;if(num_digits<=2)if(num_digits>0){var zone_string="";zone_string=USNGString.substring(j,j+2);results.zone=parseInt(zone_string);if(results.zone<1||results.zone>60)throw new CoordinateConversionException(ErrorMessages_usngString)}else results.zone=0;else throw new CoordinateConversionException(ErrorMessages_usngString);j=i;while(isNaN(USNGString.charAt(i)))i++;num_letters=i-j;if(num_letters==3){results.letters[0]=this.letterLocation.indexOf(USNGString.charAt(j).toUpperCase());if(results.letters[0]==this.letterLocation.indexOf(this.LETTER_I)||results.letters[0]==this.letterLocation.indexOf(this.LETTER_O))throw new CoordinateConversionException(ErrorMessages_usngString);results.letters[1]=this.letterLocation.indexOf(USNGString.charAt(j+1).toUpperCase());if(results.letters[1]==this.letterLocation.indexOf(this.LETTER_I)||results.letters[1]==this.letterLocation.indexOf(this.LETTER_O))throw new CoordinateConversionException(ErrorMessages_usngString);results.letters[2]=this.letterLocation.indexOf(USNGString.charAt(j+2).toUpperCase());if(results.letters[2]==this.letterLocation.indexOf(this.LETTER_I)||results.letters[2]==this.letterLocation.indexOf(this.LETTER_O))throw new CoordinateConversionException(ErrorMessages_usngString)}else throw new CoordinateConversionException(ErrorMessages_usngString);j=i;while(!isNaN(USNGString.charAt(i))&&USNGString.charAt(i)!=="")i++;num_digits=i-j;if(num_digits<=10&&num_digits%2==0){var n;var east_string=[];var north_string=[];var east;var north;var multiplier;n=num_digits/2;results.precision=n;if(n>0){east_string=USNGString.substring(j,j+n);east_string[n]=0;east=east_string;north_string=USNGString.substring(j+n,j+n+n);north_string[n]=0;north=north_string;multiplier=Math.pow(10,5-n);results.easting=east*multiplier;results.northing=north*multiplier}else{results.easting=0;results.northing=0}}else throw new CoordinateConversionException(ErrorMessages_usngString)},init:function(ellipsoid,datum){this.ups=new UPS(ellipsoid,datum);this.utm=new UTM(ellipsoid,datum);this._ellipsoid=ellipsoid;this._datum=datum;this.coordinateType="usNationalGrid"},convert:function(source,targetCoordSys,coordinateType){var override=0;if(targetCoordSys.getCoordinateType()=="universalTransverseMercator"){override=targetCoordSys.override()}if(coordinateType=="universalTransverseMercator"&&override==0){return this.convertToUTM(source)}else if(coordinateType=="universalPolarStereographic"){return this.convertToUPS(source)}else{return this.baseConvert(source,targetCoordSys)}},convertFromGeodetic:function(source){var precision=5;var utmCoordinates;var upsCoordinates;var latitude=source.latitude();var longitude=source.longitude();if(latitude<-this.PI_OVER_2||latitude>this.PI_OVER_2){throw new CoordinateConversionException(ErrorMessages_latitude)}if(longitude<-this.PI||longitude>2*this.PI){throw new CoordinateConversionException(ErrorMessages_longitude)}if(precision<0||precision>this.MAX_PRECISION)throw new CoordinateConversionException(ErrorMessages_precision);var temp;if(latitude>=this.MIN_USNG_NON_POLAR_LAT&&latitude<this.MAX_USNG_NON_POLAR_LAT){utmCoordinates=this.utm.convertFromGeodetic(source);temp=this.fromUTM(utmCoordinates,longitude,latitude,precision)}else{upsCoordinates=this.ups.convertFromGeodetic(source);
temp=this.fromUPS(upsCoordinates,precision)}var target=new MGRSorUSNGCoordinates;target.setCoordinateType("usNationalGrid");target.set(temp.MGRSString());return target},convertToGeodetic:function(source){var utmCoordinates;var upsCoordinates;var usngCoordinates=source;var results={zone:null,letters:[],easting:null,northing:null,precision:null};this.breakUSNGString(usngCoordinates.MGRSString(),results);if(results.zone){utmCoordinates=this.toUTM(results.zone,results.letters,results.easting,results.northing,results.precision);return this.utm.convertToGeodetic(utmCoordinates)}else{upsCoordinates=this.toUPS(results.letters,results.easting,results.northing);return this.ups.convertToGeodetic(upsCoordinates)}},convertFromUTM:function(utmCoordinates,precision){var zone=utmCoordinates.zone();var hemisphere=utmCoordinates.hemisphere();var easting=utmCoordinates.easting();var northing=utmCoordinates.northing();if(zone<1||zone>60)throw new CoordinateConversionException(ErrorMessages_zone);if(hemisphere!="S"&&hemisphere!="N")throw new CoordinateConversionException(ErrorMessages_hemisphere);if(easting<this.MIN_EASTING||easting>this.MAX_EASTING)throw new CoordinateConversionException(ErrorMessages_easting);if(northing<this.MIN_NORTHING||northing>this.MAX_NORTHING)throw new CoordinateConversionException(ErrorMessages_northing);if(precision<0||precision>this.MAX_PRECISION)throw new CoordinateConversionException(ErrorMessages_precision);var geodeticCoordinates;geodeticCoordinates=this.utm.convertToGeodetic(utmCoordinates);var mgrsorUSNGCoordinates;var latitude=geodeticCoordinates.latitude();if(latitude>=this.MIN_USNG_NON_POLAR_LAT-this.EPSILON&&latitude<this.MAX_USNG_NON_POLAR_LAT+this.EPSILON)mgrsorUSNGCoordinates=this.fromUTM(utmCoordinates,geodeticCoordinates.longitude(),latitude,precision);else{var upsCoordinates;upsCoordinates=this.ups.convertFromGeodetic(geodeticCoordinates);mgrsorUSNGCoordinates=this.fromUPS(upsCoordinates,precision)}return mgrsorUSNGCoordinates},convertToUTM:function(mgrsorUSNGCoordinates){var utmCoordinates;var geodeticCoordinates;var upsCoordinates;var results={zone:null,letters:[],easting:null,northing:null,precision:null};this.breakUSNGString(mgrsorUSNGCoordinates.MGRSString(),results);if(results.zone){utmCoordinates=this.toUTM(results.zone,results.letters,results.easting,results.northing,results.precision);geodeticCoordinates=this.utm.convertToGeodetic(utmCoordinates)}else{upsCoordinates=this.toUPS(results.letters,results.easting,results.northing);geodeticCoordinates=this.ups.convertToGeodetic(upsCoordinates);utmCoordinates=this.utm.convertFromGeodetic(geodeticCoordinates)}return utmCoordinates},convertFromUPS:function(upsCoordinates,precision){var index=0;var hemisphere=upsCoordinates.hemisphere();var easting=upsCoordinates.easting();var northing=upsCoordinates.northing();if(hemisphere!="N"&&hemisphere!="S")throw new CoordinateConversionException(ErrorMessages_hemisphere);if(easting<this.MIN_EAST_NORTH||easting>this.MAX_EAST_NORTH)throw new CoordinateConversionException(ErrorMessages_easting);if(northing<this.MIN_EAST_NORTH||northing>this.MAX_EAST_NORTH)throw new CoordinateConversionException(ErrorMessages_northing);if(precision<0||precision>this.MAX_PRECISION)throw new CoordinateConversionException(ErrorMessagesNewprecision);var geodeticCoordinatesResults={geodeticCoordinates:null};this.ups.convertToGeodetic(upsCoordinates,geodeticCoordinatesResults);var mgrsorUSNGCoordinates;var utmCoordinates;var latitude=geodeticCoordinatesResults.geodeticCoordinates.latitude();if(latitude<MIN_USNG_NON_POLAR_LAT+EPSILON||latitude>=MAX_USNG_NON_POLAR_LAT-EPSILON)mgrsorUSNGCoordinates=fromUPS(upsCoordinates,precision);else{utmCoordinates=utm.convertFromGeodetic(geodeticCoordinatesResults.geodeticCoordinates);var longitude=geodeticCoordinatesResults.geodeticCoordinates.longitude();mgrsorUSNGCoordinates=this.fromUTM(utmCoordinates,longitude,latitude,precision)}return mgrsorUSNGCoordinates},convertToUPS:function(mgrsorUSNGCoordinates){var index=0;var upsCoordinates;var geodeticCoordinates;var utmCoordinates;var results={zone:null,letters:null,easting:null,northing:null,precision:null};this.breakUSNGString(mgrsorUSNGCoordinates.MGRSString(),results);if(!results.zone){upsCoordinates=this.toUPS(results.letters,results.easting,results.northing);this.ups.convertToGeodetic(upsCoordinates,geodeticCoordinates)}else{utmCoordinates=toUTM(results.zone,results.letters,results.easting,results.northing,results.precision);geodeticCoordinates=this.utm.convertToGeodetic(utmCoordinates);upsCoordinates=this.ups.convertFromGeodetic(geodeticCoordinates)}return upsCoordinates},fromUTM:function(utmCoordinates,longitude,latitude,precision){var pattern_offset;var grid_northing;var ltr2_low_value;var ltr2_high_value;var letters=[];var override=0;var natural_zone;var zone=utmCoordinates.zone();var hemisphere=utmCoordinates.hemisphere();var easting=utmCoordinates.easting();var northing=utmCoordinates.northing();var letterResults={letter:null};this.getLatitudeLetter(latitude,letterResults);letters[0]=letterResults.letter;if(longitude<this.PI)natural_zone=31+longitude/this._6;else natural_zone=longitude/this._6-29;natural_zone=Math.floor(natural_zone);if(natural_zone>60)natural_zone=1;if(zone!=natural_zone){var utmParams=new UTMParameters;utmParams.setOverride(natural_zone);var utmOverride=new UTM(this._ellipsoid,this._datum);utmOverride.setCSParameters(utmParams);utmOverride.setOverride(utmParams.override());var geodeticCoordinates=new GeodeticCoordinates("geodetic","",longitude,latitude,0);var utmCoordinatesOverride=utmOverride.convertFromGeodetic(geodeticCoordinates);zone=utmCoordinatesOverride.zone();hemisphere=utmCoordinatesOverride.hemisphere();easting=utmCoordinatesOverride.easting();northing=utmCoordinatesOverride.northing()}if(letters[0]==this.LETTER_V){if(zone==31&&easting>=this._500000)override=32}else if(letters[0]==this.LETTER_X){if(zone==32&&easting<this._500000)override=31;else if(zone==32&&easting>=this._500000||zone==34&&easting<this._500000)override=33;else if(zone==34&&easting>=this._500000||zone==36&&easting<this._500000)override=35;else if(zone==36&&easting>=this._500000)override=37}if(override){var utmParams=new UTMParameters;utmParams.setOverride(override);var utmOverride=new UTM(this._ellipsoid,this._datum);utmOverride.setCSParameters(utmParams);utmOverride.setOverride(utmParams.override());var geodeticCoordinates=new GeodeticCoordinates("geodetic","",longitude,latitude,0);var utmCoordinatesOverride=utmOverride.convertFromGeodetic(geodeticCoordinates);zone=utmCoordinatesOverride.zone();hemisphere=utmCoordinatesOverride.hemisphere();easting=utmCoordinatesOverride.easting();northing=utmCoordinatesOverride.northing()}var divisor=Math.pow(10,5-precision);easting=easting/divisor*divisor;northing=northing/divisor*divisor;easting=Math.floor(easting);northing=Math.floor(northing);if(latitude<=0&&northing==1e7){latitude=0;northing=0}var gridResults={ltr2_low_value:ltr2_low_value,ltr2_high_value:ltr2_high_value,pattern_offset:pattern_offset};this.getGridValues(zone,gridResults);grid_northing=northing;while(grid_northing>=this.TWOMIL){grid_northing=grid_northing-this.TWOMIL}grid_northing=grid_northing+gridResults.pattern_offset;if(grid_northing>=this.TWOMIL)grid_northing=grid_northing-this.TWOMIL;letters[2]=grid_northing/this.ONEHT;letters[2]=Math.floor(letters[2]);if(letters[2]>this.LETTER_H){letters[2]=letters[2]+1;letters[2]=Math.floor(letters[2])}if(letters[2]>this.LETTER_N){letters[2]=letters[2]+1;letters[2]=Math.floor(letters[2])}letters[1]=gridResults.ltr2_low_value+(easting/this.ONEHT-1);letters[1]=Math.floor(letters[1]);if(gridResults.ltr2_low_value==this.LETTER_J&&letters[1]>this.LETTER_N){letters[1]=letters[1]+1;letters[1]=Math.floor(letters[1])}var USNGStringResults={USNGString:""};this.makeUSNGString(USNGStringResults,zone,letters,easting,northing,precision);var target=new MGRSorUSNGCoordinates;target.setCoordinateType("usNationalGrid");target.set(USNGStringResults.USNGString);return target},toUTM:function(zone,letters,easting,northing,precision){var hemisphere;var grid_easting;var grid_northing;var temp_grid_northing=0;var fabs_grid_northing=0;var latitude=0;var longitude=0;var divisor=1;var utmCoordinates;if(letters[0]==this.LETTER_X&&(zone==32||zone==34||zone==36))throw new CoordinateConversionException(ErrorMessages_usngString);else if(letters[0]==this.LETTER_V&&zone==31&&letters[1]>this.LETTER_D)throw new CoordinateConversionException(ErrorMessages_usngString);else{if(letters[0]<this.LETTER_N)hemisphere="S";else hemisphere="N";var gridResults={ltr2_low_value:this.ltr2_low_value,ltr2_high_value:this.ltr2_high_value,pattern_offset:this.pattern_offset};this.getGridValues(zone,gridResults);if(letters[1]<gridResults.ltr2_low_value||letters[1]>gridResults.ltr2_high_value||letters[2]>this.LETTER_V)throw new CoordinateConversionException(ErrorMessages_usngString);grid_easting=(letters[1]-gridResults.ltr2_low_value+1)*this.ONEHT;if(gridResults.ltr2_low_value==this.LETTER_J&&letters[1]>this.LETTER_O)grid_easting=grid_easting-this.ONEHT;var row_letter_northing=letters[2]*this.ONEHT;if(letters[2]>this.LETTER_O)row_letter_northing=row_letter_northing-this.ONEHT;if(letters[2]>this.LETTER_I)row_letter_northing=row_letter_northing-this.ONEHT;if(row_letter_northing>=this.TWOMIL)row_letter_northing=row_letter_northing-this.TWOMIL;var bandResults={min_northing:this.min_northing,northing_offset:this.northing_offset};this.getLatitudeBandMinNorthing(letters[0],bandResults);grid_northing=row_letter_northing-gridResults.pattern_offset;if(grid_northing<0)grid_northing+=this.TWOMIL;grid_northing+=bandResults.northing_offset;if(grid_northing<bandResults.min_northing)grid_northing+=this.TWOMIL;easting=grid_easting+easting;northing=grid_northing+northing;utmCoordinates=new UTMCoordinates;utmCoordinates.set(zone,hemisphere,easting,northing);var geodeticCoordinates=this.utm.convertToGeodetic(utmCoordinates);divisor=Math.pow(10,precision);var rangeResults={north:this.upper_lat_limit,south:this.lower_lat_limit};this.getLatitudeRange(letters[0],rangeResults);var latitude=geodeticCoordinates.latitude();if(!(rangeResults.lower_lat_limit-this.PI_OVER_180/divisor<=latitude&&latitude<=rangeResults.upper_lat_limit+this.PI_OVER_180/divisor))utmCoordinates.setWarningMessage("Latitude band boundary cuts across 100km square\n")}return utmCoordinates},fromUPS:function(upsCoordinates,precision){var false_easting;var false_northing;var grid_easting;var grid_northing;var ltr2_low_value;var letters=[];var divisor;var index=0;var hemisphere=upsCoordinates.hemisphere();var easting=upsCoordinates.easting();var northing=upsCoordinates.northing();divisor=Math.pow(10,5-precision);easting=easting/divisor*divisor;northing=northing/divisor*divisor;easting=Math.floor(easting);northing=Math.floor(northing);if(hemisphere=="N"){if(easting>=this.TWOMIL)letters[0]=this.LETTER_Z;else letters[0]=this.LETTER_Y;index=letters[0]-22;ltr2_low_value=this.UPS_Constant_Table[index].ltr2_low_value;false_easting=this.UPS_Constant_Table[index].false_easting;false_northing=this.UPS_Constant_Table[index].false_northing}else{if(easting>=this.TWOMIL)letters[0]=this.LETTER_B;else letters[0]=this.LETTER_A;ltr2_low_value=this.UPS_Constant_Table[letters[0]].ltr2_low_value;false_easting=this.UPS_Constant_Table[letters[0]].false_easting;false_northing=this.UPS_Constant_Table[letters[0]].false_northing}grid_northing=northing;grid_northing=grid_northing-false_northing;letters[2]=grid_northing/this.ONEHT;letters[2]=Math.floor(letters[2]);if(letters[2]>this.LETTER_H)letters[2]=letters[2]+1;if(letters[2]>this.LETTER_N)letters[2]=letters[2]+1;grid_easting=easting;grid_easting=grid_easting-false_easting;letters[1]=ltr2_low_value+grid_easting/this.ONEHT;letters[1]=Math.floor(letters[1]);if(easting<this.TWOMIL){if(letters[1]>this.LETTER_L)letters[1]=letters[1]+3;if(letters[1]>this.LETTER_U)letters[1]=letters[1]+2}else{if(letters[1]>this.LETTER_C)letters[1]=letters[1]+2;if(letters[1]>this.LETTER_H)letters[1]=letters[1]+1;if(letters[1]>this.LETTER_L)letters[1]=letters[1]+3}var results={USNGString:""};this.makeUSNGString(results,0,letters,easting,northing,precision);var target=new MGRSorUSNGCoordinates;target.set(results.USNGString);target.setCoordinateType("usNationalGrid");target.setPrecision(precision);return target},toUPS:function(letters,easting,northing){var ltr2_high_value;var ltr3_high_value;var ltr2_low_value;var false_easting;var false_northing;var grid_easting;var grid_northing;var hemisphere;var index=0;if(letters[0]==this.LETTER_Y||letters[0]==this.LETTER_Z){hemisphere="N";index=letters[0]-22;ltr2_low_value=this.UPS_Constant_Table[index].ltr2_low_value;ltr2_high_value=this.UPS_Constant_Table[index].ltr2_high_value;ltr3_high_value=this.UPS_Constant_Table[index].ltr3_high_value;false_easting=this.UPS_Constant_Table[index].false_easting;false_northing=this.UPS_Constant_Table[index].false_northing}else if(letters[0]==this.LETTER_A||letters[0]==this.LETTER_B){hemisphere="S";ltr2_low_value=this.UPS_Constant_Table[letters[0]].ltr2_low_value;ltr2_high_value=this.UPS_Constant_Table[letters[0]].ltr2_high_value;ltr3_high_value=this.UPS_Constant_Table[letters[0]].ltr3_high_value;false_easting=this.UPS_Constant_Table[letters[0]].false_easting;false_northing=this.UPS_Constant_Table[letters[0]].false_northing}else throw new CoordinateConversionException(ErrorMessages_usngString);if(letters[1]<ltr2_low_value||letters[1]>ltr2_high_value||(letters[1]==this.LETTER_D||letters[1]==this.LETTER_E||letters[1]==this.LETTER_M||letters[1]==this.LETTER_N||letters[1]==this.LETTER_V||letters[1]==this.LETTER_W)||letters[2]>ltr3_high_value)throw new CoordinateConversionException(ErrorMessages_usngString);grid_northing=letters[2]*this.ONEHT+false_northing;if(letters[2]>this.LETTER_I)grid_northing=grid_northing-this.ONEHT;if(letters[2]>this.LETTER_O)grid_northing=grid_northing-this.ONEHT;grid_easting=(letters[1]-ltr2_low_value)*this.ONEHT+false_easting;if(ltr2_low_value!=this.LETTER_A){if(letters[1]>this.LETTER_L)grid_easting=grid_easting-3e5;if(letters[1]>this.LETTER_U)grid_easting=grid_easting-2e5}else{if(letters[1]>this.LETTER_C)grid_easting=grid_easting-2e5;if(letters[1]>this.LETTER_I)grid_easting=grid_easting-ONEHT;if(letters[1]>this.LETTER_L)grid_easting=grid_easting-3e5}easting=grid_easting+easting;northing=grid_northing+northing;var target=new UPSCoordinates;target.set(hemisphere,easting,northing);return target},getGridValues:function(zone,results){var set_number;set_number=zone%6;if(!set_number)set_number=6;if(set_number==1||set_number==4){results.ltr2_low_value=this.LETTER_A;results.ltr2_high_value=this.LETTER_H}else if(set_number==2||set_number==5){results.ltr2_low_value=this.LETTER_J;results.ltr2_high_value=this.LETTER_R}else if(set_number==3||set_number==6){results.ltr2_low_value=this.LETTER_S;results.ltr2_high_value=this.LETTER_Z}if(set_number%2==0)results.pattern_offset=5e5;else results.pattern_offset=0},getLatitudeBandMinNorthing:function(letter,results){if(letter>=this.LETTER_C&&letter<=this.LETTER_H){results.min_northing=this.Latitude_Band_Table[letter-2].min_northing;results.northing_offset=this.Latitude_Band_Table[letter-2].northing_offset}else if(letter>=this.LETTER_J&&letter<=this.LETTER_N){results.min_northing=this.Latitude_Band_Table[letter-3].min_northing;results.northing_offset=this.Latitude_Band_Table[letter-3].northing_offset}else if(letter>=this.LETTER_P&&letter<=this.LETTER_X){results.min_northing=this.Latitude_Band_Table[letter-4].min_northing;results.northing_offset=this.Latitude_Band_Table[letter-4].northing_offset}else throw new CoordinateConversionException(ErrorMessages_usngString)},getLatitudeRange:function(letter,results){if(letter>=this.LETTER_C&&letter<=this.LETTER_H){results.north=this.Latitude_Band_Table[letter-2].north*this.PI_OVER_180;results.south=this.Latitude_Band_Table[letter-2].south*this.PI_OVER_180}else if(letter>=this.LETTER_J&&letter<=this.LETTER_N){results.north=this.Latitude_Band_Table[letter-3].north*this.PI_OVER_180;results.south=this.Latitude_Band_Table[letter-3].south*this.PI_OVER_180}else if(letter>=this.LETTER_P&&letter<=this.LETTER_X){results.north=this.Latitude_Band_Table[letter-4].north*this.PI_OVER_180;results.south=this.Latitude_Band_Table[letter-4].south*this.PI_OVER_180}else throw new CoordinateConversionException(ErrorMessages_usngString)},getLatitudeLetter:function(latitude,results){var band=0;if(latitude>=this._72&&latitude<this._84_5)results.letter=this.LETTER_X;else if(latitude>-this._80_5&&latitude<this._72){band=(latitude+this._80)/this._8+1e-12;if(band<0)band=0;results.letter=this.Latitude_Band_Table[Math.floor(band)].letter}else throw CoordinateConversionException(ErrorMessages_latitude)}});var UTM=CoordinateSystem.extend({PI:3.141592653589793,PI_OVER_180:3.141592653589793/180,MIN_LAT:-80.5*this.PI/180,MAX_LAT:84.5*this.PI/180,MIN_EASTING:1e5,MAX_EASTING:9e5,MIN_NORTHING:0,MAX_NORTHING:1e7,EPSILON:1.75e-7,transverseMercatorMap:new Array,UTM_Override:null,init:function(ellipsoid,datum){this._ellipsoid=ellipsoid;this._datum=datum;this.coordinateType="universalTransverseMercator";this.setCSParameters(new UTMParameters);this.UTM_Override=0;var tmParams=new MapProjection5Parameters;tmParams.setOriginLatitude(0);tmParams.setFalseEasting(5e5);tmParams.setFalseNorthing(0);tmParams.setScaleFactor(.9996);for(var zone=1;zone<=60;zone++){if(zone>=31)tmParams.setCentralMeridian((6*zone-183)*this.PI_OVER_180);else tmParams.setCentralMeridian((6*zone+177)*this.PI_OVER_180);this.transverseMercatorMap[zone]=new TransverseMercator(this._ellipsoid,this._datum,tmParams)}},convert:function(source,targetCoordSys,coordinateType,precision){var temp_precision=precision;if(temp_precision===undefined||temp_precision===null)temp_precision=5;if(temp_precision===6||temp_precision===7||temp_precision===8)temp_precision=5;if(coordinateType=="mgrs"){var temp=targetCoordSys.convertFromUTM(source,temp_precision);return temp}else if(coordinateType=="usng"){var temp=targetCoordSys.convertFromUTM(source,temp_precision);return temp}else{return this.baseConvert(source,targetCoordSys)}},convertFromGeodetic:function(source){var Lat_Degrees;var Long_Degrees;var temp_zone;var hemisphere;var False_Northing=0;var longitude=source.longitude();var latitude=source.latitude();if(latitude<this.MIN_LAT-this.EPSILON||latitude>=this.MAX_LAT+this.EPSILON){throw new CoordinateConversionException(ErrorMessages_latitude)}if(longitude<-this.PI-this.EPSILON||longitude>2*this.PI+this.EPSILON){throw new CoordinateConversionException(ErrorMessages_longitude)}if(latitude>-1e-9&&latitude<0)latitude=0;if(longitude<0)longitude+=2*this.PI+1e-10;Lat_Degrees=Math.floor(latitude*180/this.PI);Long_Degrees=Math.floor(longitude*180/this.PI);if(longitude<PI)temp_zone=Math.floor(31+longitude*180/this.PI/6);else temp_zone=Math.floor(longitude*180/this.PI/6-29);if(temp_zone>60)temp_zone=1;if(this.UTM_Override){if(temp_zone==1&&this.UTM_Override==60)temp_zone=this.UTM_Override;else if(temp_zone==60&&this.UTM_Override==1)temp_zone=this.UTM_Override;else if(temp_zone-1<=this.UTM_Override&&this.UTM_Override<=temp_zone+1)temp_zone=this.UTM_Override;else throw new CoordinateConversionException(ErrorMessages_zoneOverride)}else{if(Lat_Degrees>55&&Lat_Degrees<64&&Long_Degrees>-1&&Long_Degrees<3)temp_zone=31;if(Lat_Degrees>55&&Lat_Degrees<64&&Long_Degrees>2&&Long_Degrees<12)temp_zone=32;if(Lat_Degrees>71&&Long_Degrees>-1&&Long_Degrees<9)temp_zone=31;if(Lat_Degrees>71&&Long_Degrees>8&&Long_Degrees<21)temp_zone=33;if(Lat_Degrees>71&&Long_Degrees>20&&Long_Degrees<33)temp_zone=35;if(Lat_Degrees>71&&Long_Degrees>32&&Long_Degrees<42)temp_zone=37}if(latitude<0){False_Northing=1e7;hemisphere="S"}else hemisphere="N";var tempGeodeticCoordinates=new GeodeticCoordinates("geodetic","",longitude,latitude,0);var transverseMercatorCoordinates=this.transverseMercatorMap[temp_zone].convertFromGeodetic(tempGeodeticCoordinates);var easting=transverseMercatorCoordinates.easting();var northing=transverseMercatorCoordinates.northing()+False_Northing;if(easting<this.MIN_EASTING||easting>this.MAX_EASTING){throw new CoordinateConversionException(ErrorMessages_easting)}if(northing<this.MIN_NORTHING||northing>this.MAX_NORTHING){throw new CoordinateConversionException(ErrorMessages_northing)}var target=new UTMCoordinates;target.set(temp_zone,hemisphere,easting,northing);return target},convertToGeodetic:function(source){var False_Northing=0;var zone=source.zone();var hemisphere=source.hemisphere();var easting=source.easting();var northing=source.northing();if(zone<1||zone>60)throw new CoordinateConversionException(ErrorMessages_zone);if(hemisphere!="S"&&hemisphere!="N")throw new CoordinateConversionException(ErrorMessages_hemisphere);if(easting<this.MIN_EASTING||easting>this.MAX_EASTING)throw new CoordinateConversionException(ErrorMessages_easting);if(northing<this.MIN_NORTHING||northing>this.MAX_NORTHING)throw new CoordinateConversionException(ErrorMessages_northing);if(hemisphere=="S")False_Northing=1e7;var transverseMercatorCoordinates=new MapProjectionCoordinates("transverseMercator",easting,northing-False_Northing,null);var target=this.transverseMercatorMap[zone].convertToGeodetic(transverseMercatorCoordinates);var latitude=target.latitude();if(latitude<this.MIN_LAT-this.EPSILON||latitude>=this.MAX_LAT+this.EPSILON){throw new CoordinateConversionException(ErrorMessages_northing)}return target},override:function(){return this.UTM_Override},setOverride:function(override){this.UTM_Override=override}});var CoordinateSystemParameters=Class.extend({coordinateType:"geodetic",init:function(){},setCoordinateType:function(__coordinateType){this.coordinateType=__coordinateType},getCoordinateType:function(){return this.coordinateType}});var MapProjection5Parameters=CoordinateSystemParameters.extend({_centralMeridian:0,_originLatitude:0,_scaleFactor:1,_falseEasting:0,_falseNorthing:0,init:function(){this.coordinateType="transverseMercator"},setCentralMeridian:function(__centralMeridian){this._centralMeridian=__centralMeridian},setOriginLatitude:function(__originLatitude){this._originLatitude=__originLatitude},setScaleFactor:function(__scaleFactor){this._scaleFactor=__scaleFactor},setFalseEasting:function(__falseEasting){this._falseEasting=__falseEasting},setFalseNorthing:function(__falseNorthing){this._falseNorthing=__falseNorthing},centralMeridian:function(){return this._centralMeridian},originLatitude:function(){return this._originLatitude},scaleFactor:function(){return this._scaleFactor},falseEasting:function(){return this._falseEasting},falseNorthing:function(){return this._falseNorthing}});var PolarStereographicScaleFactorParameters=CoordinateSystemParameters.extend({_centralMeridian:0,_scaleFactor:0,_hemisphere:"N",_falseEasting:0,_falseNorthing:0,init:function(){this.coordinateType="polarStereographicScaleFactor"},setCentralMeridian:function(__centralMeridian){this._centralMeridian=__centralMeridian},setScaleFactor:function(__scaleFactor){this._scaleFactor=__scaleFactor},setHemisphere:function(__hemisphere){this._hemisphere=__hemisphere},setFalseEasting:function(__falseEasting){this._falseEasting=__falseEasting},setFalseNorthing:function(__falseNorthing){this._falseNorthing=__falseNorthing},centralMeridian:function(){return this._centralMeridian},scaleFactor:function(){return this._scaleFactor},hemisphere:function(){return this._hemisphere},falseEasting:function(){return this._falseEasting},falseNorthing:function(){return this._falseNorthing}});var UTMParameters=CoordinateSystemParameters.extend({_zone:32,_override:0,coordinateType:"universalTransverseMercator",init:function(){},set:function(__zone,__override){this._zone=__zone;this._override=__override},setZone:function(__zone){this._zone=__zone},setOverride:function(__override){this._override=__override},zone:function(){return this._zone},override:function(){return this._override}});var CoordinateTuple=Class.extend({coordinateType:"geodetic",errorMessage:"",warningMessage:"",precision:null,init:function(__coordinateType){this.coordinateType=__coordinateType},setCoordinateType:function(__coordinateType){this.coordinateType=__coordinateType},getCoordinateType:function(){return this.coordinateType},set:function(__coordinateType,__warningMessage,__errorMessage){this.coordinateType=__coordinateType;this.warningMessage=__warningMessage;this.errorMessage=__errorMessage},setErrorMessage:function(__errorMessage){this.errorMessage=__errorMessage},errorMessage:function(){return this.errorMessage},setWarningMessage:function(__warningMessage){this.warningMessage=__warningMessage},getWarningMessage:function(){return this.warningMessage},precision:function(){return this.precision},setPrecision:function(precision){this.precision=precision}});var GeodeticCoordinates=CoordinateTuple.extend({_longitude:0,_latitude:0,_height:0,init:function(__coordinateType,__warningMessage,__longitude,__latitude,__height){this.coordinateType=__coordinateType;this._longitude=__longitude;this._latitude=__latitude;this._height=__height;this._warningMessage=__warningMessage},set:function(__longitude,__latitude,__height){this._longitude=__longitude;this._latitude=__latitude;this._height=__height},setLongitude:function(__longitude){this._longitude=__longitude},setLatitude:function(__latitude){this._latitude=__latitude},setHeight:function(__height){this._height=__height},longitude:function(){return this._longitude},latitude:function(){return this._latitude},height:function(){return this._height}});var MapProjectionCoordinates=CoordinateTuple.extend({_easting:0,_northing:0,init:function(__coordinateType,__easting,__northing,__warningMessage){if(typeof __coordinateType==="undefined")__coordinateType="albersEqualAreaConic";this.coordinateType=__coordinateType;this._warningMessage=__warningMessage;this._easting=__easting;this._northing=__northing},set:function(__easting,__northing){this._easting=__easting;this._northing=__northing},setEasting:function(__easting){this._easting=__easting},easting:function(){return this._easting},setNorthing:function(__northing){_northing=this.__northing},northing:function(){return this._northing}});var MGRSorUSNGCoordinates=CoordinateTuple.extend({coordinateString:"31NEA0000000000",init:function(){this.coordinateType="militaryGridReferenceSystem";this.precision=5},set:function(__MGRSString){this.coordinateString=__MGRSString},MGRSString:function(){return this.coordinateString},precision:function(){var temp_precision=precision;if(temp_precision===undefined||temp_precision===null)temp_precision=5;if(temp_precision===6||temp_precision===7||temp_precision===8)temp_precision=5;return temp_precision}});var UPSCoordinates=CoordinateTuple.extend({_hemisphere:"N",_easting:0,_northing:0,init:function(){this.coordinateType="universalPolarStereographic"},set:function(__hemisphere,__easting,__northing){this._hemisphere=__hemisphere;this._easting=__easting;this._northing=__northing},hemisphere:function(){return this._hemisphere},easting:function(){return this._easting},northing:function(){return this._northing}});var UTMCoordinates=CoordinateTuple.extend({_zone:32,_hemisphere:"N",_easting:0,_northing:0,init:function(){this.coordinateType="universalTransverseMercator"},set:function(__zone,__hemisphere,__easting,__northing){this._zone=__zone;this._hemisphere=__hemisphere;this._easting=__easting;this._northing=__northing},setZone:function(__zone){this._zone=__zone},zone:function(){return this._zone},setHemisphere:function(__hemisphere){this._hemisphere=__hemisphere},hemisphere:function(){return this._hemisphere},setEasting:function(__easting){this._easting=__easting},easting:function(){return this._easting},setNorthing:function(__northing){this._northing=__northing},northing:function(){return this._northing}});var CoordinateConversionException=Class.extend({_message:"",init:function(__message){_message=__message},setAllInfo:function(__directionStr,__coordinateSystemName,__separatorStr,__message){this._message+=__directionStr;this._message+=__coordinateSystemName;this._message+=__separatorStr;this._message+=__message},getMessage:function(){return _message}});var ErrorMessages_geoidFileOpenError="Unable to locate geoid data file\n";var ErrorMessages_geoidFileParseError="Unable to read geoid file\n";var ErrorMessages_ellipsoidFileOpenError="Unable to locate ellipsoid data file: ellips.dat\n";var ErrorMessages_ellipsoidFileCloseError="Unable to close ellipsoid file: ellips.dat\n";var ErrorMessages_ellipsoidFileParseError="Unable to read ellipsoid file: ellips.dat\n";var ErrorMessages_ellipse="Ellipsoid library not initialized\n";var ErrorMessages_invalidEllipsoidCode="Invalid ellipsoid code\n";var ErrorMessages_datumFileOpenError="Unable to locate datum data file\n";var ErrorMessages_datumFileCloseError="Unable to close datum file\n";var ErrorMessages_datumFileParseError="Unable to read datum file\n";var ErrorMessages_datumDomain="Invalid local datum domain of validity\n";var ErrorMessages_datumRotation="Rotation values must be between -60.0 and 60.0";var ErrorMessages_datumSigma="Standard error values must be positive, or -1 if unknown\n";var ErrorMessages_datumType="Invalid datum type\n";var ErrorMessages_invalidDatumCode="Invalid datum code\n";var ErrorMessages_notUserDefined="Specified code not user defined\n";var ErrorMessages_ellipseInUse="Ellipsoid is in use by a datum\n";var ErrorMessages_semiMajorAxis="Ellipsoid semi-major axis must be greater than zero\n";var ErrorMessages_ellipsoidFlattening="Inverse flattening must be between 250 and 350\n";var ErrorMessages_orientation="Orientation out of range\n";var ErrorMessages_originLatitude="Origin Latitude (or Standard Parallel or Latitude of True Scale) out of range\n";var ErrorMessages_originLongitude="Origin Longitude (or Longitude Down from Pole) out of range\n";var ErrorMessages_centralMeridian="Central Meridian out of range\n";var ErrorMessages_scaleFactor="Scale Factor out of range\n";var ErrorMessages_zone="Invalid Zone\n";var ErrorMessages_zoneOverride="Invalid Zone Override\n";var ErrorMessages_standardParallel1="Invalid 1st Standard Parallel\n";var ErrorMessages_standardParallel2="Invalid 2nd Standard Parallel\n";var ErrorMessages_standardParallel1_2="1st & 2nd Standard Parallels cannot both be zero\n";var ErrorMessages_standardParallelHemisphere="Standard Parallels cannot be equal and opposite latitudes\n";var ErrorMessages_precision="Precision must be between 0 and 5\n";var ErrorMessages_bngEllipsoid="British National Grid ellipsoid must be Airy\n";var ErrorMessages_nzmgEllipsoid="New Zealand Map Grid ellipsoid must be International\n";var ErrorMessages_webmEllipsoid="Web Mercator ellipsoid must be WGS84\n";var ErrorMessages_webmConversionTo="GeoTrans does not allow conversion to Web Mercator\n";var ErrorMessages_webmInvalidTargetCS="Web Mercator can only be converted to Geodetic.\n";var ErrorMessages_latitude1="Latitude 1 out of range\n";var ErrorMessages_latitude2="Latitude 2 out of range\n";var ErrorMessages_latitude1_2="Latitude 1 and Latitude 2 cannot be equal\n";var ErrorMessages_longitude1="Longitude 1 out of range\n";var ErrorMessages_longitude2="Longitude 2 out of range\n";var ErrorMessages_omercHemisphere="Point 1 and Point 2 cannot be in different hemispheres\n";var ErrorMessages_hemisphere="Invalid Hemisphere\n";var ErrorMessages_radius="Easting/Northing too far from center of projection\n";var ErrorMessages_latitude="Latitude out of range\n";var ErrorMessages_longitude="Longitude out of range\n";var ErrorMessages_easting="Easting/X out of range\n";var ErrorMessages_northing="Northing/Y out of range\n";var ErrorMessages_projection="Point projects into a circle\n";var ErrorMessages_invalidArea="Coordinates are outside valid area\n";var ErrorMessages_bngString="Invalid British National Grid String\n";var ErrorMessages_garsString="Invalid GARS String\n";var ErrorMessages_georefString="Invalid GEOREF String\n";var ErrorMessages_mgrsString="Invalid MGRS String\n";
var ErrorMessages_usngString="Invalid USNG String\n";var ErrorMessages_invalidIndex="Index value outside of valid range\n";var ErrorMessages_invalidName="Invalid name\n";var ErrorMessages_invalidType="Invalid coordinate system type\n";var ErrorMessages_longitude_min="The longitude minute part of the string is greater than 60\n";var ErrorMessages_latitude_min="The latitude minute part of the string is greater than 60\n";