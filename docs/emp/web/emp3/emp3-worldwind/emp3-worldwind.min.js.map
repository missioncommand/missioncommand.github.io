{"version":3,"sources":["../../../src/mapengine/worldwind/worldwind-map-engine.js","../../../src/mapengine/worldwind/EMPWorldWind.js","../../../src/mapengine/worldwind/data/EMPWorldWind.data.js","../../../src/mapengine/worldwind/data/EMPWorldWind.data.EmpLayer.js","../../../src/mapengine/worldwind/data/EMPWorldWind.data.EmpWMSLayer.js","../../../src/mapengine/worldwind/data/EMPWorldWind.data.EmpFeature.js","../../../src/mapengine/worldwind/utils/EMPWorldWind.constants.js","../../../src/mapengine/worldwind/utils/EMPWorldWind.utils.js","../../../src/mapengine/worldwind/controllers/editors/EMPWorldWind.editors.primitiveBuilders.js","../../../src/mapengine/worldwind/controllers/editors/EMPWorldWind.editors.EditorController.js","../../../src/mapengine/worldwind/controllers/eventHandlers/EMPWorldWind.eventHandlers.js","../../../src/mapengine/worldwind/controllers/eventHandlers/EMPWorldWind.eventHandlers.mouse.js","../../../src/mapengine/worldwind/controllers/eventHandlers/EMPWorldWind.eventHandlers.touch.js","../../../src/mapengine/worldwind/controllers/eventHandlers/EMPWorldWind.eventHandlers.drag.js","../../../src/mapengine/worldwind/controllers/eventHandlers/EMPWorldWind.eventHandlers.pointer.js"],"names":["EMPWorldWind","window","emp","engineDefs","worldWindMapEngine","args","empMapInstance","mapInstance","empWorldWind","engineInterface","map","createEngineTemplate","mapEngineExposed","implementation","displayName","version","capabilities","mapType","type3D","type2_5D","formats","GEOJSON_BASIC","plot","draw","edit","GEOJSON_FULL","WMS","version_1_1","version_1_3","elevationData","KML_BASIC","KML_COMPLEX","IMAGE","MILSTD","version2525B","version2525C","AIRSPACE","AOI","settings","milstd","iconSize","labelOption","requirements","wmsCapabilities","projection","flat","initialize","succeed","empWorldWindInstance","engineDirect","name","ref","eventing","StatusChange","status","states","READY","err","console","error","fail","MAP_INSTANCE_INIT_FAILED","view","set","transaction","altitude","bottomLeft","topRight","feature","bufferScale","t1","t2","toRad","Math","PI","items","globalType","location","latitude","lat","longitude","lon","tilt","roll","heading","bounds","west","south","east","north","pow","sin","WorldWind","EARTH_RADIUS","asin","sqrt","cos","format","emp3","api","enums","FeatureTypeEnum","GEO_CIRCLE","properties","radius","GEO_ELLIPSE","max","semiMajor","semiMinor","GEO_RECTANGLE","width","height","GEO_SQUARE","GEO_ACM","coordinates","failures","push","animate","pause","animateCB","getCenter","getBounds","run","eventHandlers","notifyViewChange","call","CameraEventEnum","CAMERA_MOTION_STOPPED","CAMERA_IN_MOTION","centerOnLocation","lookAt","range","overlay","add","rc","failList","util","each","addLayer","success","typeLibrary","Error","coreId","message","level","MINOR","remove","removeLayer","overlayId","bind","this","wms","addWMS","removeWMS","itemsCount","length","plotFeature","featureCount","cbArgs","unplotFeature","mil2525","icon","labels","setLabelStyle","getLatLonFromXY","pickPoint","Vec2","x","y","terrainObject","worldWindow","pickTerrain","position","undefined","visibility","featureId","features","setVisible","visible","refresh","config","prop","value","hasOwnProperty","toLowerCase","setContrast","navigation","enable","setLockState","selection","selectFeatures","failed","capture","screenshot","dataUrl","state","destroy","shutdown","isV2Core","wwd","layers","pixelSize","drawing","editing","dragging","lastInteractionEvent","lockState","MapMotionLockEnum","UNLOCKED","lastRender","selectionStyle","scale","lineColor","fillColor","autoPanning","step","up","down","left","right","labelStyles","V","L","S","AA","AB","AC","H","M","T","T1","CN","C","F","G","H1","H2","J","K","N","P","W","W1","X","Y","Z","prototype","blackContrastLayer","SurfaceSector","Sector","FULL_SPHERE","attributes","interiorColor","Color","drawOutline","whiteContrastLayer","contrastLayer","RenderableLayer","pickEnabled","addRenderable","goToAnimator","GoToAnimator","dragRecognizer","DragRecognizer","canvas","event","drag","eventClass","eventHandler","addEventListener","empOverlay","layer","data","EmpLayer","rootOverlayId","id","redraw","featureKey","result","getLayer","featureKeys","removeFeatureSelection","Position","Location","navigator","travelTime","constants","globeMoveTime","goTo","_completeLookAtMotion","lookAtLocation","callback","_callback","editors","EditorController","updateFeature","parentCoreId","removeFeatureById","messge","empSelections","selected","selectedFeature","select","enableLayer","subLayer","layerExists","enabled","subLayers","getSubLayer","layerType","ARCGIS_93_REST_LAYER","BING_LAYER","IMAGE_LAYER","OSM_LAYER","TMS_LAYER","WMS_LAYER","WMTS_LAYER","wmsLayer","EmpWMSLayer","isFeatureSelected","getFeatureSelection","storeFeatureSelection","deselectProperties","getSelections","isMultiPointPresent","multiPointCollection","getMultiPoint","storeMultiPoint","multiPoint","removeMultiPoint","isAirspacePresent","airspaceCollection","getAirspace","storeAirspace","airspace","removeAirspace","getSinglePoints","singlePointCollection","isSinglePointPresent","getSinglePoint","storeSinglePoint","singlePoint","removeSinglePoint","getSinglePointCount","defined","Object","keys","isSinglePointIdOnHoldPresent","singlePointCollectionIdOnHold","getSinglePointIdOnHold","singlePointCollectionOnHold","storeSinglePointIdOnHold","singlePointId","removeSinglePointIdOnHold","getSinglePointsIdOnHold","getSinglePointsIdOnHoldCount","styles","style","includes","updateFeatureLabelStyle","contrast","renderables","WHITE_CONTRAST","BLACK_CONTRAST","lock","spinGlobe","vertical","horizontal","setTimeout","drawFrame","toDataURL","viewport","linearLocation","description","parentId","_overlay","defineProperty","enumerable","_layer","addFeature","isFeaturePresent","shapes","shape","type","FeatureType","RENDERABLE","addFeatures","addFeatureChild","entity","childEntity","isFeatureChildPresent","parentFeature","childrenFeatureKeys","allocateFeatureChild","parentEntity","addSubLayer","isSubLayerPresent","isLayerEmpty","featuresLength","subOverlaysLength","getFeature","isFeaturePresentById","empFeature","isPrimitive","PRIMITIVE","PRIMITIVE_COLLECTION","isDataSource","DATA_SOURCE","getFeatures","getSubLayers","removeFeatures","removeFeature","removeFeatureSelections","showFeatures","showFeature","oMultiPoint","childrenFeatureId","childrenEntity","featureType","ENTITY","show","billboard","reRenderBillboardRequired","path","polyline","polygon","label","rectangle","empCesium","COMPOUND_ENTITY","airspaceLabelPresent","airspaceLabel","get","oAirspace","oSinglePoint","removeSubLayers","showSubLayers","clearLayer","LayerType","showLayer","isVisible","utils","deallocateFeatureChild","worldwind","removeRenderable","renderable","deallocateFeature","allocateFeature","featureChildrenLength","childrenFeatures","getFeatureChildrenEntityArray","index","childrenFeature","clearFeature","removeFeatureChild","featureChildrenEntityArray","removeSubLayer","subOverlay","SubLayers","removeSubLayerById","subLayersLength","layerNames","_wms","activeLayers","join","service","url","sector","levelZeroDelta","numLevels","size","timeString","_wmsLayer","WmsLayer","EmpFeature","_feature","_id","_altitudeMode","CLAMP_TO_GROUND","altMode","shapesCount","i","altitudeMode","_selected","highlighted","addShapes","primitives","Array","isArray","userProperties","primitive","clearShapes","MAX_HEIGHT","globeWasMoving","globeWasZooming","extentBufferFactor","USE_DATA_SOURCE","NO_PANNING","METERS_PER_INCH","SCALE_LINE_LENGTH","propertyDefaults","FILL_COLOR_HEX","LINE_COLOR_HEX","LINE_WIDTH","selectionProperties","COLOR_HEX","WIDTH","SCALE","GROUND_PRIMITIVE","OVERLAY_LAYER","TERRAIN_LAYER","EntityType","BILLBOARD","BOX","CORRIDOR","CYLINDER","DESCRIPTION","ELLIPSE","ELLIPSOID","LABEL","MODEL","ORIENTATION","PATH","POLYGON","POLYLINE","POLYLINE_VOLUME","POSITION","RECTANGLE","VIEW_FROM","WALL","KML","MultiPointRenderType","JSON","GEOJSON","DATA_URL","CANVAS","CANVAS_LABEL_ONLY","SVG","SVG_LABEL_ONLY","SinglePointAltitudeRangeMode","LOW_RANGE","MID_RANGE","HIGHEST_RANGE","RendererWorker","A","B","D","LabelStyle","REQUIRED_LABELS","COMMON_LABELS","ALL_LABELS","RendererSettings","standard","Symbology_2525Bch2_USAS_13_14","Symbology_2525C","modifierLookup","QUANTITY","REDUCED_OR_REINFORCED","STAFF_COMMENTS","ADDITIONAL_INFO_1","ADDITIONAL_INFO_2","ADDITIONAL_INFO_3","EVALUATION_RATING","COMBAT_EFFECTIVENESS","SIGNATURE_EQUIPMENT","HIGHER_FORMATION","HOSTILE","IFF_SIF","DIRECTION_OF_MOVEMENT","OFFSET_INDICATOR","UNIQUE_DESIGNATOR_1","UNIQUE_DESIGNATOR_2","EQUIPMENT_TYPE","DATE_TIME_GROUP","DATE_TIME_GROUP_2","ALTITUDE_DEPTH","LOCATION","SPEED","SPECIAL_C2_HEADQUARTERS","DISTANCE","AZIMUTH","FILL_COLOR","LINE_COLOR","X_OFFSET","X_UNITS","Y_OFFSET","Y_UNITS","NAME","STANDARD","getEventCoordinates","canvasCoordinates","clientX","clientY","screenX","screenY","updateModifierLabels","iconLabels","iconPixelSize","mod","modifiedModifiers","property","convertModifierStringTo2525","modifiers","showModLabels","standardModifiers","sModifier","modValue","parse","stringify","Modifiers","convertSymbolStandardToRendererFormat","checkForRequiredModifiers","item","symbolCode","oAM","oAN","basicSymbolCode","symbolDef","lonDistance","overrides","armyc2","c2sd","renderer","utilities","SymbolUtilities","getBasicSymbolID","checkSymbolStandard","SymbolDefTable","getSymbolDef","distance","azimuth","drawCategory","DRAW_CATEGORY_CIRCULAR_PARAMETERED_AUTOSHAPE","slice","DRAW_CATEGORY_RECTANGULAR_PARAMETERED_AUTOSHAPE","DRAW_CATEGORY_SECTOR_PARAMETERED_AUTOSHAPE","splice","newVal","DRAW_CATEGORY_CIRCULAR_RANGEFAN_AUTOSHAPE","DRAW_CATEGORY_TWO_POINT_RECT_PARAMETERED_AUTOSHAPE","DRAW_CATEGORY_LINE","isNaN","coord0","coord1","pointCartographic0","pointCartographic1","dist","greatCircleDistance","modifiersCopy","helpers","copyObject","featureMilStdVersionType","MILSTD_2525C","MILSTD_2525B","indexOf","log","_hex6ToRGBA","hex","replace","r","g","b","parseInt","substring","_hex8ToRGBA","a","hexToRGBA","alpha","normalize","newHex","boundsWidth","boundsHeight","primitiveBuilders","createShapeAttributes","highlightAttributes","selectedLineColor","selectedFillColor","labelColor","selectedLabelColor","ShapeAttributes","GEO_MIL_SYMBOL","GEO_POINT","PlacemarkAttributes","imageSource","iconUrl","configuration","baseUrl","labelAttributes","TextAttributes","offset","Offset","OFFSET_FRACTION","imageScale","imageColor","YELLOW","color","GEO_TEXT","depthTest","labelStyle","red","green","blue","family","font","justification","horizontalAlignment","GEO_PATH","GEO_POLYGON","strokeStyle","strokeColor","outlineColor","BLACK","drawInterior","strokeWidth","lineWidth","outlineWidth","outlineStippleFactor","stippleFactor","outlineStipplePattern","stipplePattern","constructAirControlMeasure","primitivePolygon","boundaries","len","maxAlt","Polygon","ABSOLUTE","extrude","constructSurfaceCircle","circlePrimitive","SurfaceCircle","constructSurfaceEllipse","ellipsePrimitive","SurfaceEllipse","constructSurfacePolyline","pathPrimitive","locations","SurfacePolyline","constructSurfacePolylineFromGeoJSON","geoJSON","polylinePrimitive","lineOpacity","constructPlacemark","placemark","eyeDistanceScaling","Placemark","alwaysOnTop","constructSurfacePolygon","polygonPrimitive","boundaryLen","j","numBounds","subBoundary","SurfacePolygon","constructSurfacePolygonFromGeoJSON","geometry","constructSurfaceRectangle","rectPrimitive","SurfaceRectangle","constructText","textPrimitive","GeographicText","constructTextFromGeoJSON","selectedColor","_constructSinglePointMilStdSymbol","imageInfo","imageCenter","imageBounds","imageOffset","selectedImage","drawLeaderLine","leaderLineAttributes","RED","MilStdIconRenderer","Render","getCenterPoint","getImageBounds","toDataUrl","WHITE","LINECOLOR","FILLCOLOR","_constructMultiPointMilStdFeature","componentFeature","lineCount","subGeoJSON","bbox","featureCoords","positions","split","trim","sec","web","SECWebRenderer","RenderSymbol","processModifiers","enhancedModifiers","override","constructMilStdSymbol","concat","asyncPlotKMLFeature","kmlFilePromise","kmlLayer","wwFeature","encodeURIComponent","KmlFile","then","kmlFile","buildShapes","empLayer","throttle","fn","threshold","scope","last","deferTimer","context","now","Date","arguments","clearTimeout","apply","viewEventType","ViewChange","triggerRenderUpdate","extractFeatureFromEvent","mouseEvent","empEventingArgs","obj","pickList","pick","objects","isTerrain","userObject","target","mouse","click","clickEvent","Pointer","EventType","SINGLE_CLICK","dblclick","dblClickEvent","DBL_CLICK","mousedown","mousedownEvent","MOUSEDOWN","mouseup","mouseupEvent","MOUSEUP","wheel","wheelDeltaY","preventDefault","NO_MOTION","NO_ZOOM_NO_PAN","NO_ZOOM","mousemove","coords","MOVE","element","srcElement","originalTarget","smartAreaBuffer","elementBounds","getBoundingClientRect","pan","buttons","NO_PAN","SMART_MOTION","offsetX","offsetY","touch","touchstart","touches","touchend","touchcancel","touchmove","began","changed","ended","pointer","pointerdown","pointerup","pointermove"],"mappings":"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","file":"emp3-worldwind.min.js","sourcesContent":["var EMPWorldWind = window.EMPWorldWind || {};\nvar emp = window.emp || {};\nemp.engineDefs = emp.engineDefs || {};\n\n/**\n * @classdesc EMP3 WorldWind Map Engine Interface\n *\n * @class Instantiates a WorldWind map for EMP\n * @param args\n * @returns {engineInterface}\n */\nemp.engineDefs.worldWindMapEngine = function(args) {\n\n  var empMapInstance = args.mapInstance;\n  /** @type EMPWorldWind.map# */\n  var empWorldWind;\n\n  var engineInterface = emp.map.createEngineTemplate(),\n    mapEngineExposed = engineInterface;\n\n  engineInterface.implementation.displayName = \"WorldWind Map Engine\";\n  engineInterface.implementation.version = \"1.0.0\";\n  engineInterface.capabilities.mapType.type3D = true;\n  engineInterface.capabilities.mapType.type2_5D = true;\n  engineInterface.capabilities.mapType.type3D = true;\n  engineInterface.capabilities.formats.GEOJSON_BASIC.plot = true;\n  engineInterface.capabilities.formats.GEOJSON_BASIC.draw = true;\n  engineInterface.capabilities.formats.GEOJSON_BASIC.edit = true;\n  engineInterface.capabilities.formats.GEOJSON_FULL.plot = true;\n  engineInterface.capabilities.formats.GEOJSON_FULL.edit = true;\n  engineInterface.capabilities.formats.WMS.version_1_1 = true;\n  engineInterface.capabilities.formats.WMS.version_1_3 = true;\n  engineInterface.capabilities.formats.WMS.elevationData = true;\n  engineInterface.capabilities.formats.KML_BASIC.plot = true;\n  engineInterface.capabilities.formats.KML_BASIC.draw = true;\n  engineInterface.capabilities.formats.KML_BASIC.edit = true;\n  engineInterface.capabilities.formats.KML_COMPLEX.plot = true;\n  engineInterface.capabilities.formats.IMAGE.plot = true;\n  engineInterface.capabilities.formats.MILSTD.version2525B.plot = true;\n  engineInterface.capabilities.formats.MILSTD.version2525B.draw = true;\n  engineInterface.capabilities.formats.MILSTD.version2525B.edit = true;\n  engineInterface.capabilities.formats.MILSTD.version2525C.plot = true;\n  engineInterface.capabilities.formats.MILSTD.version2525C.draw = true;\n  engineInterface.capabilities.formats.MILSTD.version2525C.edit = true;\n  engineInterface.capabilities.formats.AIRSPACE.plot = true;\n  engineInterface.capabilities.formats.AIRSPACE.draw = true;\n  engineInterface.capabilities.formats.AIRSPACE.edit = true;\n  engineInterface.capabilities.formats.AOI.plot = true;\n  engineInterface.capabilities.formats.AOI.draw = true;\n  engineInterface.capabilities.formats.AOI.edit = true;\n  engineInterface.capabilities.settings.milstd.iconSize = true;\n  engineInterface.capabilities.settings.milstd.labelOption = true;\n  engineInterface.requirements.wmsCapabilities = true;\n  engineInterface.capabilities.projection.flat = false;\n\n  /**\n   * Initialization\n   * @param {EMPWorldWind.map} empWorldWindInstance\n   */\n  engineInterface.initialize.succeed = function(empWorldWindInstance) {\n    // Add initialization code here\n    try {\n      empWorldWind = empWorldWindInstance;\n      empWorldWind.mapEngineExposed = mapEngineExposed;\n      emp.map.engineDirect = {name: \"worldwind\", ref: empWorldWind};\n\n      // Notify application that the map is ready to receive data\n      empMapInstance.eventing.StatusChange({\n        status: emp.map.states.READY\n      });\n    } catch (err) {\n      window.console.error(\"Error initializing WorldWind \", err);\n    }\n  };\n\n  /**\n   * Indicates a failed loading\n   */\n  engineInterface.initialize.fail = function() {\n    empMapInstance.eventing.StatusChange({\n      status: emp.map.states.MAP_INSTANCE_INIT_FAILED\n    });\n  };\n\n  /**\n   * @todo drop this functionality into the map itself and expose a simpler call\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.view.set = function(transaction) {\n    var args, altitude, bottomLeft, topRight, feature, bufferScale,\n      t1, t2,\n      toRad = Math.PI / 180.0; // save a few divisions later\n\n    switch (transaction.items[0].globalType) {\n      case \"view\":\n        if (transaction.items[0].location) {\n          // Set camera\n          args = {\n            latitude: transaction.items[0].location.lat,\n            longitude: transaction.items[0].location.lon,\n            altitude: transaction.items[0].altitude,\n            tilt: transaction.items[0].tilt,\n            roll: transaction.items[0].roll,\n            heading: transaction.items[0].heading\n          };\n        } else if (transaction.items[0].bounds) {\n          // Zoom to overlay\n\n          // Express lat/lon as radians\n          bottomLeft = {\n            lat: transaction.items[0].bounds.west * toRad,\n            lon: transaction.items[0].bounds.south * toRad\n          };\n\n          topRight = {\n            lat: transaction.items[0].bounds.east * toRad,\n            lon: transaction.items[0].bounds.north * toRad\n          };\n\n          t1 = Math.pow(Math.sin((topRight.lat - bottomLeft.lat) / 2), 2);\n          t2 = Math.pow(Math.sin((topRight.lon - bottomLeft.lon) / 2), 2);\n\n          // Haversine formula\n          // TODO see if we can replace this with WorldWind functionality\n          altitude = 2 * WorldWind.EARTH_RADIUS * Math.asin(Math.sqrt(t1 + Math.cos(topRight.lat) * Math.cos(bottomLeft.lat) * t2));\n\n          args = {\n            latitude: (transaction.items[0].bounds.north + transaction.items[0].bounds.south) / 2,\n            longitude: (transaction.items[0].bounds.east + transaction.items[0].bounds.west) / 2,\n            altitude: altitude,\n            tilt: 0,\n            roll: 0,\n            heading: 0\n          };\n        }\n        break;\n      case \"feature\":\n        bufferScale = 2.25; // Assume conic view from the camera\n        feature = transaction.items[0];\n        switch (feature.format) {\n          case emp3.api.enums.FeatureTypeEnum.GEO_CIRCLE:\n            altitude = feature.properties.radius * bufferScale;\n            break;\n          case emp3.api.enums.FeatureTypeEnum.GEO_ELLIPSE:\n            altitude = Math.max(feature.properties.semiMajor, feature.properties.semiMinor) * bufferScale;\n            break;\n          case emp3.api.enums.FeatureTypeEnum.GEO_RECTANGLE:\n            altitude = Math.max(feature.properties.width, feature.properties.height) * bufferScale;\n            break;\n          case emp3.api.enums.FeatureTypeEnum.GEO_SQUARE:\n            altitude = feature.properties.width * bufferScale;\n            break;\n          case emp3.api.enums.FeatureTypeEnum.GEO_ACM: // TODO compute bounding box diagonal distance\n          default:\n            altitude = 10000; // Default to 10000m\n        }\n\n        args = {\n          latitude: transaction.items[0].coordinates[1],\n          longitude: transaction.items[0].coordinates[0],\n          altitude: altitude,\n          tilt: 0,\n          roll: 0,\n          heading: 0\n        };\n        break;\n      default:\n        transaction.failures.push(transaction.items[0]);\n    }\n\n    // Check if we are animating\n    if (transaction.items[0].animate === true) {\n      transaction.pause();\n\n      args.animate = true;\n      args.animateCB = function() {\n\n        // If we animated update the returned values\n        transaction.items[0].location = {\n          lat: empWorldWind.getCenter().latitude,\n          lon: empWorldWind.getCenter().longitude\n        };\n        transaction.items[0].bounds = empWorldWind.getBounds();\n\n        transaction.run();\n        // Notify movement ended\n        EMPWorldWind.eventHandlers.notifyViewChange.call(empWorldWind, emp3.api.enums.CameraEventEnum.CAMERA_MOTION_STOPPED);\n      };\n    }\n\n    // Notify start of movement\n    EMPWorldWind.eventHandlers.notifyViewChange.call(empWorldWind, emp3.api.enums.CameraEventEnum.CAMERA_IN_MOTION);\n    empWorldWind.centerOnLocation(args);\n\n    // Set initial transaction return values, to be overwritten if the move is animated\n    transaction.items[0].location = {\n      lat: empWorldWind.getCenter().latitude,\n      lon: empWorldWind.getCenter().longitude\n    };\n    transaction.items[0].bounds = empWorldWind.getBounds();\n  };\n\n  /**\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.lookAt.set = function(transaction) {\n    var args = {\n      latitude: transaction.items[0].latitude,\n      longitude: transaction.items[0].longitude,\n      altitude: transaction.items[0].altitude,\n      range: transaction.items[0].range,\n      tilt: transaction.items[0].tilt,\n      heading: transaction.items[0].heading\n    };\n\n    if (transaction.items[0].animate === true) {\n      transaction.pause();\n\n      args.animate = true;\n      args.animateCB = function() {\n        transaction.run();\n        // Notify movement ended\n        EMPWorldWind.eventHandlers.notifyViewChange.call(empWorldWind, emp3.api.enums.CameraEventEnum.CAMERA_MOTION_STOPPED);\n      };\n    }\n    EMPWorldWind.eventHandlers.notifyViewChange.call(empWorldWind, emp3.api.enums.CameraEventEnum.CAMERA_IN_MOTION);\n\n    empWorldWind.lookAt(args);\n  };\n\n  /**\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.overlay.add = function(transaction) {\n    var rc,\n      failList = [];\n\n    emp.util.each(transaction.items, function(overlay) {\n      rc = empWorldWind.addLayer(overlay);\n\n      if (!rc.success) {\n        failList.push(new emp.typeLibrary.Error({\n          coreId: overlay.coreId,\n          message: rc.message,\n          level: emp.typeLibrary.Error.level.MINOR\n        }));\n      }\n    });\n\n    transaction.fail(failList);\n  };\n\n  /**\n   *\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.overlay.remove = function(transaction) {\n    var rc = {},\n      failList = [];\n\n    emp.util.each(transaction.items, function(overlay) {\n      rc = empWorldWind.removeLayer(overlay.overlayId);\n      if (!rc.success) {\n        failList.push(new emp.typeLibrary.Error({\n          coreId: overlay.coreId,\n          message: rc.message\n        }));\n      }\n    }.bind(this));\n\n    transaction.fail(failList);\n  };\n\n  /**\n   *\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.wms.add = function(transaction) {\n    emp.util.each(transaction.items, function(wms) {\n      empWorldWind.addWMS(wms);\n    }.bind(this));\n  };\n\n  /**\n   *\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.wms.remove = function(transaction) {\n    emp.util.each(transaction.items, function(wms) {\n      empWorldWind.removeWMS(wms);\n    }.bind(this));\n  };\n\n  /**\n   *\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.feature.add = function(transaction) {\n    var feature,\n      itemsCount = transaction.items.length;\n\n    // Pause the transaction\n    transaction.pause();\n\n    while (itemsCount) {\n      // Note pre-decrement\n      feature = transaction.items[--itemsCount];\n\n      empWorldWind.plotFeature(feature, function(featureCount, cbArgs) {\n        if (!cbArgs.success) {\n          transaction.fail(new emp.typeLibrary.Error({\n            feature: cbArgs.feature\n          }));\n        }\n\n        // All items have been processed\n        if (featureCount === 0) {\n          transaction.run();\n        }\n      }.bind(this, itemsCount));\n    }\n  };\n\n  /**\n   *\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.feature.remove = function(transaction) {\n    var rc;\n    emp.util.each(transaction.items, function(feature) {\n      rc = empWorldWind.unplotFeature(feature);\n      if (!rc.success) {\n        transaction.fail(new emp.typeLibrary.Error({\n          message: rc.message\n        }));\n      }\n    }.bind(this));\n  };\n\n  /**\n   *\n   * @param {emp.typeLibrary.Transaction} transaction\n   * @deprecated\n   */\n  engineInterface.settings.mil2525.icon.labels.set = function(transaction) {\n    empWorldWind.setLabelStyle(transaction.items[0]);\n  };\n\n  /**\n   *\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.view.getLatLonFromXY = function(transaction) {\n    var pickPoint = new WorldWind.Vec2(transaction.items[0].x, transaction.items[0].y);\n    var terrainObject = empWorldWind.worldWindow.pickTerrain(pickPoint).terrainObject();\n    transaction.items[0].lat = terrainObject ? terrainObject.position.latitude : undefined;\n    transaction.items[0].lon = terrainObject ? terrainObject.position.longitude : undefined;\n  };\n\n  /**\n   *\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.visibility.set = function(transaction) {\n    emp.util.each(transaction.items, function(feature) {\n      if (feature.featureId in empWorldWind.features) {\n        empWorldWind.features[feature.featureId].setVisible(feature.visible);\n      }\n    }.bind(this));\n    empWorldWind.refresh();\n  };\n\n  /**\n   *\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.map.config = function(transaction) {\n    // Iterate through each transaction item, check for properties and apply them\n    emp.util.each(transaction.items, function(config) {\n      var prop, value;\n      for (prop in config) {\n        if (config.hasOwnProperty(prop)) {\n          // Skip meta data fields\n          if (prop === \"messageId\") {\n            continue;\n          }\n\n          value = config[prop];\n\n          switch (prop.toLowerCase()) {\n            case \"brightness\":\n              empWorldWind.setContrast(value);\n              break;\n            case \"milstdlabels\":\n              empWorldWind.setLabelStyle(value);\n              break;\n            default:\n              transaction.fail(new emp.typeLibrary.Error({\n                message: 'Config property ' + prop + ' is not supported by this engine'\n              }));\n          }\n        }\n      }\n    }.bind(this));\n  };\n\n  /**\n   *\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.navigation.enable = function(transaction) {\n    empWorldWind.setLockState(transaction.items[0]);\n  };\n\n  /**\n   *\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.selection.set = function(transaction) {\n    var rc = empWorldWind.selectFeatures(transaction.items);\n    transaction.failures = rc.failed;\n  };\n\n  /**\n   * @param {emp.typeLibrary.Transaction} transaction\n   */\n  engineInterface.capture.screenshot = function(transaction) {\n    return transaction.items[0].dataUrl = empWorldWind.screenshot();\n  };\n\n  /**\n   * Destroys the current engine\n   */\n  engineInterface.state.destroy = function() {\n    if (empWorldWind) {\n      empWorldWind.shutdown();\n      empWorldWind = undefined;\n    }\n  };\n\n  // return the engineInterface object as a new engineTemplate instance\n  return engineInterface;\n};\n","/* global WorldWind */\n\n/**\n * @namespace\n */\nvar EMPWorldWind = {};\nEMPWorldWind.isV2Core = false;\n\n/**\n * @classdesc The main interface for interacting with NASA WebWorldWind. Any interaction with the WorldWindow will occur\n * in this class.\n *\n * @class\n * @param {WorldWind.WorldWindow} wwd\n */\nEMPWorldWind.map = function(wwd) {\n  /**\n   * @type {WorldWind.WorldWindow}\n   */\n  this.worldWindow = wwd;\n\n  /** @type {Object.<string, EMPWorldWind.data.EmpLayer>} */\n  this.layers = {};\n\n  /** @type {Object.<string, EMPWorldWind.data.EmpFeature>} */\n  this.features = {};\n\n  /**\n   * This holds the state of the instance\n   * @memberof EMPWorldWind.map#\n   */\n  this.state = {\n    /**\n     * Pixel size\n     */\n    pixelSize: 1,\n    /**\n     * Whether the map is in drawing mode\n     */\n    drawing: false,\n    /**\n     * Whether the map is in editing mode\n     */\n    editing: false,\n    /**\n     * Whether we are dragging\n     */\n    dragging: false,\n    /**\n     * Placeholder for the last detected mouse move/touch/pointer event\n     */\n    lastInteractionEvent: undefined,\n    /**\n     * Lock state\n     */\n    lockState: emp3.api.enums.MapMotionLockEnum.UNLOCKED,\n    /**\n     * Object for holding state to compute when MilStdSymbols should be re-rendered\n     */\n    lastRender: {\n      bounds: {\n        north: 0,\n        south: 0,\n        east: 0,\n        west: 0\n      },\n      altitude: 0\n    },\n    /**\n     * Default selection style\n     * @type SelectionStyle\n     */\n    selectionStyle: {\n      scale: 1,\n      lineColor: \"#FFFF00\",\n      fillColor: undefined\n    },\n    /**\n     * Object for describing autoPanning behavior\n     */\n    autoPanning: {\n      step: 0.5,\n      up: false,\n      down: false,\n      left: false,\n      right: false\n    },\n    /**\n     * Label styles for the renderer\n     */\n    labelStyles: {\n      \"V\": false,\n      \"L\": false,\n      \"S\": false,\n      \"AA\": false,\n      \"AB\": false,\n      \"AC\": true,\n      \"H\": false,\n      \"M\": false,\n      \"T\": false,\n      \"T1\": false,\n      \"CN\": false,\n      \"C\": false,\n      \"F\": false,\n      \"G\": false,\n      \"H1\": false,\n      \"H2\": false,\n      \"J\": false,\n      \"K\": false,\n      \"N\": false,\n      \"P\": false,\n      \"W\": false,\n      \"W1\": false,\n      \"X\": false,\n      \"Y\": false,\n      \"Z\": false\n    }\n  };\n};\n\n// typedefs ============================================================================================================\n/**\n * @typedef {object} SelectionStyle\n * @property {number} scale\n * @property {string|undefined} lineColor\n * @property {string|undefined} fillColor\n */\n//======================================================================================================================\n\n/**\n * Creates the initial layers\n * @param {emp.map} empMapInstance\n */\nEMPWorldWind.map.prototype.initialize = function(empMapInstance) {\n  /**\n   * @memberof EMPWorldWind.map#\n   * @type {emp.map}\n   */\n  this.empMapInstance = empMapInstance;\n\n  // Create the contrast layers\n  var blackContrastLayer = new WorldWind.SurfaceSector(WorldWind.Sector.FULL_SPHERE, null);\n  blackContrastLayer.attributes.interiorColor = new WorldWind.Color(0, 0, 0, 0.0);\n  blackContrastLayer.attributes.drawOutline = false;\n\n  var whiteContrastLayer = new WorldWind.SurfaceSector(WorldWind.Sector.FULL_SPHERE, null);\n  whiteContrastLayer.attributes.interiorColor = new WorldWind.Color(1, 1, 1, 0.0);\n  whiteContrastLayer.attributes.drawOutline = false;\n\n  this.contrastLayer = new WorldWind.RenderableLayer('contrast layer');\n  this.contrastLayer.pickEnabled = false;\n  this.worldWindow.addLayer(this.contrastLayer);\n\n  this.contrastLayer.addRenderable(whiteContrastLayer);\n  this.contrastLayer.addRenderable(blackContrastLayer);\n\n  // Create the goTo manipulator\n  /** @member {WorldWind.GoToAnimator */\n  this.goToAnimator = new WorldWind.GoToAnimator(this.worldWindow);\n\n  // Register drag event handlers\n  /** @member {WorldWind.DragRecognizer} */\n  this.dragRecognizer = new WorldWind.DragRecognizer(this.worldWindow.canvas, function(event) {\n    if (event.state in EMPWorldWind.eventHandlers.drag) {\n      EMPWorldWind.eventHandlers.drag[event.state].call(this, event);\n    }\n  }.bind(this));\n\n  // Register DOM event handlers\n  var eventClass, eventHandler;\n  for (eventClass in EMPWorldWind.eventHandlers) {\n    if (EMPWorldWind.eventHandlers.hasOwnProperty(eventClass)) {\n      eventClass = EMPWorldWind.eventHandlers[eventClass];\n      for (eventHandler in eventClass) {\n        if (eventClass.hasOwnProperty(eventHandler)) {\n          this.worldWindow.addEventListener(eventHandler, eventClass[eventHandler].bind(this));\n        }\n      }\n    }\n  }\n\n  EMPWorldWind.eventHandlers.notifyViewChange.call(this, emp3.api.enums.CameraEventEnum.CAMERA_MOTION_STOPPED);\n};\n\n/**\n *\n * @param {emp.typeLibrary.Overlay} empOverlay\n * @returns {{success: boolean, message: string}}\n */\nEMPWorldWind.map.prototype.addLayer = function(empOverlay) {\n  var layer,\n    rc = {\n      success: false,\n      message: ''\n    };\n\n  if (empOverlay.overlayId in this.layers) {\n    rc = {\n      success: false,\n      message: \"An overlay with this id (\" + empOverlay.overlayId + \") already exists\"\n    };\n    return rc;\n  }\n\n  // Create the layer\n  layer = new EMPWorldWind.data.EmpLayer(empOverlay);\n  this.rootOverlayId = empOverlay.overlayId;\n  this.worldWindow.addLayer(layer.layer);\n\n  // Register the layer\n  this.layers[layer.id] = layer;\n\n  // Update the display\n  this.worldWindow.redraw();\n\n  rc.success = true;\n\n  return rc;\n};\n\n/**\n *\n * @param {emp.typeLibrary.Overlay | EMPWorldWind.data.EmpLayer} layer\n * @returns {{success: boolean, message: string}}\n */\nEMPWorldWind.map.prototype.removeLayer = function(layer) {\n  var featureKey, id,\n    result = {\n      success: false,\n      message: \"\"\n    };\n\n  id = layer.id || layer.coreId;\n  layer = this.getLayer(id);\n  if (layer) {\n    for (featureKey in layer.featureKeys) {\n      if (layer.featureKeys.hasOwnProperty(featureKey)) {\n        this.removeFeatureSelection(featureKey);\n      }\n    }\n\n    // Update the display\n    this.worldWindow.removeLayer(layer.layer);\n    this.worldWindow.redraw();\n\n    // Remove the record of the layer\n    delete this.layers[layer.id];\n\n    result.success = true;\n  } else {\n    result.message = \"No layer found with the id \" + id;\n  }\n\n  return result;\n};\n\n/**\n *\n * @param {object} args\n * @param {number} args.latitude\n * @param {number} args.longitude\n * @param {number} [args.altitude]\n * @param {number} [args.tilt]\n * @param {number} [args.roll]\n * @param {number} [args.heading]\n * @param {boolean} [args.animate = false]\n * @param {function} [args.animateCB]\n */\nEMPWorldWind.map.prototype.centerOnLocation = function(args) {\n  var position;\n  if (typeof args.altitude === \"number\") {\n    position = new WorldWind.Position(args.latitude, args.longitude, args.altitude);\n  } else {\n    position = new WorldWind.Location(args.latitude, args.longitude);\n  }\n\n  this.worldWindow.navigator.heading = args.heading || 0;\n  this.worldWindow.navigator.roll = args.roll || 0;\n  this.worldWindow.navigator.tilt = args.tilt || 0;\n\n  if (args.animate) {\n    this.goToAnimator.travelTime = EMPWorldWind.constants.globeMoveTime;\n    this.goToAnimator.goTo(position, args.animateCB || function() {\n      });\n  } else {\n    this.goToAnimator.travelTime = 0;\n    this.goToAnimator.goTo(position);\n  }\n};\n\n/**\n *\n * @param {object} args\n * @param {number} args.latitude\n * @param {number} args.longitude\n * @param {number} [args.altitude] Currently unused by WorldWind\n * @param {number} args.range\n * @param {number} args.tilt\n * @param {number} args.heading\n * @param {boolean} [args.animate]\n * @param {function} [args.animateCB]\n */\nEMPWorldWind.map.prototype.lookAt = function(args) {\n  // substituting range for altitude for now\n  if (args.range !== 0) {\n    args.range = args.range || this.worldWindow.navigator.range;\n  }\n\n  var position = new WorldWind.Position(args.latitude, args.longitude, args.range);\n\n  function _completeLookAtMotion() {\n    this.worldWindow.navigator.lookAtLocation.latitude = args.latitude;\n    this.worldWindow.navigator.lookAtLocation.longitude = args.longitude;\n\n    // lookAt does not support altitude in WorldWind yet\n    // this.worldWindow.navigator.lookAtLocation.altitude = args.altitude;\n\n    this.worldWindow.navigator.range = args.range;\n    this.worldWindow.navigator.tilt = args.tilt;\n    this.worldWindow.navigator.heading = args.heading;\n\n    if (args.animateCB) {\n      args.animateCB();\n    }\n\n    this.worldWindow.redraw();\n  }\n\n  this.goToAnimator.travelTime = args.animate ? EMPWorldWind.constants.globeMoveTime : 0;\n  this.goToAnimator.goTo(position, _completeLookAtMotion.bind(this));\n};\n\n/**\n * @param {emp.typeLibrary.Feature} feature\n * @param {PlotFeatureCB} callback\n */\nEMPWorldWind.map.prototype.plotFeature = function(feature, callback) {\n  /**\n   * Handle the async plotFeature method\n   * @private\n   */\n  var _callback = function(cbArgs) {\n    // Trigger an update for the display\n    this.worldWindow.redraw();\n\n    if (cbArgs.success) {\n      // Add the new feature to the global list of features\n      if (!(cbArgs.feature.id in this.features)) {\n        this.features[cbArgs.feature.id] = cbArgs.feature;\n      }\n    }\n\n    if (callback) {\n      callback(cbArgs);\n    }\n  }.bind(this);\n\n  if (feature.featureId in this.features) {\n    // Update an existing feature\n    EMPWorldWind.editors.EditorController.updateFeature.call(this, this.features[feature.featureId], feature, _callback);\n  } else {\n    // Plot a new feature\n    EMPWorldWind.editors.EditorController.plotFeature.call(this, feature, _callback);\n  }\n};\n/**\n * @callback PlotFeatureCB\n * @param {object} cbArgs\n * @param {EMPWorldWind.data.Feature} cbArgs.feature\n * @param {boolean} cbArgs.success\n * @param {string} [cbArgs.message]\n * @param {string} [cbArgs.jsError]\n */\n\n/**\n *\n * @param {emp.typeLibrary.Feature} feature\n */\nEMPWorldWind.map.prototype.unplotFeature = function(feature) {\n  var layer,\n    rc = {\n      success: false,\n      message: \"\"\n    };\n\n  layer = this.getLayer(feature.parentCoreId);\n  if (layer) {\n    layer.removeFeatureById(feature.coreId);\n    this.worldWindow.redraw();\n    rc.success = true;\n  } else {\n    rc.messge = 'Could not find the parent overlay';\n  }\n\n  return rc;\n};\n\n/**\n *\n * @param {emp.typeLibrary.Selection[]} empSelections\n */\nEMPWorldWind.map.prototype.selectFeatures = function(empSelections) {\n  var selected = [],\n    failed = [];\n\n  emp.util.each(empSelections, function(selectedFeature) {\n    var feature = this.features[selectedFeature.featureId];\n    if (feature) {\n      feature.selected = selectedFeature.select;\n      selected.push(feature);\n    } else {\n      failed.push(selectedFeature.featureId);\n    }\n  }.bind(this));\n\n  this.worldWindow.redraw();\n\n  return {\n    success: selected.length !== 0,\n    selected: selected,\n    failed: failed\n  };\n};\n\n/**\n *\n * @param {string} id\n * @returns {EMPWorldWind.data.EmpLayer}\n */\nEMPWorldWind.map.prototype.getLayer = function(id) {\n  if (this.layers.hasOwnProperty(id)) {\n    return this.layers[id];\n  }\n};\n\n/**\n *\n * @param layer\n * @param enable\n */\nEMPWorldWind.map.prototype.enableLayer = function(layer, enable) {\n  var id, subLayer;\n  if (this.layerExists(layer)) {\n    layer.enabled = enable;\n    for (id in layer.subLayers) {\n      if (layer.subLayers.hasOwnProperty(id)) {\n        subLayer = layer.getSubLayer(id);\n        if (subLayer) {\n          this.enableLayer(subLayer, enable);\n        }\n      }\n    }\n\n    if ((layer.globalType === EMPWorldWind.constants.layerType.ARCGIS_93_REST_LAYER) || (layer.globalType === EMPWorldWind.constants.layerType.BING_LAYER) ||\n      (layer.globalType === EMPWorldWind.constants.layerType.IMAGE_LAYER) || (layer.globalType === EMPWorldWind.constants.layerType.OSM_LAYER) ||\n      (layer.globalType === EMPWorldWind.constants.layerType.TMS_LAYER) || (layer.globalType === EMPWorldWind.constants.layerType.WMS_LAYER)\n      || (layer.globalType === EMPWorldWind.constants.layerType.WMTS_LAYER)) {\n      if (!enable) {\n        this.worldWindow.removeLayer(layer);\n      }\n    }\n  }\n};\n\n/**\n *\n * @param layer\n * @returns {boolean}\n */\nEMPWorldWind.map.prototype.layerExists = function(layer) {\n  return this.layers.hasOwnProperty(layer.id);\n};\n\n/**\n * Adds a WMS layer to the map\n * @param {emp.typeLibrary.WMS} wms\n */\nEMPWorldWind.map.prototype.addWMS = function(wms) {\n  var wmsLayer;\n\n  // Remove existing WMS if it already exists, we shall re-add it\n  wmsLayer = this.getLayer(wms.coreId);\n  if (wmsLayer) {\n    this.removeWMS(wmsLayer);\n  }\n\n  // Create the new layer\n  wmsLayer = new EMPWorldWind.data.EmpWMSLayer(wms);\n\n  this.layers[wmsLayer.id] = wmsLayer;\n  this.worldWindow.addLayer(wmsLayer.layer);\n  this.worldWindow.redraw();\n};\n\n/**\n * Removes a WMS layer from the map\n * @param {emp.typeLibrary.WMS|EMPWorldWind.data.EmpWMSLayer} wms\n */\nEMPWorldWind.map.prototype.removeWMS = function(wms) {\n  var layer,\n    id = wms.coreId || wms.id;\n\n  layer = this.getLayer(id);\n  if (layer) {\n    this.worldWindow.removeLayer(layer.layer);\n    delete this.layers[layer.id];\n    this.worldWindow.redraw();\n  }\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.map.prototype.isFeatureSelected = function(id) {\n  return !!this.empSelections.hasOwnProperty(id);\n};\n\n/**\n *\n * @param id\n * @returns {*}\n */\nEMPWorldWind.map.prototype.getFeatureSelection = function(id) {\n  if (this.isFeatureSelected(id)) {\n    return this.empSelections[id];\n  }\n\n  return null;\n};\n\n/**\n *\n * @param id\n * @param deselectProperties\n */\nEMPWorldWind.map.prototype.storeFeatureSelection = function(id, deselectProperties) {\n  this.empSelections[id] = deselectProperties;\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.map.prototype.removeFeatureSelection = function(id) {\n  if (this.empSelections.hasOwnProperty(id)) {\n    delete this.empSelections[id];\n    return true;\n  }\n\n  return false;\n};\n\n/**\n *\n * @returns {*|null}\n */\nEMPWorldWind.map.prototype.getSelections = function() {\n  return this.empSelections;\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.map.prototype.isMultiPointPresent = function(id) {\n  return !!this.multiPointCollection.hasOwnProperty(id);\n};\n\n/**\n *\n * @param id\n * @returns {*}\n */\nEMPWorldWind.map.prototype.getMultiPoint = function(id) {\n  if (this.isMultiPointPresent(id)) {\n    return this.multiPointCollection[id];\n  }\n\n  return null;\n};\n\n/**\n *\n * @param multiPoint\n */\nEMPWorldWind.map.prototype.storeMultiPoint = function(multiPoint) {\n  this.multiPointCollection[multiPoint.id] = multiPoint;\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.map.prototype.removeMultiPoint = function(id) {\n  if (this.multiPointCollection.hasOwnProperty(id)) {\n    delete this.multiPointCollection[id];\n    return true;\n  }\n\n  return false;\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.map.prototype.isAirspacePresent = function(id) {\n  return !!this.airspaceCollection.hasOwnProperty(id);\n};\n\n/**\n *\n * @param id\n * @returns {*}\n */\nEMPWorldWind.map.prototype.getAirspace = function(id) {\n  if (this.isAirspacePresent(id)) {\n    return this.airspaceCollection[id];\n  }\n\n  return null;\n};\n\n/**\n *\n * @param airspace\n */\nEMPWorldWind.map.prototype.storeAirspace = function(airspace) {\n  this.airspaceCollection[airspace.id || airspace.coreId] = airspace;\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.map.prototype.removeAirspace = function(id) {\n  if (this.airspaceCollection.hasOwnProperty(id)) {\n    delete this.airspaceCollection[id];\n    return true;\n  }\n\n  return false;\n};\n\n/**\n *\n * @returns {*|null}\n */\nEMPWorldWind.map.prototype.getSinglePoints = function() {\n  return this.singlePointCollection;\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.map.prototype.isSinglePointPresent = function(id) {\n  return !!this.singlePointCollection.hasOwnProperty(id);\n};\n\n/**\n *\n * @param id\n * @returns {*}\n */\nEMPWorldWind.map.prototype.getSinglePoint = function(id) {\n  if (this.isSinglePointPresent(id)) {\n    return this.singlePointCollection[id];\n  }\n\n  return null;\n};\n\n/**\n *\n * @param singlePoint\n */\nEMPWorldWind.map.prototype.storeSinglePoint = function(singlePoint) {\n  this.singlePointCollection[singlePoint.id] = singlePoint;\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.map.prototype.removeSinglePoint = function(id) {\n  if (this.isSinglePointPresent(id)) {\n    delete this.singlePointCollection[id];\n    return true;\n  }\n\n  return false;\n};\n\n/**\n *\n * @returns {*|null}\n */\nEMPWorldWind.map.prototype.getSinglePoints = function() {\n  return this.singlePointCollection;\n};\n\n/**\n *\n * @returns {number}\n */\nEMPWorldWind.map.prototype.getSinglePointCount = function() {\n  if (this.defined(this.singlePointCollection)) {\n    return Object.keys(this.singlePointCollection).length;\n  } else {\n    return 0;\n  }\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.map.prototype.isSinglePointIdOnHoldPresent = function(id) {\n  return !!this.singlePointCollectionIdOnHold.hasOwnProperty(id);\n};\n\n/**\n *\n * @param id\n * @returns {*}\n */\nEMPWorldWind.map.prototype.getSinglePointIdOnHold = function(id) {\n  if (this.isSinglePointIdOnHoldPresent(id)) {\n    return this.singlePointCollectionOnHold[id];\n  }\n\n  return null;\n};\n\n/**\n *\n * @param singlePointId\n */\nEMPWorldWind.map.prototype.storeSinglePointIdOnHold = function(singlePointId) {\n  this.singlePointCollectionIdOnHold[singlePointId] = singlePointId;\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.map.prototype.removeSinglePointIdOnHold = function(id) {\n  if (this.isSinglePointIdOnHoldPresent(id)) {\n    delete this.singlePointCollectionIdOnHold[id];\n    return true;\n  }\n\n  return false;\n};\n\n/**\n *\n * @returns {*}\n */\nEMPWorldWind.map.prototype.getSinglePointsIdOnHold = function() {\n  return this.singlePointCollectionIdOnHold;\n};\n\n/**\n *\n * @returns {*}\n */\nEMPWorldWind.map.prototype.getSinglePointsIdOnHoldCount = function() {\n  if (this.defined(this.singlePointCollectionIdOnHold)) {\n    return Object.keys(this.singlePointCollectionIdOnHold).length;\n  }\n  else {\n    return 0;\n  }\n};\n\n/**\n *\n * @param {Array} styles\n */\nEMPWorldWind.map.prototype.setLabelStyle = function(styles) {\n  var style, featureId, feature;\n  for (style in this.state.labelStyles) {\n    if (this.state.labelStyles.hasOwnProperty(style)) {\n      this.state.labelStyles[style] = styles.includes(style);\n    }\n  }\n\n  // TODO refresh only visible points and mark the rest as update when requested\n  for (featureId in this.features) {\n    if (this.features.hasOwnProperty(featureId)) {\n      feature = this.features[featureId];\n      EMPWorldWind.editors.EditorController.updateFeatureLabelStyle.call(this, feature);\n    }\n  }\n  this.worldWindow.redraw();\n};\n\n/**\n * Expose a refresh\n */\nEMPWorldWind.map.prototype.refresh = function() {\n  //var featureId, feature;\n\n  // for (featureId in this.features) {\n  //   if (this.features.hasOwnProperty(featureId)) {\n  //     feature = this.features[featureId];\n  //\n  //     // TODO check if it is visible first\n  //     //EMPWorldWind.editors.EditorController.updateRender.call(this, feature);\n  //   }\n  // }\n\n  // TODO trigger redraw if necessary only\n  this.worldWindow.redraw();\n};\n\n/**\n * Adjust the background contrast\n * @param {number} contrast Value from 0-100, 50 is default\n */\nEMPWorldWind.map.prototype.setContrast = function(contrast) {\n  if (contrast > 100) {\n    contrast = 100;\n  } else if (contrast < 0) {\n    contrast = 0;\n  }\n\n  if (contrast >= 50) {\n    this.contrastLayer.renderables[EMPWorldWind.constants.WHITE_CONTRAST].attributes.interiorColor = new WorldWind.Color(1, 1, 1, (contrast - 50) / 50);\n    this.contrastLayer.renderables[EMPWorldWind.constants.BLACK_CONTRAST].attributes.interiorColor = new WorldWind.Color(0, 0, 0, 0);\n  } else {\n    this.contrastLayer.renderables[EMPWorldWind.constants.WHITE_CONTRAST].attributes.interiorColor = new WorldWind.Color(1, 1, 1, 0);\n    this.contrastLayer.renderables[EMPWorldWind.constants.BLACK_CONTRAST].attributes.interiorColor = new WorldWind.Color(0, 0, 0, (50 - contrast) / 50);\n  }\n\n  this.worldWindow.redraw();\n};\n\n/**\n *\n * @param {emp.typeLibrary.Lock} lockState\n */\nEMPWorldWind.map.prototype.setLockState = function(lockState) {\n  this.state.lockState = lockState.lock;\n};\n\n/**\n * Spins the globe if autoPanning is enabled\n */\nEMPWorldWind.map.prototype.spinGlobe = function() {\n  var vertical = 0,\n    horizontal = 0;\n\n  var step = this.worldWindow.navigator.range / (WorldWind.EARTH_RADIUS);\n\n  if (this.state.autoPanning.up) {\n    vertical = step;\n  } else if (this.state.autoPanning.down) {\n    vertical = -step;\n  }\n\n  if (this.state.autoPanning.left) {\n    horizontal = -step;\n  } else if (this.state.autoPanning.right) {\n    horizontal = step;\n  }\n\n  var position = new WorldWind.Position(\n    this.worldWindow.navigator.lookAtLocation.latitude + vertical,\n    this.worldWindow.navigator.lookAtLocation.longitude + horizontal,\n    this.worldWindow.navigator.range);\n  this.goToAnimator.travelTime = 500; // TODO smooth the transition if this is getting called too often\n\n  if (this.state.autoPanning.up ||\n    this.state.autoPanning.left ||\n    this.state.autoPanning.down ||\n    this.state.autoPanning.right) {\n    this.goToAnimator.goTo(position);\n    EMPWorldWind.eventHandlers.notifyViewChange.call(this, emp3.api.enums.CameraEventEnum.CAMERA_IN_MOTION);\n    setTimeout(this.spinGlobe.bind(this), 250);\n  } else {\n    EMPWorldWind.eventHandlers.notifyViewChange.call(this, emp3.api.enums.CameraEventEnum.CAMERA_MOTION_STOPPED);\n  }\n};\n\n/**\n * Returns a data URI of the current view of the canvas\n * @todo Handle iconURL within Placemarks\n * @returns {string}\n */\nEMPWorldWind.map.prototype.screenshot = function() {\n  // This forces webgl to render which exposes current context for the canvas.toDataURL function\n  // Note: this is still lacking functionality as Placemarks are not rendered\n  this.worldWindow.drawFrame();\n  return this.worldWindow.canvas.toDataURL();\n};\n\n/**\n * Calculate the current bounds of the WorldWindow\n * @returns {Bounds}\n */\nEMPWorldWind.map.prototype.getBounds = function() {\n  var topRight, bottomLeft;\n\n  // Check the viewport corners\n  topRight = this.worldWindow.pickTerrain(new WorldWind.Vec2(this.worldWindow.viewport.width - 1, 1)).terrainObject();\n  bottomLeft = this.worldWindow.pickTerrain(new WorldWind.Vec2(1, this.worldWindow.viewport.height - 1)).terrainObject();\n\n  // If the corners don't contain the globe assume we are zoomed very far out, estimate an arbitrary rectangle\n  if (!topRight) {\n    topRight = {\n      position: WorldWind.Location.linearLocation(\n        this.worldWindow.navigator.lookAtLocation,\n        this.worldWindow.navigator.heading + 45,\n        Math.PI / 3,\n        new WorldWind.Location())\n    };\n  }\n\n  if (!bottomLeft) {\n    bottomLeft = {\n      position: WorldWind.Location.linearLocation(\n        this.worldWindow.navigator.lookAtLocation,\n        this.worldWindow.navigator.heading + 45,\n        -Math.PI / 3,\n        new WorldWind.Location())\n    };\n  }\n\n  return {\n    north: topRight.position.latitude,\n    south: bottomLeft.position.latitude,\n    east: topRight.position.longitude,\n    west: bottomLeft.position.longitude\n  };\n};\n\n/**\n * Returns the center of focus of the map\n * @returns {{latitude: number, longitude:number}}\n */\nEMPWorldWind.map.prototype.getCenter = function() {\n  return this.worldWindow.navigator.lookAtLocation;\n};\n\n/**\n * Deletes and removes all features and layers on the map\n */\nEMPWorldWind.map.prototype.shutdown = function() {\n  this.features = {};\n  this.layers = {};\n  this.worldWindow = undefined;\n};\n","var EMPWorldWind = EMPWorldWind || {};\n/**\n * Namespace for EMPWorldWind feature classes\n * @namespace\n */\nEMPWorldWind.data = {};\n","var EMPWorldWind = EMPWorldWind || {};\nEMPWorldWind.data = EMPWorldWind.data || {};\n\n/**\n * @classdesc This represents an EMP layer. Any interaction with the WorldWind layer itself will occur here.\n *\n * @class\n * @param {emp.typeLibrary.Overlay} overlay\n */\nEMPWorldWind.data.EmpLayer = function(overlay) {\n  /** @type {Object.<string, EMPWorldWind.Data.EmpLayer>} */\n  this.subLayers = {};\n\n  /** @type {Object.<string, EMPWorldWind.Data.EmpFeature>} */\n  this.featureKeys = {};\n\n  /** @member {string} */\n  this.name = overlay.name || undefined;\n\n  /** @member {string} */\n  this.description = overlay.description;\n\n  /** @member {string} */\n  this.id = overlay.overlayId;\n\n  /** @member {string} */\n  this.parentId = overlay.parentId;\n\n  /** @member {string} */\n  this.globalType = overlay.globalType || \"vector\"; // vector, wms\n\n  var _overlay = overlay;\n  /**\n   * @name EMPWorldWind.data.EmpLayer#overlay\n   * @type {emp.typeLibrary.Overlay}\n   */\n  Object.defineProperty(this, 'overlay', {\n    enumerable: true,\n    value: _overlay\n  });\n\n  // TODO handle WMS, WMTS, KML...\n  var _layer = new WorldWind.RenderableLayer(this.id);\n  /**\n   * @name EMPWorldWind.data.EmpLayer#layer\n   * @type {WorldWind.RenderableLayer}\n   */\n  Object.defineProperty(this, 'layer', {\n    enumerable: true,\n    value: _layer\n  });\n\n  /** @member {boolean} */\n  this.enabled = true; // true by default\n};\n\n/**\n *\n * @param {EMPWorldWind.data.EmpFeature} feature\n */\nEMPWorldWind.data.EmpLayer.prototype.addFeature = function(feature) {\n  if (!this.isFeaturePresent(feature)) {\n    emp.util.each(feature.shapes, function(shape) {\n      this.layer.addRenderable(shape);\n    }.bind(this));\n\n    this.featureKeys[feature.id] = {\n      \"id\": feature.id,\n      \"type\": EMPWorldWind.constants.FeatureType.RENDERABLE,\n      \"feature\": feature\n    };\n\n    feature.overlayId = this.id;\n  } else {\n    // feature already present in map. First remove existing one and then add as new one. The updateFeature\n    // does not remove the emp objects from engine hashes like entity, airspace, multipoint hashes.\n    this.updateFeature(feature);\n  }\n};\n\n/**\n * Expose a refresh for the actual WorldWind layer\n */\nEMPWorldWind.data.EmpLayer.prototype.refresh = function() {\n  this.layer.refresh();\n};\n\n/**\n *\n * @param {EMPWorldWind.data.EmpFeature[]} features\n */\nEMPWorldWind.data.EmpLayer.prototype.addFeatures = function(features) {\n  emp.util.each(features, function(feature) {\n    this.addFeature(feature);\n  }.bind(this));\n};\n\n/**\n *\n * @param entity\n * @param childEntity\n */\nEMPWorldWind.data.EmpLayer.prototype.addFeatureChild = function(entity, childEntity) {\n  if (this.isFeaturePresent(entity)) {\n    if (!this.isFeatureChildPresent(entity, childEntity)) {\n      if (!this.isFeaturePresent(childEntity)) {\n        childEntity.parentFeature = entity;\n        childEntity.overlayId = this.id;\n        this.addFeature(childEntity);\n        if (entity.childrenFeatureKeys === undefined) {\n          entity.childrenFeatureKeys = {};\n        }\n        entity.childrenFeatureKeys[childEntity.id] = childEntity.id;\n      }\n    }\n  }\n};\n\n/**\n *\n * @param entity\n * @param childEntity\n */\nEMPWorldWind.data.EmpLayer.prototype.allocateFeatureChild = function(entity, childEntity) {\n  if (this.isFeaturePresent(entity)) {\n    if (!this.isFeatureChildPresent(entity, childEntity)) {\n      if (this.isFeaturePresent(childEntity)) // must be present in layer\n      {\n        childEntity.parentFeature = entity;\n        childEntity.overlayId = this.id;\n        if (entity.childrenFeatureKeys === undefined) {\n          entity.childrenFeatureKeys = {};\n        }\n        entity.childrenFeatureKeys[childEntity.id] = childEntity.id;\n      }\n    }\n  }\n};\n\n/**\n *\n * @param parentEntity\n * @param childEntity\n * @returns {boolean}\n */\nEMPWorldWind.data.EmpLayer.prototype.isFeatureChildPresent = function(parentEntity, childEntity) {\n  if (parentEntity && childEntity) {\n    if (parentEntity.childrenFeatureKeys) {\n      return (childEntity.id in parentEntity.childrenFeatureKeys);\n    } else {\n      return false;\n    }\n  }\n};\n\n/**\n *\n * @param subLayer\n */\nEMPWorldWind.data.EmpLayer.prototype.addSubLayer = function(subLayer) {\n  if (!this.isSubLayerPresent(subLayer.id)) {\n    subLayer.parentId = this.id;\n    this.subLayers[subLayer.id] = subLayer;\n  }\n};\n\n/**\n *\n * @returns {boolean}\n */\nEMPWorldWind.data.EmpLayer.prototype.isLayerEmpty = function() {\n  return (this.featuresLength() + this.subOverlaysLength() <= 0);\n};\n\n/**\n *\n * @param id\n */\nEMPWorldWind.data.EmpLayer.prototype.getFeature = function(id) {\n  if (this.isFeaturePresentById(id)) {\n    var empFeature = this.featureKeys[id];\n    return empFeature.feature;\n  }\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.data.EmpLayer.prototype.isPrimitive = function(id) {\n  var isPrimitive = false;\n  if (this.isFeaturePresentById(id)) {\n    var empFeature = this.featureKeys[id];\n    if (empFeature.type === EMPWorldWind.constants.FeatureType.PRIMITIVE || empFeature.type === EMPWorldWind.constants.FeatureType.PRIMITIVE_COLLECTION) {\n      isPrimitive = true;\n    }\n  }\n\n  return isPrimitive;\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.data.EmpLayer.prototype.isDataSource = function(id) {\n  var isDataSource = false;\n  if (this.isFeaturePresentById(id)) {\n    var empFeature = this.featureKeys[id];\n    if (empFeature.type === EMPWorldWind.constants.FeatureType.DATA_SOURCE) {\n      isDataSource = true;\n    }\n  }\n\n  return isDataSource;\n};\n\n/**\n *\n * @returns {Array}\n */\nEMPWorldWind.data.EmpLayer.prototype.getFeatures = function() {\n  var features = [], id;\n  for (id in this.featureKeys) {\n    if (id && this.featureKeys.hasOwnProperty(id)) {\n      features.push(this.getFeature(id));\n    }\n  }\n\n  return features;\n};\n\n/**\n *\n * @param id\n * @returns {undefined}\n */\nEMPWorldWind.data.EmpLayer.prototype.getSubLayer = function(id) {\n  var subLayer = undefined;\n  if (this.isSubLayerPresent(id)) {\n    subLayer = this.subLayers[id];\n  }\n\n  return subLayer;\n};\n\n/**\n *\n * @param id\n * @returns {Array}\n */\nEMPWorldWind.data.EmpLayer.prototype.getSubLayers = function(id) {\n  var layers = [];\n  for (id in this.subLayers) {\n    if (this.subLayers.hasOwnProperty(id)) {\n      layers.push(this.getSubLayer(id));\n    }\n  }\n\n  return layers;\n};\n\n/**\n *\n */\nEMPWorldWind.data.EmpLayer.prototype.removeFeatures = function() {\n  for (var id in this.featureKeys) {\n    if (this.featureKeys.hasOwnProperty(id)) {\n      var entity = this.getFeature(id);\n      this.removeFeature(entity);\n    }\n  }\n};\n\n/**\n *\n */\nEMPWorldWind.data.EmpLayer.prototype.removeFeatureSelections = function() {\n  for (var id in this.featureKeys) {\n    if (this.featureKeys.hasOwnProperty(id)) {\n      //TODO this.empWorldWind.removeFeatureSelection(id);\n    }\n  }\n};\n\n/**\n *\n * @param visibility\n */\nEMPWorldWind.data.EmpLayer.prototype.showFeatures = function(visibility) {\n  for (var id in this.featureKeys) {\n    if (this.featureKeys.hasOwnProperty(id)) {\n      var entity = this.getFeature(id);\n      if (entity) {\n        this.showFeature(entity.id, visibility);\n      }\n    }\n  }\n};\n\n/**\n *\n * @param id\n * @param visibility\n */\nEMPWorldWind.data.EmpLayer.prototype.showFeature = function(id, visibility) {\n  var oMultiPoint,\n    childrenFeatureId,\n    childrenEntity,\n    feature = this.getFeature(id);\n  if (!feature) {\n    return;\n  }\n  if (feature.featureType === EMPWorldWind.constants.FeatureType.ENTITY) {\n    feature.show = visibility;\n    if (feature.billboard !== undefined) {\n      if (feature.reRenderBillboardRequired && visibility) {\n        // when the overlay or parent if hidden the billboard is added to the entity collection with show = false but the loadImage is never called\n        // in the Cesium sdk. Here I'm removing and then re adding the entity when the show visibility is set to true for the for the first  time.\n        // This fixes the issue for kml and geojson points.\n        feature.reRenderBillboardRequired = undefined;\n        feature.show = visibility;\n        feature.billboard.show = visibility;\n        this.updateFeature(feature); // the update removes and then adds the feature to the entity or primitive collection. The children are not remove and re-added.\n      }\n      feature.billboard.show = visibility;\n    }\n    if (feature.path !== undefined) {\n      feature.path.show = visibility;\n    }\n    if (feature.polyline !== undefined) {\n      feature.polyline.show = visibility;\n    }\n    if (feature.polygon !== undefined) {\n      feature.polygon.show = visibility;\n    }\n    if (feature.label !== undefined) {\n      feature.label.show = visibility;\n    }\n    if (feature.rectangle !== undefined) {\n      feature.show = visibility;\n      if (this.empCesium.isMultiPointPresent(id)) {\n        oMultiPoint = this.empCesium.getMultiPoint(id);\n        if (oMultiPoint) {\n          oMultiPoint.visible = visibility;\n        }\n      }\n    }\n    if (feature.childrenFeatureKeys !== undefined) {\n      for (childrenFeatureId in feature.childrenFeatureKeys) {\n        if (feature.childrenFeatureKeys.hasOwnProperty(childrenFeatureId)) {\n          childrenEntity = this.getFeature(childrenFeatureId);\n          if (childrenEntity) {\n            this.showFeature(childrenEntity.id, visibility);\n          }\n        }\n      }\n    }\n  }\n  else if (feature.featureType === EMPWorldWind.constants.FeatureType.COMPOUND_ENTITY) {\n    feature.show = visibility;\n    if (feature.childrenFeatureKeys !== undefined) {\n      for (childrenFeatureId in feature.childrenFeatureKeys) {\n        if (feature.childrenFeatureKeys.hasOwnProperty(childrenFeatureId)) {\n          childrenEntity = this.getFeature(childrenFeatureId);\n          if (childrenEntity) {\n            this.showFeature(childrenEntity.id, visibility);\n          }\n        }\n      }\n    }\n  } else if (feature.featureType === EMPWorldWind.constants.FeatureType.PRIMITIVE) {\n    feature.show = visibility;\n    //primitive could represent a 3D multipoint that uses labels (entity.rectangle... with canvas)\n    var airspaceLabelPresent = this.empCesium.isMultiPointPresent(id + \"_label\");\n    if (airspaceLabelPresent) {\n      var airspaceLabel = this.getFeature(id + \"_label\");\n      if (airspaceLabel) {\n        airspaceLabel.show = visibility;    //new this.empCesium.ConstantProperty(visibility);\n      }\n    }\n  } else if (feature.featureType === EMPWorldWind.constants.FeatureType.PRIMITIVE_COLLECTION) {\n    if (feature.length > 0) {\n      feature.get(0).show = visibility;\n    }\n    if (this.empCesium.isAirspacePresent(id)) {\n      var oAirspace = this.empCesium.getAirspace(id);\n      if (oAirspace) {\n        oAirspace.visible = visibility;\n      }\n    } else if (this.empCesium.isSinglePointPresent(id)) {\n      var oSinglePoint = this.empCesium.getSinglePoint(id);\n      if (oSinglePoint) {\n        oSinglePoint.visible = visibility;\n      }\n    }\n  }\n};\n\n/**\n *\n */\nEMPWorldWind.data.EmpLayer.prototype.removeSubLayers = function() {\n  for (var id in this.subLayers) {\n    if (this.subLayers.hasOwnProperty(id)) {\n      var subLayer = this.getSubLayer(id);\n      if (subLayer) {\n        subLayer.removeFeatures();\n        subLayer.removeSubLayers();\n        delete this.subLayers[id];\n      }\n    }\n  }\n};\n\n/**\n *\n * @param visibility\n */\nEMPWorldWind.data.EmpLayer.prototype.showSubLayers = function(visibility) {\n  for (var id in this.subLayers) {\n    if (this.subLayers.hasOwnProperty(id)) {\n      var subLayer = this.getSubLayer(id);\n      if (subLayer) {\n        subLayer.visibility = visibility;\n        subLayer.showFeatures(visibility);\n        subLayer.showSubLayers(visibility);\n      }\n    }\n  }\n};\n\n/**\n *\n */\nEMPWorldWind.data.EmpLayer.prototype.clearLayer = function() {\n  switch (this.globalType) {\n    case EMPWorldWind.constants.LayerType.ARCGIS_93_REST_LAYER:\n    case EMPWorldWind.constants.LayerType.BING_LAYER:\n    case EMPWorldWind.constants.LayerType.IMAGE_LAYER:\n    case EMPWorldWind.constants.LayerType.OSM_LAYER:\n    case EMPWorldWind.constants.LayerType.WMS_LAYER:\n    case EMPWorldWind.constants.LayerType.TMS_LAYER:\n    case EMPWorldWind.constants.LayerType.WMTS_LAYER:\n      this.enabled = false;\n      break;\n    default:\n    // do nothing\n  }\n  this.removeFeatureSelections();\n  this.removeFeatures();\n  this.removeSubLayers();\n};\n\n/**\n *\n * @param isVisible\n */\nEMPWorldWind.data.EmpLayer.prototype.showLayer = function(isVisible) {\n  this.showFeatures(isVisible);\n  this.showSubLayers(isVisible);\n};\n\n/**\n *\n * @param feature\n */\nEMPWorldWind.data.EmpLayer.prototype.removeFeature = function(feature) {\n  if (this.isFeaturePresent(feature)) {\n    if (feature.childrenFeatureKeys !== undefined) {\n      for (var id in feature.childrenFeatureKeys) {\n        if (feature.childrenFeatureKeys.hasOwnProperty(id)) {\n          var childrenEntity = this.getFeature(id);\n          if (childrenEntity) {\n            this.removeFeature(childrenEntity);\n          }\n        }\n      }\n    }\n    if (EMPWorldWind.utils.defined(feature.parentFeature)) {\n      this.deallocateFeatureChild(feature.parentFeature, feature);\n    }\n\n    emp.util.each(feature.shapes, function(shape){\n      if (shape instanceof WorldWind.RenderableLayer) {\n        // Handle KML features\n        this.worldwind.removeLayer(shape);\n      } else {\n        // Handle normal primitives\n        this.layer.removeRenderable(shape);\n      }\n    }.bind(this));\n\n    delete this.featureKeys[feature.id];\n  }\n};\n\n/**\n * feature already present in map. First remove existing one and then add as new one. The updateFeature\n * does not remove the emp objects from engine hashes like entity, airspace, multipoint hashes. The addFeature from the emp engine api\n * takes care of the case of an update. The updateFeature is used for internal removal and then re-adding the feature to map with same id. The\n * presence of the feature in the layers , and any child entities ( ojo - would a replace erase any children feature association to updated feature?) under the updated feature is mantained (v2)..\n *\n * @param feature\n */\nEMPWorldWind.data.EmpLayer.prototype.updateFeature = function(feature) {\n  var renderable;\n  //feature already present in map. First remove existing one and then add as new one\n  if (feature.id && feature.id !== null) {\n    renderable = this.getFeature(feature.id); // entity is the current geometry rendered on map\n    // keep children association to parent when updating\n    feature.childrenFeatureKeys = renderable.childrenFeatureKeys;\n    feature.parentFeature = renderable.parentFeature;\n    this.layer.removeRenderable(renderable);\n    this.layer.addRenderable(feature);\n    this.featureKeys[feature.id].feature = feature;\n    feature.overlayId = this.id;\n  }\n};\n\n/**\n * remove feature recursively from layer but keep feature in the Cesium entityCollection\n * this function is used for the moving of features.\n */\nEMPWorldWind.data.EmpLayer.prototype.deallocateFeature = function(entity) {\n  if (this.isFeaturePresent(entity)) {\n    if (entity.childrenFeatureKeys !== undefined) {\n      for (var id in entity.childrenFeatureKeys) {\n        if (entity.childrenFeatureKeys.hasOwnProperty(id)) {\n          var childrenEntity = this.getFeature(id);\n          if (childrenEntity) {\n            this.deallocateFeature(childrenEntity);\n          }\n        }\n      }\n    }\n    entity.overlayId = undefined;\n    delete this.featureKeys[entity.id];\n  }\n};\n\n/**\n * Add feature recursively to layer. the feature must  already be part of the Cesium entityCollection\n * this function is used for the moving of features.\n * @param feature\n */\nEMPWorldWind.data.EmpLayer.prototype.allocateFeature = function(feature) {\n  if (!this.isFeaturePresent(feature)) {\n    if (feature.featureType === EMPWorldWind.constants.FeatureType.ENTITY) {\n      this.featureKeys[feature.id] = {\n        \"id\": feature.id,\n        \"type\": EMPWorldWind.constants.FeatureType.ENTITY\n      };\n    }\n    else if (feature.featureType === EMPWorldWind.constants.FeatureType.COMPOUND_ENTITY) {\n      this.featureKeys[feature.id] = {\n        \"id\": feature.id,\n        \"type\": EMPWorldWind.constants.FeatureType.COMPOUND_ENTITY\n      };\n    }\n    else if (feature.featureType === EMPWorldWind.constants.FeatureType.PRIMITIVE) {\n      this.featureKeys[feature.id] = {\n        \"id\": feature.id,\n        \"type\": EMPWorldWind.constants.FeatureType.PRIMITIVE\n      };\n    }\n    else if (feature.featureType === EMPWorldWind.constants.FeatureType.PRIMITIVE_COLLECTION) {\n      this.featureKeys[feature.id] = {\n        \"id\": feature.id,\n        \"type\": EMPWorldWind.constants.FeatureType.PRIMITIVE_COLLECTION\n      };\n    }\n    else if (feature.featureType === EMPWorldWind.constants.FeatureType.DATA_SOURCE) {\n      this.featureKeys[feature.id] = {\n        \"id\": feature.id,\n        \"type\": EMPWorldWind.constants.FeatureType.DATA_SOURCE\n      };\n    }\n    var featureChildrenLength = this.featureChildrenLength(feature);\n    if (featureChildrenLength > 0) {\n      var childrenFeatures = this.getFeatureChildrenEntityArray(feature);\n      for (var index = 0; index < featureChildrenLength; index++) {\n        var childrenFeature = childrenFeatures[index];\n        this.allocateFeature(childrenFeature);\n      }\n    }\n    feature.overlayId = this.id;\n  }\n};\n\n/**\n *\n * @param entity\n */\nEMPWorldWind.data.EmpLayer.prototype.clearFeature = function(entity) {\n  if (this.isFeaturePresent(entity)) {\n    if (entity.childrenFeatureKeys !== undefined) {\n      for (var id in entity.childrenFeatureKeys) {\n        if (entity.childrenFeatureKeys.hasOwnProperty(id)) {\n          var childrenEntity = this.getFeature(id);\n          if (childrenEntity) {\n            this.removeFeature(childrenEntity);\n          }\n        }\n      }\n      entity.childrenFeatureKeys = undefined;\n    }\n  }\n};\n\n/**\n *\n * @param parentEntity\n * @param childEntity\n */\nEMPWorldWind.data.EmpLayer.prototype.removeFeatureChild = function(parentEntity, childEntity) {\n  if (this.isFeaturePresent(parentEntity) && this.isFeaturePresent(childEntity)) {\n    if (parentEntity.childrenFeatureKeys !== undefined) {\n      if (this.isFeatureChildPresent(parentEntity, childEntity)) {\n        this.removeFeature(childEntity);\n        delete parentEntity.childrenFeatureKeys[childEntity.id];\n      }\n    }\n  }\n};\n\n/**\n *\n * @param parentEntity\n * @param childEntity\n */\nEMPWorldWind.data.EmpLayer.prototype.deallocateFeatureChild = function(parentEntity, childEntity) {\n  if (this.isFeaturePresent(parentEntity) && this.isFeaturePresent(childEntity)) {\n    if (parentEntity.childrenFeatureKeys !== undefined) {\n      if (this.isFeatureChildPresent(parentEntity, childEntity)) {\n        //this.removeFeature(childEntity);\n        delete parentEntity.childrenFeatureKeys[childEntity.id];\n        childEntity.parentFeature = undefined;\n        childEntity.overlayId = undefined;\n      }\n    }\n  }\n};\n\n/**\n *\n * @param entity\n * @returns {Array}\n */\nEMPWorldWind.data.EmpLayer.prototype.getFeatureChildrenEntityArray = function(entity) {\n  var featureChildrenEntityArray = [];\n  if (this.isFeaturePresent(entity)) {\n    if (entity.childrenFeatureKeys !== undefined) {\n      for (var id in entity.childrenFeatureKeys) {\n        if (entity.childrenFeatureKeys.hasOwnProperty(id)) {\n          var childrenEntity = this.getFeature(id);\n          if (childrenEntity) {\n            featureChildrenEntityArray.push(childrenEntity);\n          }\n        }\n      }\n    }\n  }\n\n  return featureChildrenEntityArray;\n\n};\n/**\n *\n * @param id\n */\nEMPWorldWind.data.EmpLayer.prototype.removeFeatureById = function(id) {\n  var feature;\n  if (this.isFeaturePresentById(id)) {\n    feature = this.getFeature(id);\n    this.removeFeature(feature);\n  }\n};\n\n/**\n *\n * @param subOverlay\n */\nEMPWorldWind.data.EmpLayer.prototype.removeSubLayer = function(subOverlay) {\n  if (this.isSubLayerPresent(subOverlay.id)) {\n    this.subLayer.removeFeatures();\n    this.subLayer.removeSubLayers();\n    delete this.SubLayers[this.subLayer.id];\n  }\n};\n\n/**\n *\n * @param id\n */\nEMPWorldWind.data.EmpLayer.prototype.removeSubLayerById = function(id) {\n  if (this.isSubLayerPresent(id)) {\n    var subLayer = this.getLayer(id);\n    this.removeSubLayer(subLayer);\n  }\n};\n\n/**\n *\n * @returns {Number|*}\n */\nEMPWorldWind.data.EmpLayer.prototype.featuresLength = function() {\n  return Object.keys(this.featureKeys).length;\n};\n\n/**\n *\n * @param entity\n * @returns {number}\n */\nEMPWorldWind.data.EmpLayer.prototype.featureChildrenLength = function(entity) {\n  var length = 0;\n  if (entity.childrenFeatureKeys) {\n    length = Object.keys(entity.childrenFeatureKeys).length;\n  }\n\n  return length;\n};\n\n/**\n *\n * @returns {Number|*}\n */\nEMPWorldWind.data.EmpLayer.prototype.subLayersLength = function() {\n  return Object.keys(this.subLayers).length;\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.data.EmpLayer.prototype.isFeaturePresentById = function(id) {\n  if (id)\n    return (id in this.featureKeys);\n};\n\n/**\n *\n * @param entity\n * @returns {boolean}\n */\nEMPWorldWind.data.EmpLayer.prototype.isFeaturePresent = function(entity) {\n  if (entity && entity.id) {\n    return (entity.id in this.featureKeys);\n  } else {\n    return false;\n  }\n};\n\n/**\n *\n * @param id\n * @returns {boolean}\n */\nEMPWorldWind.data.EmpLayer.prototype.isSubLayerPresent = function(id) {\n  if (id) {\n    return (id in this.subLayers);\n  }\n\n  return false;\n};\n","var EMPWorldWind = EMPWorldWind || {};\nEMPWorldWind.data = EMPWorldWind.data || {};\n\n/**\n * @classdesc This represents an EMP layer. Any interaction with the WorldWind layer itself will occur here.\n *\n * @class\n * @param {emp.typeLibrary.WMS} wms\n */\nEMPWorldWind.data.EmpWMSLayer = function(wms) {\n  var layerNames, config;\n\n  this.id = wms.coreId;\n\n  var _wms = wms;\n\n  /**\n   * @name EMPWorldWind.data.EmpWMSLayer#wms\n   * @type {emp.typeLibrary.WMS}\n   */\n  Object.defineProperty(this, 'wms', {\n    enumerable: true,\n    value: _wms\n  });\n\n  layerNames = wms.activeLayers.join();\n\n  config = {\n    service: wms.url,\n    layerNames: layerNames,\n    sector: WorldWind.Sector.FULL_SPHERE,\n    levelZeroDelta: new WorldWind.Location(36, 36),\n    numLevels: 15,\n    format: \"image/png\",\n    size: 256\n  };\n\n  // Purposely null for now\n  var timeString = '';\n  var _wmsLayer = new WorldWind.WmsLayer(config, timeString);\n  /**\n   * @name EMPWorldWind.data.EmpWMS#layer\n   * @type {WorldWind.WmsLayer}\n   */\n  Object.defineProperty(this, 'layer', {\n    enumerable: true,\n    value: _wmsLayer\n  });\n};\n","var EMPWorldWind = EMPWorldWind || {};\nEMPWorldWind.data = EMPWorldWind.data || {};\n\n/**\n * @classdesc Container class for establishing mappings between empFeatures and the WorldWind representations.\n * A Feature may consist of any number of WorldWind Surface shapes. Any direct interaction with the WorldWind features\n * will occur in this class.\n *\n * @class\n * @param {emp.typeLibrary.Feature} feature\n */\nEMPWorldWind.data.EmpFeature = function (feature) {\n  /**\n   * The storage of all the shapes composing the primary shape\n   * @type {WorldWind.SurfaceShape[]}\n   */\n  this.shapes = [];\n\n  var _feature = feature;\n  /**\n   * The native EMP Feature\n   * @name EMPWorldWind.data.Feature#feature\n   * @type {emp.typeLibrary.Feature}\n   */\n  Object.defineProperty(this, 'feature', {\n    enumerable: true,\n    value: _feature\n  });\n\n  var _id = feature.coreId;\n  /**\n   * @readonly\n   * @name EMPWorldWind.data.EmpFeature#id\n   */\n  Object.defineProperty(this, 'id', {\n    enumerable: true,\n    value: _id\n  });\n\n  var _altitudeMode = WorldWind.CLAMP_TO_GROUND;\n  /**\n   * @name EMPWorldWind.data.EmpFeature#altitudeMode\n   */\n  Object.defineProperty(this, 'altitudeMode', {\n    enumerable: true,\n    get: function() { return _altitudeMode; },\n    set: function(altMode) {\n      var shapesCount = this.shapesCount();\n      for (var i = 0; i < shapesCount; i++) {\n        this.shapes[i].altitudeMode = altMode;\n      }\n      _altitudeMode = altMode;\n    }\n  });\n\n  var _selected = false;\n  /**\n   * @name EMPWorldWind.data.EmpFeature#selected\n   */\n  Object.defineProperty(this, 'selected', {\n    enumerable: true,\n    get: function() { return _selected; },\n    set: function(value) {\n      var shapesCount = this.shapesCount();\n      for (var i = 0; i < shapesCount; i++) {\n        this.shapes[i].highlighted = value;\n      }\n      _selected = value;\n    }\n  });\n};\n\nEMPWorldWind.data.EmpFeature.prototype.shapesCount = function() {\n  return this.shapes.length;\n};\n\n/**\n *\n * @param {WorldWind.SurfaceShape|WorldWind.SurfaceShape[]} primitives\n */\nEMPWorldWind.data.EmpFeature.prototype.addShapes = function(primitives) {\n  if (!Array.isArray(primitives)) {\n    if (primitives instanceof WorldWind.RenderableLayer) { // TODO this doesn't smell right, may need to handle KML differently\n      primitives.renderables[0].userProperties.id = this.id;\n    } else {\n      primitives.userProperties.id = this.id;\n    }\n    this.shapes.push(primitives);\n\n  } else {\n    emp.util.each(primitives, function(primitive) {\n      primitive.userProperties.id = this.id;\n      this.shapes.push(primitive);\n    }.bind(this));\n  }\n};\n\n/**\n * Clears all primitives from the feature. It does not remove them from any layers they are rendered on so that must be\n * done first.\n */\nEMPWorldWind.data.EmpFeature.prototype.clearShapes = function() {\n  this.shapes = [];\n};\n\n/**\n *\n * @param {boolean} visible\n */\nEMPWorldWind.data.EmpFeature.prototype.setVisible = function(visible) {\n  emp.util.each(this.shapes, function(shape) {\n    shape.enabled = visible;\n  });\n};","var EMPWorldWind = EMPWorldWind || {};\n\n/**\n * @namespace\n */\nEMPWorldWind.constants = {\n  view: {\n    MAX_HEIGHT: 10000000\n  }\n};\n\n/** @type {boolean} */\nEMPWorldWind.constants.globeWasMoving = false;\n\n/** @type {boolean} */\nEMPWorldWind.constants.globeWasZooming = false;\n\n/** @type {number} */\nEMPWorldWind.constants.globeMoveTime = 2000;\n\n/** @type {number} */\nEMPWorldWind.constants.extentBufferFactor = .4; // use when flyto a feature so the camera is not too close to it.\n\n/** @type {boolean} */\nEMPWorldWind.constants.USE_DATA_SOURCE = false;\n\n/** @constant {number} */\nEMPWorldWind.constants.WHITE_CONTRAST = 0;\n\n/** @constant {number} */\nEMPWorldWind.constants.BLACK_CONTRAST = 1;\n\n/**\n * No panning state for autoPanning in smart motion\n * @constant {object}\n */\nEMPWorldWind.constants.NO_PANNING = {\n  step: 0,\n  up: false,\n  down: false,\n  right: false,\n  left: false\n};\n\n/**\n * @readonly\n * @type {number}\n */\nEMPWorldWind.constants.METERS_PER_INCH = 0.0254;\n\n/**\n * @readonly\n * @type {number}\n */\nEMPWorldWind.constants.SCALE_LINE_LENGTH = 50;\n\n/**\n * @readonly\n */\nEMPWorldWind.constants.propertyDefaults = {\n  FILL_COLOR_HEX: \"ffffff\",\n  LINE_COLOR_HEX: \"000000\",\n  LINE_WIDTH: 3\n};\n\n/**\n * @readonly\n * @type {{COLOR_HEX: string, WIDTH: number, SCALE: number}}\n */\nEMPWorldWind.constants.selectionProperties = {\n  COLOR_HEX: 'FFFF00',\n  WIDTH: 2,\n  SCALE: 0.5\n};\n\n/**\n * @enum {string}\n * @readonly\n */\nEMPWorldWind.constants.FeatureType = {\n  ENTITY: \"entity\",\n  RENDERABLE: \"renderable\",\n  PRIMITIVE: \"primitive\",\n  GROUND_PRIMITIVE: \"ground_primitive\",\n  DATA_SOURCE: \"dataSource\",\n  COMPOUND_ENTITY: \"compoundEntity\",\n  PRIMITIVE_COLLECTION: \"primitiveCollection\"\n};\n\n/**\n * @enum {string}\n * @readonly\n */\nEMPWorldWind.constants.LayerType = {\n  OVERLAY_LAYER: \"overlay\",\n  WMS_LAYER: \"wms\",\n  IMAGE_LAYER: \"image\",\n  BING_LAYER: \"bing\",\n  ARCGIS_93_REST_LAYER: \"arcgis93rest\",\n  OSM_LAYER: \"osm\",\n  TMS_LAYER: \"tms\",\n  TERRAIN_LAYER: \"terrain\",\n  WMTS_LAYER: \"wmts\"\n};\n\n/**\n * @enum {string}\n * @readonly\n */\nEMPWorldWind.constants.EntityType = {\n  BILLBOARD: \"billboard\",\n  BOX: \"box\",\n  CORRIDOR: \"corridor\",\n  CYLINDER: \"cylinder\",\n  DESCRIPTION: \"description\",\n  ELLIPSE: \"ellipse\",\n  ELLIPSOID: \"ellipsoid\",\n  LABEL: \"label\",\n  MODEL: \"model\",\n  ORIENTATION: \"orientation\",\n  PATH: \"path\",\n  POLYGON: \"polygon\",\n  POLYLINE: \"polyline\",\n  POLYLINE_VOLUME: \"polylineVolume\",\n  POSITION: \"position\",\n  RECTANGLE: \"rectangle\",\n  VIEW_FROM: \"viewFrom\",\n  WALL: \"wall\",\n  KML: \"kml\"\n};\n\n/**\n * @enum {number}\n * @readonly\n */\nEMPWorldWind.constants.MultiPointRenderType = {\n  KML: 0,\n  /** @deprecated */\n  JSON: 1,\n  GEOJSON: 2,\n  DATA_URL: 4,\n  CANVAS: 3,\n  CANVAS_LABEL_ONLY: 5,\n  SVG: 6,\n  SVG_LABEL_ONLY: 7\n};\n\n/**\n * @enum {number}\n * @readonly\n */\nEMPWorldWind.constants.SinglePointAltitudeRangeMode = {\n  LOW_RANGE: 0,\n  MID_RANGE: 1,\n  HIGHEST_RANGE: 2\n};\n\n/**\n * @enum {number}\n * @readonly\n */\nEMPWorldWind.constants.RendererWorker = {\n  A: 1,\n  B: 2,\n  C: 3,\n  D: 4\n};\n\n/**\n * @enum {string}\n * @readonly\n */\nEMPWorldWind.constants.LabelStyle = {\n  REQUIRED_LABELS: 'required_labels',\n  COMMON_LABELS: 'common_labels',\n  ALL_LABELS: 'all_labels'\n};\n\n\n/**\n * @namespace\n */\nEMPWorldWind.constants.RendererSettings = {};\n\n/**\n * @enum {number}\n * @readonly\n */\nEMPWorldWind.constants.RendererSettings.standard = {\n  'Symbology_2525Bch2_USAS_13_14': 0,\n  'Symbology_2525C': 1\n};\n\n/**\n * @enum {string}\n * @readonly\n */\nEMPWorldWind.constants.RendererSettings.modifierLookup = {\n  QUANTITY: \"quantity\",\n  REDUCED_OR_REINFORCED: \"reinforcedOrReduced\",\n  STAFF_COMMENTS: \"staffComments\",\n  ADDITIONAL_INFO_1: \"additionalInfo1\",\n  ADDITIONAL_INFO_2: \"additionalInfo2\",\n  ADDITIONAL_INFO_3: \"additionalInfo3\",\n  EVALUATION_RATING: \"evaluationRating\",\n  COMBAT_EFFECTIVENESS: \"combatEffectiveness\",\n  SIGNATURE_EQUIPMENT: \"signatureEquipment\",\n  HIGHER_FORMATION: \"higherFormation\",\n  HOSTILE: \"hostile\",\n  IFF_SIF: \"iffSiff\",\n  DIRECTION_OF_MOVEMENT: \"directionOfMovement\",\n  OFFSET_INDICATOR: \"offsetIndicator\",\n  UNIQUE_DESIGNATOR_1: \"uniqueDesignation1\",\n  UNIQUE_DESIGNATOR_2: \"uniqueDesignation2\",\n  EQUIPMENT_TYPE: \"equipmentType\",\n  DATE_TIME_GROUP: \"dateTimeGroup1\",\n  DATE_TIME_GROUP_2: \"dateTimeGroup2\",\n  ALTITUDE_DEPTH: \"altitudeDepth\",\n  LOCATION: \"location\",\n  SPEED: \"speed\",\n  SPECIAL_C2_HEADQUARTERS: \"specialC2Headquarters\",\n  DISTANCE: \"distance\",\n  AZIMUTH: \"azimuth\",\n  FILL_COLOR: \"fillColor\",\n  LINE_COLOR: \"lineColor\",\n  X_OFFSET: \"xOffset\",\n  X_UNITS: \"xUnits\",\n  Y_OFFSET: \"yOffset\",\n  Y_UNITS: \"yUnits\",\n  NAME: \"name\",\n  STANDARD: \"standard\"\n};","var EMPWorldWind = EMPWorldWind || {};\n\n/**\n * @namespace\n */\nEMPWorldWind.utils = {};\n\n/**\n * @typedef {object} RGBAColor\n * @property {number} r\n * @property {number} g\n * @property {number} b\n * @property {number} a 0-1\n */\n\n/**\n *\n * @param {MouseEvent} event\n * @returns {{lat: undefined, lon: undefined, clientX: *, clientY: *, screenX: *, screenY: *}}\n */\nEMPWorldWind.utils.getEventCoordinates = function(event) {\n  var pickPoint = this.worldWindow.canvasCoordinates(event.clientX, event.clientY);\n  var terrainObject = this.worldWindow.pickTerrain(pickPoint).terrainObject();\n\n  return {\n    lat: terrainObject ? terrainObject.position.latitude : undefined,\n    lon: terrainObject ? terrainObject.position.longitude : undefined,\n    clientX: event.clientX,\n    clientY: event.clientY,\n    screenX: event.screenX,\n    screenY: event.screenY\n  };\n};\n\n/**\n *\n * @param value\n * @returns {boolean}\n */\nEMPWorldWind.utils.defined = function(value) {\n  return value !== undefined && value !== null;\n};\n\n\n/**\n * @namespace\n */\nEMPWorldWind.utils.milstd = {};\n\n/**\n *\n * @param properties\n * @param name\n * @param iconLabels\n * @param iconPixelSize\n * @returns {{}}\n */\nEMPWorldWind.utils.milstd.updateModifierLabels = function(properties, name, iconLabels, iconPixelSize) {\n  var mod,\n    modifiedModifiers = {},\n    property,\n    size;\n\n  // loop through all the properties, add a parameter for each property\n  for (property in properties) {\n    if (properties.hasOwnProperty(property)) {\n      switch (property) {\n        case \"fillColor\":\n          modifiedModifiers[\"fillColor\"] = properties[property];\n          break;\n        case \"lineColor\":\n          modifiedModifiers[\"lineColor\"] = properties[property];\n          break;\n        case \"modifiers\":\n          // modifiers contains an object that has other properties in it.\n          // loop through each of the properties and add parameters to those\n          // that are relevant.\n          for (mod in properties[property]) {\n            if (properties[property].hasOwnProperty(mod)) {\n              switch (mod) {\n                case \"quantity\":\n                  if (iconLabels.C && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"quantity\"] = properties[property][mod];\n                  }\n                  break;\n                case \"reinforcedOrReduced\":\n                  if (iconLabels.F && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"reinforcedOrReduced\"] = properties[property][mod];\n                  }\n                  break;\n                case \"staffComments\":\n                  if (iconLabels.G && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"staffComments\"] = properties[property][mod];\n                  }\n                  break;\n                case \"additionalInfo1\":\n                  if (iconLabels.H && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"additionalInfo1\"] = properties[property][mod];\n                  }\n                  break;\n                case \"additionalInfo2\":\n                  if (iconLabels.H1 && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"additionalInfo2\"] = properties[property][mod];\n                  }\n                  break;\n                case \"additionalInfo3\":\n                  if (iconLabels.H2 && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"additionalInfo3\"] = properties[property][mod];\n                  }\n                  break;\n                case \"evaluationRating\":\n                  if (iconLabels.J && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"evaluationRating\"] = properties[property][mod];\n                  }\n                  break;\n                case \"combatEffectiveness\":\n                  if (iconLabels.K && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"combatEffectiveness\"] = properties[property][mod];\n                  }\n                  break;\n                case \"signatureEquipment\":\n                  if (properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"signatureEquipment\"] = properties[property][mod];\n                  }\n                  break;\n                case \"higherFormation\":\n                  if (iconLabels.M && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"higherFormation\"] = properties[property][mod];\n                  }\n                  break;\n                case \"hostile\":\n                  if (iconLabels.N && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"hostile\"] = properties[property][mod];\n                  }\n                  break;\n                case \"iffSif\":\n                  if (iconLabels.P && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"iffSif\"] = properties[property][mod];\n                  }\n                  break;\n                case \"offsetIndicator\":\n                  if (properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"offsetIndicator\"] = properties[property][mod];\n                  }\n                  break;\n                case \"uniqueDesignation1\":\n                  if (iconLabels.T && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"uniqueDesignation1\"] = properties[property][mod];\n                  }\n                  break;\n                case \"uniqueDesignation2\":\n                  if (iconLabels.T1 && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"uniqueDesignation2\"] = properties[property][mod];\n                  }\n                  break;\n                case \"equipmentType\":\n                  if (properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"equipmentType\"] = properties[property][mod];\n                  }\n                  break;\n                case \"dateTimeGroup1\":\n                  if (iconLabels.W && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"dateTimeGroup1\"] = properties[property][mod];\n                  }\n                  break;\n                case \"dateTimeGroup2\":\n                  if (iconLabels.W1 && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"dateTimeGroup2\"] = properties[property][mod];\n                  }\n                  break;\n                case \"altitudeDepth\":\n                  if (iconLabels.X) {\n                    modifiedModifiers[\"altitudeDepth\"] = properties[property][mod];\n                  }\n                  break;\n                case \"location\":\n                  if (iconLabels.Y && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"location\"] = properties[property][mod];\n                  }\n                  break;\n                case \"speed\":\n                  if (iconLabels.Z && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"speed\"] = properties[property][mod];\n                  }\n                  break;\n                case \"specialC2Headquarters\":\n                  if (iconLabels.AA && properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[\"specialC2Headquarters\"] = properties[property][mod];\n                  }\n                  break;\n                case \"distance\":\n                  modifiedModifiers[\"distance\"] = properties[property][mod];\n                  break;\n                case \"azimuth\":\n                  modifiedModifiers[\"azimuth\"] = properties[property][mod];\n                  break;\n                case \"standard\":\n                  modifiedModifiers[\"standard\"] = properties[property][mod];\n                  break;\n                case \"size\":\n                  size = properties[property][mod];\n                  if (!size) {\n                    size = iconPixelSize;\n                  }\n                  modifiedModifiers[\"size\"] = size;\n                  break;\n                default:\n                  if (properties[property][mod] && (properties[property][mod] !== \"\")) {\n                    modifiedModifiers[mod] = properties[property][mod];\n                  }\n                  break;\n              }\n            }\n          }\n          break;\n      }\n    }\n  }\n\n  if (iconLabels.CN) {\n    modifiedModifiers[\"name\"] = name;\n  }\n  return modifiedModifiers;\n};\n\n\n/**\n *\n * @param modifiers\n * @param showModLabels\n * @returns {{}}\n */\nEMPWorldWind.utils.milstd.convertModifierStringTo2525 = function(modifiers, showModLabels) {\n  var standardModifiers = {};\n\n  if (modifiers !== undefined && modifiers !== null) {\n    for (var sModifier in modifiers) {\n      if (modifiers.hasOwnProperty(sModifier)) {\n        var modValue = modifiers[sModifier];\n        if (modValue !== null && modValue !== \"null\" && modValue !== 0) {\n          switch (sModifier) {\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.QUANTITY:\n              if (showModLabels) {\n                standardModifiers[\"C\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.REDUCED_OR_REINFORCED:\n              if (showModLabels) {\n                standardModifiers[\"F\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.STAFF_COMMENTS:\n              if (showModLabels) {\n                standardModifiers[\"G\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.ADDITIONAL_INFO_1:\n              if (showModLabels) {\n                standardModifiers[\"H\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.ADDITIONAL_INFO_2:\n              if (showModLabels) {\n                standardModifiers[\"H1\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.ADDITIONAL_INFO_3:\n              if (showModLabels) {\n                standardModifiers[\"H2\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.EVALUATION_RATING:\n              if (showModLabels) {\n                standardModifiers[\"J\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.COMBAT_EFFECTIVENESS:\n              if (showModLabels) {\n                standardModifiers[\"K\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.SIGNATURE_EQUIPMENT:\n              if (showModLabels) {\n                standardModifiers[\"L\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.HIGHER_FORMATION:\n              if (showModLabels) {\n                standardModifiers[\"M\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.HOSTILE:\n              if (showModLabels) {\n                standardModifiers[\"N\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.IFF_SIF:\n              if (showModLabels) {\n                standardModifiers[\"P\"] = modValue;\n              }\n              break;\n            // Direction of movement cannot work on 3D because the view can rotate\n            // case EMPWorldWind.constants.RendererSettings.modifierLookup.DIRECTION_OF_MOVEMENT:\n            //    modifiersArray.push(\"Q=\" + modValue);\n            //    break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.OFFSET_INDICATOR:\n              standardModifiers[\"S\"] = modValue;\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.UNIQUE_DESIGNATOR_1:\n              if (showModLabels) {\n                standardModifiers[\"T\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.UNIQUE_DESIGNATOR_2:\n              if (showModLabels) {\n                standardModifiers[\"T1\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.EQUIPMENT_TYPE:\n              if (showModLabels) {\n                standardModifiers[\"V\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.DATE_TIME_GROUP:\n              if (showModLabels) {\n                standardModifiers[\"W\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.DATE_TIME_GROUP_2:\n              if (showModLabels) {\n                standardModifiers[\"W1\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.ALTITUDE_DEPTH:\n              if (showModLabels) {\n                standardModifiers[\"X\"] = JSON.parse(JSON.stringify(modValue));\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.LOCATION:\n              if (showModLabels) {\n                standardModifiers[\"Y\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.SPEED:\n              if (showModLabels) {\n                standardModifiers[\"Z\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.SPECIAL_C2_HEADQUARTERS:\n              if (showModLabels) {\n                standardModifiers[\"AA\"] = modValue;\n              }\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.DISTANCE:\n              standardModifiers[\"AM\"] = JSON.parse(JSON.stringify(modValue));\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.AZIMUTH:\n              standardModifiers[\"AN\"] = JSON.parse(JSON.stringify(modValue));\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.FILL_COLOR:\n              standardModifiers[\"FILLCOLOR\"] = modValue;\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.LINE_COLOR:\n              standardModifiers[\"LINECOLOR\"] = modValue;\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.STANDARD:\n              // convert standard string value  to modifier numeric\n              standardModifiers[emp.typeLibrary.utils.milstd.Modifiers.STANDARD] = EMPWorldWind.utils.convertSymbolStandardToRendererFormat(modifiers);\n              break;\n            case EMPWorldWind.constants.RendererSettings.modifierLookup.NAME:\n            case \"CN\":\n              if (showModLabels) {\n                standardModifiers[\"CN\"] = modValue;\n              }\n              break;\n            default:\n              standardModifiers[sModifier] = modValue;\n              break;\n          }\n        }\n      }\n    }\n  }\n\n  return standardModifiers;\n};\n\n/**\n * Borrowed from the Cesium Implementation\n *\n * @param item\n * @returns {{}}\n */\nEMPWorldWind.utils.milstd.checkForRequiredModifiers = function(item) {\n  var result = {},\n    symbolCode,\n    properties = {},\n    modifiers = {},\n    oAM = [],\n    oAN = [],\n    basicSymbolCode,\n    standard,\n    symbolDef,\n    i,\n    lonDistance,\n    overrides = {};\n\n  // Check to see if the properties and modifiers have not yet been set.\n  // If they don't exist, this will default them to empty objects.\n  if (item.data && item.data.symbolCode) {\n    symbolCode = item.data.symbolCode;\n  } else if (item.symbolCode) {\n    symbolCode = item.symbolCode;\n  }\n\n  if (item.properties) {\n    properties = item.properties;\n    if (properties.modifiers) {\n      modifiers = properties.modifiers;\n    } else {\n      properties.modifiers = {};\n      modifiers = properties.modifiers;\n    }\n  } else {\n    item.properties = {\n      modifiers: {}\n    };\n\n    modifiers = item.properties.modifiers;\n  }\n\n  // Get the basic symbol code.  We need the basic code because we need to look it up with\n  // getSymbolDef.  This requires the basic code.\n  basicSymbolCode = armyc2.c2sd.renderer.utilities.SymbolUtilities.getBasicSymbolID(symbolCode);\n  // Get the standard we are using.  We need to convert it to what the function getSymbolDef uses.\n  standard = EMPWorldWind.utils.milstd.checkSymbolStandard(item.properties.modifiers);\n  // Retrieve the symbol definition object.  This contains information about the required\n  // symbol modifiers.  We will use this to determine which modifiers are not sufficiently\n  // populated.\n  symbolDef = armyc2.c2sd.renderer.utilities.SymbolDefTable.getSymbolDef(basicSymbolCode, standard);\n  if ((symbolDef === undefined) || (symbolDef === null)) {\n    return result;\n  }\n  // The only modifiers that are sometimes required in MIL-STD-2525B and C are\n  // distance and azimuth.\n  //\n  // First check if distance and azimuth has already been set.  If they are, we\n  // still may not have enough entries for them (as both are arrays), so we still need to\n  // verify that they are good.\n\n  // If distance already exists retrieve the values in it.\n  if (modifiers.hasOwnProperty(\"distance\")) {\n    // Lets make sure that if it is there that it is an array.\n    if (modifiers.distance instanceof Array) {\n      oAM = modifiers.distance;\n    }\n  }\n  // If azimuth already exists retrieve the values of it.\n  if (modifiers.hasOwnProperty(\"azimuth\")) {\n    // Lets make sure that if it is there that it is an array.\n    if (modifiers.azimuth instanceof Array) {\n      oAN = modifiers.azimuth;\n    }\n  }\n  // Based on the symbol draw category, we can determine if the symbol has\n  // has the required parameters or not.  For each draw category, we do a different\n  // check.\n  switch (symbolDef.drawCategory) {\n    // These are circle graphics represented by a single point and a radius.\n    case armyc2.c2sd.renderer.utilities.SymbolDefTable.DRAW_CATEGORY_CIRCULAR_PARAMETERED_AUTOSHAPE: //16\n      if (oAM !== null && oAM.length > 0) {\n        oAM = oAM.slice(0, 1); // Make sure that there is only 1.\n      } else {\n        oAM[0] = 5000;\n      }\n\n      overrides = {\n        distance: oAM\n      };\n      break;\n    // These are 1-point rectangles with an azimuth that determine the angle, and a distance that determines width\n    case armyc2.c2sd.renderer.utilities.SymbolDefTable.DRAW_CATEGORY_RECTANGULAR_PARAMETERED_AUTOSHAPE: //17\n      if ((oAM !== null) && (oAM.length >= 2) &&\n        (typeof (oAM[0]) === \"number\") &&\n        (typeof (oAM[1]) === \"number\")) {\n        oAM = oAM.slice(0, 2); // Make sure that there is only 2.\n      } else {\n        // Check to see if the [0] value is present and its a number.\n        // If not set a value.\n        if ((oAM[0] === undefined) || (typeof (oAM[0]) !== \"number\")) {\n          oAM[0] = 10000;\n        }\n        // Check to see if the [1] value is present and its a number.\n        // If not set a value.\n        if ((oAM[1] === undefined) || (typeof (oAM[1]) !== \"number\")) {\n          oAM[1] = 5000;\n        }\n        oAM = oAM.slice(0, 2); // Make sure that there is only 2.\n      }\n\n      if ((oAN !== null) && (oAN.length >= 1) &&\n        (typeof (oAN[1]) === \"number\")) {\n        oAN = oAN.slice(0, 1); // Makes ure that there is only 1.\n      } else {\n        // Check to see if the [0] value is present and its a number.\n        // If not set a value.\n        if ((oAN[0] === undefined) || (typeof (oAN[0]) !== \"number\")) {\n          oAN[0] = 0;\n        }\n        oAN = oAN.slice(0, 1); // Makes ure that there is only 1.\n      }\n      overrides = {\n        distance: oAM,\n        azimuth: oAN\n      };\n      break;\n    // This is a sector range fan, requires a point, a min and max distance for each sector, and left\n    // and right azimuths for each sector.\n    case armyc2.c2sd.renderer.utilities.SymbolDefTable.DRAW_CATEGORY_SECTOR_PARAMETERED_AUTOSHAPE: //18\n      if ((oAM !== null) && (oAM.length >= 2)) {\n        for (i = 0; i < oAM.length;) {\n          if (typeof (oAM[i]) !== \"number\") {\n            oAM.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n      if (oAM.length > 1) {\n        // Check to see if the each value is present.\n        for (i = 0; i < oAM.length; i++) {\n          if (oAM[i] === undefined) {\n            oAM[i] = ((i === 0) ? 2000 : oAM[i - 1] + 2000);\n          }\n        }\n      }\n      else {\n        if (oAM[0] === undefined) {\n          oAM[0] = 2000;\n        }\n      }\n      // You need at least 2 azimuth values for this to be a drawable graphic\n      // If it doesn't have it, create it.\n      if (oAN.length === 0) {\n        oAN.push(315);\n        oAN.push(45);\n      }\n      else if (oAN.length === 1) {\n        var newVal = oAN[0] + 90;\n        if (newVal > 360) {\n          newVal = newVal - 360;\n        }\n        oAN.push(newVal);\n      }\n      overrides = {\n        distance: oAM,\n        azimuth: oAN\n      };\n      break;\n    // A circular range fan that is a point and multiple distances for each ring.\n    case armyc2.c2sd.renderer.utilities.SymbolDefTable.DRAW_CATEGORY_CIRCULAR_RANGEFAN_AUTOSHAPE: //19\n      if ((oAM !== null) && (oAM.length > 0)) {\n        for (i = 0; i < oAM.length;) {\n          if (typeof (oAM[i]) !== \"number\") {\n            oAM.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n      if (oAM.length < 2) {\n        // Check to see if the each value is present.\n        for (i = 0; i < 2; i++) {\n          if (oAM[i] === undefined) {\n            oAM[i] = ((i === 0) ? 2000 : oAM[i - 1] + 2000);\n          }\n        }\n      }\n      overrides = {\n        distance: oAM\n      };\n      break;\n    // These are 2-point rectangles that determine the angle, and a distance that requires width\n    case armyc2.c2sd.renderer.utilities.SymbolDefTable.DRAW_CATEGORY_TWO_POINT_RECT_PARAMETERED_AUTOSHAPE: //20\n      if (oAM !== null && oAM.length > 0) {\n        if (typeof (oAM[0]) !== \"number\") {\n          oAM[0] = 5000;\n        }\n        oAM = oAM.slice(0, 1); // Make sure that there is only 1.\n      }\n      else {\n        oAM[0] = 5000;\n      }\n      overrides = {\n        distance: oAM\n      };\n      break;\n    // Any air corridor.\n    case armyc2.c2sd.renderer.utilities.SymbolDefTable.DRAW_CATEGORY_LINE:\n      // This really only applies to air corridors.  As far as\n      // I know the only line that requires distance is air corridors.\n\n      // If we do not have the distance field set, or it is set\n      // and the array length is 0, then we want to set it to a default\n      // width.  We want to make the width in relation to the current\n      // scale of the map, otherwise the air corridor won't look like\n      // an air corridor; it will look like a line.\n\n      if ((oAM === null || oAM.length === 0) || (oAM.length > 0 && (isNaN(oAM[0]) || oAM[0] === null)  )) {\n        if (item.data && item.data.coordinates && item.data.coordinates.length > 1) {\n          var coord0 = item.data.coordinates[0];\n          var coord1 = item.data.coordinates[1];\n\n          // var pointCartographic0 = Cesium.Cartographic.fromDegrees(coord0[0], coord0[1], 0);\n          // var pointCartographic1 = Cesium.Cartographic.fromDegrees(coord1[0], coord1[1], 0);\n          // var dist = pointCartographic0.distanceTo(pointCartographic1);\n          // lonDistance = dist / 4;\n\n          var pointCartographic0 = new WorldWind.Location(coord0[0], coord0[1]);\n          var pointCartographic1 = new WorldWind.Location(coord1[0], coord1[1]);\n\n          var dist = WorldWind.Location.greatCircleDistance(pointCartographic0, pointCartographic1);\n\n          lonDistance = dist / 4;\n        } else {\n          lonDistance = lonDistance / 34;\n        }\n\n        oAM[0] = lonDistance;\n        overrides = {\n          distance: oAM\n        };\n      } else {\n        overrides = {\n          distance: oAM\n        };\n      }\n\n      break;\n  }\n\n  return overrides;\n};\n\n/**\n *\n * @param modifiers\n * @returns {number}\n */\nEMPWorldWind.utils.milstd.checkSymbolStandard = function(modifiers) {\n  var standard = 1,\n    modifiersCopy,\n    modValue;\n\n  try {\n    if (modifiers !== undefined && modifiers !== null && modifiers !== \"\") {\n      modifiersCopy = typeof (modifiers) === \"string\" ? JSON.parse(modifiers) : emp.helpers.copyObject(modifiers);\n\n      if (modifiersCopy.hasOwnProperty(\"modifiers\")) {\n        modifiersCopy = modifiersCopy.modifiers;\n      }\n\n      if (modifiersCopy.hasOwnProperty(\"renderer\")) {\n        modValue = modifiersCopy.renderer;\n        if (modValue !== undefined && modValue !== null && modValue !== 0) {\n          if (modValue.toLowerCase() === emp.typeLibrary.featureMilStdVersionType.MILSTD_2525C.toLowerCase()) {\n            standard = EMPWorldWind.constants.RendererSettings.standard.Symbology_2525C;\n          } else if (modValue.toLowerCase() === emp.typeLibrary.featureMilStdVersionType.MILSTD_2525B.toLowerCase()) {\n            standard = EMPWorldWind.constants.RendererSettings.standard.Symbology_2525Bch2_USAS_13_14;\n          } else {\n            standard = modValue;\n          }\n        }\n      } else if (modifiersCopy.hasOwnProperty(\"standard\")) {\n        modValue = modifiersCopy.standard;\n        if (modValue !== undefined && modValue !== null && modValue !== 0) {\n          if (modValue.toLowerCase() === emp.typeLibrary.featureMilStdVersionType.MILSTD_2525C.toLowerCase()) {\n            standard = EMPWorldWind.constants.RendererSettings.standard.Symbology_2525C;\n          } else if (modValue.toLowerCase().indexOf(emp.typeLibrary.featureMilStdVersionType.MILSTD_2525C.toLowerCase()) > -1) {\n            standard = EMPWorldWind.constants.RendererSettings.standard.Symbology_2525C;\n          } else if (modValue.toLowerCase() === emp.typeLibrary.featureMilStdVersionType.MILSTD_2525B.toLowerCase()) {\n            standard = EMPWorldWind.constants.RendererSettings.standard.Symbology_2525Bch2_USAS_13_14;\n          } else if (modValue.toLowerCase().indexOf(emp.typeLibrary.featureMilStdVersionType.MILSTD_2525B.toLowerCase()) > -1) {\n            standard = EMPWorldWind.constants.RendererSettings.standard.Symbology_2525Bch2_USAS_13_14;\n          } else {\n            standard = modValue;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    window.console.log(\"Error getting symbol standard\");\n  }\n\n  return standard;\n};\n\n\n/**\n *\n * @param modifiers\n */\nEMPWorldWind.utils.convertSymbolStandardToRendererFormat = function(modifiers) {\n  var standard,\n    modValue;\n\n  modValue = modifiers.standard;\n  if (modValue.toLowerCase() === emp.typeLibrary.featureMilStdVersionType.MILSTD_2525C.toLowerCase()) {\n    standard = EMPWorldWind.constants.RendererSettings.standard.Symbology_2525C;\n  } else {\n    standard = EMPWorldWind.constants.RendererSettings.standard.Symbology_2525Bch2_USAS_13_14;\n  }\n\n  return standard;\n};\n\n/**\n *\n * @param hex #RRGGBB\n * @returns {{r: (Number|*), g: (Number|*), g: (Number|*), b: (Number|*), b: (Number|*)}}\n * @private\n */\nfunction _hex6ToRGBA(hex) {\n  hex = hex.replace('#', '');\n  var r, g, b;\n\n  r = parseInt(hex.substring(0, 2), 16);\n  g = parseInt(hex.substring(2, 4), 16);\n  b = parseInt(hex.substring(4, 6), 16);\n\n  return {\n    r: r,\n    g: g,\n    b: b\n  };\n}\n\n/**\n *\n * @param hex AARRGGBB\n * @returns {{r: (Number|*), g: (Number|*), b: (Number|*), a: (Number|*)}}\n * @private\n */\nfunction _hex8ToRGBA(hex) {\n  var r, g, b, a;\n\n  a = parseInt(hex.substring(0, 2), 16) / 256.0;\n  r = parseInt(hex.substring(2, 4), 16);\n  g = parseInt(hex.substring(4, 6), 16);\n  b = parseInt(hex.substring(6, 8), 16);\n\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\n\n/**\n * @example\n * hexToRGBA(\"#00FF83\")\n *\n * @param {string} hex\n * @param {float} [alpha=1] 0-1 expected range\n * @param {boolean} [normalize=true] True produce float values between 0 and 1, otherwise integers between 0 and 255\n * @returns {RGBAColor}\n */\nEMPWorldWind.utils.hexToRGBA = function(hex, alpha, normalize) {\n  if (!hex) {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1\n    };\n  }\n  normalize = EMPWorldWind.utils.defined(normalize) ? normalize : true;\n  alpha = EMPWorldWind.utils.defined(alpha) ? alpha : 1;\n\n  var newHex;\n\n  if (hex.length === 8) {\n    newHex = _hex8ToRGBA(hex);\n  } else {\n    newHex = _hex6ToRGBA(hex);\n    newHex.a = alpha;\n  }\n\n  if (normalize) {\n    newHex.r = newHex.r / 256.0;\n    newHex.g = newHex.g / 256.0;\n    newHex.b = newHex.b / 256.0;\n  }\n\n  return newHex;\n};\n\n/**\n * Returns the east-west distance of the bounds\n * @param {Bounds} bounds\n * @returns {number}\n */\nEMPWorldWind.utils.boundsWidth = function(bounds) {\n  return WorldWind.EARTH_RADIUS * WorldWind.Location.greatCircleDistance(\n      new WorldWind.Location(0, bounds.west),\n      new WorldWind.Location(0, bounds.east));\n};\n\n/**\n * Returns the north-south distance of the bounds\n * @param {Bounds} bounds\n * @returns {number}\n */\nEMPWorldWind.utils.boundsHeight = function(bounds) {\n  return WorldWind.EARTH_RADIUS * WorldWind.Location.greatCircleDistance(\n      new WorldWind.Location(bounds.south, 0),\n      new WorldWind.Location(bounds.north, 0));\n};\n","var EMPWorldWind = window.EMPWorldWind || {};\nEMPWorldWind.editors = EMPWorldWind.editors || {};\n\n/**\n * Set of builder functions that produce singular WorldWind primitive shapes and renderables.\n * @namespace\n */\nEMPWorldWind.editors.primitiveBuilders = EMPWorldWind.editors.primitiveBuilders || {};\n\n/**\n * Wrapper function for generating the appropriate attributes based on the given feature and selection style\n * @param {emp.typeLibrary.Feature | object} feature\n * @param {SelectionStyle} selectionStyle\n * @returns {{attributes: *, highlightAttributes: *}}\n */\nEMPWorldWind.editors.primitiveBuilders.createShapeAttributes = function(feature, selectionStyle) {\n  var lineColor, fillColor, highlightAttributes,\n    selectedLineColor, selectedFillColor, labelColor, selectedLabelColor;\n\n  var attributes = new WorldWind.ShapeAttributes();\n\n  switch (feature.format) {\n    case emp3.api.enums.FeatureTypeEnum.GEO_ACM: // TODO handle GEO_ACM attributes\n    case emp3.api.enums.FeatureTypeEnum.GEO_MIL_SYMBOL: // Do nothing, handled by renderer, no primitives\n    case emp3.api.enums.FeatureTypeEnum.GEO_POINT:\n      // Use PlacemarkAttributes\n      attributes = new WorldWind.PlacemarkAttributes();\n\n      // Set the imageURL\n      attributes.imageSource = feature.properties.iconUrl || WorldWind.configuration.baseUrl + \"images/emp-default-icon.png\";\n\n      // Create the label attributes\n      attributes.labelAttributes = new WorldWind.TextAttributes();\n      attributes.labelAttributes.offset = new WorldWind.Offset(\n        WorldWind.OFFSET_FRACTION, -0.5,\n        WorldWind.OFFSET_FRACTION, 1.5\n      );\n\n      // Create the highlight attributes\n      highlightAttributes = new WorldWind.PlacemarkAttributes(attributes);\n\n      // Create separate label highlights, will be linked and overridden to the normal attributes if not\n      highlightAttributes.labelAttributes = new WorldWind.TextAttributes(attributes.labelAttributes);\n\n      // Image scale may differ when selected\n      if (selectionStyle.scale) {\n        highlightAttributes.imageScale = selectionStyle.scale;\n      }\n\n      if (selectionStyle.lineColor) {\n        selectedLineColor = EMPWorldWind.utils.hexToRGBA(selectionStyle.lineColor);\n        highlightAttributes.imageColor = new WorldWind.Color(selectedLineColor.r, selectedLineColor.g, selectedLineColor.b, selectedLineColor.a);\n      } else {\n        highlightAttributes.imageColor = WorldWind.Color.YELLOW;\n      }\n\n      // Update the label attributes for highlighted labels\n      highlightAttributes.labelAttributes.offset = attributes.labelAttributes.offset;\n      highlightAttributes.labelAttributes.color = highlightAttributes.imageColor;\n      break;\n    case emp3.api.enums.FeatureTypeEnum.GEO_TEXT:\n      // GeographicText requires TextAttributes instead\n      attributes = new WorldWind.TextAttributes();\n\n      // Should not be occluded by terrain or objects when false\n      attributes.depthTest = false;\n\n      // Label Color\n      if (feature.properties.labelStyle && feature.properties.labelStyle.color) {\n        labelColor = feature.properties.labelStyle.color;\n        attributes.color = new WorldWind.Color(labelColor.red, labelColor.green, labelColor.blue, labelColor.alpha);\n      } else {\n        labelColor = EMPWorldWind.utils.hexToRGBA(EMPWorldWind.constants.propertyDefaults.FILL_COLOR_HEX);\n        attributes.color = new WorldWind.Color(labelColor.r, labelColor.g, labelColor.b, labelColor.a);\n      }\n\n      // Font Family\n      if (feature.properties.labelStyle && feature.properties.labelStyle.family) {\n        attributes.font.family = feature.properties.labelStyle.family;\n      }\n\n      // Justification\n      if (feature.properties.labelStyle && feature.properties.labelStyle.justification) {\n        attributes.font.horizontalAlignment = feature.properties.labelStyle.justification;\n      }\n\n      // Font size\n      if (feature.properties.labelStyle && feature.properties.labelStyle.size) {\n        attributes.font.size = feature.properties.labelStyle.size;\n      }\n\n      // Label Scale\n      if (feature.properties.labelStyle && feature.properties.labelStyle.scale) {\n        attributes.scale = feature.properties.labelStyle.scale;\n      }\n\n      // Create highlight attributes from the regular attributes, only update highlight color\n      highlightAttributes = new WorldWind.TextAttributes(attributes);\n      if (selectionStyle.lineColor) {\n        selectedLabelColor = EMPWorldWind.utils.hexToRGBA(selectionStyle.lineColor);\n        highlightAttributes.color = new WorldWind.Color(selectedLabelColor.r, selectedLabelColor.g, selectedLabelColor.b, selectedLabelColor.a);\n      } else {\n        highlightAttributes.color = WorldWind.Color.YELLOW;\n      }\n      break;\n    case emp3.api.enums.FeatureTypeEnum.GEO_CIRCLE:\n    case emp3.api.enums.FeatureTypeEnum.GEO_ELLIPSE:\n    case emp3.api.enums.FeatureTypeEnum.GEO_PATH: // Not all of the attributes are used for path/polyline\n    case emp3.api.enums.FeatureTypeEnum.GEO_POLYGON:\n    case emp3.api.enums.FeatureTypeEnum.GEO_RECTANGLE:\n    case emp3.api.enums.FeatureTypeEnum.GEO_SQUARE:\n    default:\n      // Set stroke color\n      if (feature.properties.strokeStyle && feature.properties.strokeStyle.strokeColor) {\n        lineColor = feature.properties.strokeStyle.strokeColor;\n        attributes.outlineColor = new WorldWind.Color(lineColor.red, lineColor.green, lineColor.blue, lineColor.alpha);\n      } else {\n        attributes.outlineColor = WorldWind.Color.BLACK;\n      }\n\n      // Set fill color\n      if (feature.properties.fillColor) {\n        fillColor = EMPWorldWind.utils.hexToRGBA(feature.properties.fillColor);\n        attributes.interiorColor = new WorldWind.Color(fillColor.r, fillColor.g, fillColor.b, fillColor.a);\n      } else {\n        attributes.drawInterior = false;\n      }\n\n      // TODO fillPattern is not yet supported by the ShapeAttributes class\n\n      // Line width\n      if (feature.properties.strokeWidth || feature.properties.lineWidth) {\n        attributes.outlineWidth = feature.properties.strokeWidth || feature.properties.lineWidth;\n      }\n\n      // Stippling of outline\n      attributes.outlineStippleFactor = feature.properties.stippleFactor || attributes.outlineStippleFactor;\n      attributes.outlineStipplePattern = feature.properties.stipplePattern || attributes.outlineStipplePattern;\n\n      // Generate the highlight attributes from the normal attributes\n      highlightAttributes = new WorldWind.ShapeAttributes(attributes);\n\n      // Update the selected lineColor\n      if (selectionStyle.lineColor) {\n        selectedLineColor = EMPWorldWind.utils.hexToRGBA(selectionStyle.lineColor);\n        highlightAttributes.outlineColor = new WorldWind.Color(selectedLineColor.r, selectedLineColor.g, selectedLineColor.b, selectedLineColor.a);\n      } else {\n        highlightAttributes.outlineColor = WorldWind.Color.YELLOW;\n      }\n\n      // Update the selected fillColor\n      if (selectionStyle.fillColor) {\n        selectedFillColor = EMPWorldWind.utils.hexToRGBA(selectionStyle.fillColor);\n        highlightAttributes.interiorColor = new WorldWind.Color(selectedFillColor.r, selectedFillColor.g, selectedFillColor.b, selectedFillColor.a);\n      } else {\n        highlightAttributes.drawInterior = false;\n      }\n  }\n\n  return {\n    attributes: attributes,\n    highlightAttributes: highlightAttributes\n  };\n};\n\n/**\n * @todo Use update from NASA WW to handle 3d airspaces\n * @param {emp.typeLibrary.Feature} feature\n * @param {SelectionStyle} selectionStyle\n * @returns {WorldWind.Polygon}\n */\nEMPWorldWind.editors.primitiveBuilders.constructAirControlMeasure = function(feature, selectionStyle) {\n  var primitivePolygon, boundaries, attributes, highlightAttributes,\n    i, selectedFillColor,\n    len = feature.data.coordinates.length;\n\n  attributes = new WorldWind.ShapeAttributes();\n  highlightAttributes = new WorldWind.ShapeAttributes();\n  // TODO highlight attributes for ACM\n\n  if (selectionStyle.fillColor) {\n    selectedFillColor = EMPWorldWind.utils.hexToRGBA(selectionStyle.fillColor);\n    highlightAttributes.interiorColor = new WorldWind.Color(selectedFillColor.r, selectedFillColor.g, selectedFillColor.b, selectedFillColor.a);\n  } else {\n    highlightAttributes.interiorColor = WorldWind.Color.YELLOW;\n  }\n\n  boundaries = [];\n  for (i = 0; i < len; i++) {\n    // TODO need updates to WorldWind to fix this correctly, also not setting altitude if there are multiple attributes\n    //boundaries[0].push(new WorldWind.Position(feature.data.coordinates[i][1], feature.data.coordinates[i][0], feature.properties.attributes[0].minAlt));\n    //boundaries[1].push(new WorldWind.Position(feature.data.coordinates[i][1], feature.data.coordinates[i][0], feature.properties.attributes[0].maxAlt));\n    boundaries.push(new WorldWind.Position(feature.data.coordinates[i][1], feature.data.coordinates[i][0], feature.properties.attributes[0].maxAlt));\n  }\n\n  primitivePolygon = new WorldWind.Polygon(boundaries, attributes);\n  primitivePolygon.altitudeMode = WorldWind.ABSOLUTE;\n  primitivePolygon.extrude = true;\n  primitivePolygon.highlightAttributes = new WorldWind.ShapeAttributes(highlightAttributes);\n\n  return primitivePolygon;\n};\n\n/**\n * Builds a {@link EMPWorldWind.data.EmpFeature} using using the {@link WorldWind.SurfaceCircle} primitive\n * @param {emp.typeLibrary.Feature} feature\n * @param {SelectionStyle} selectionStyle\n * @returns {WorldWind.SurfaceCircle}\n */\nEMPWorldWind.editors.primitiveBuilders.constructSurfaceCircle = function(feature, selectionStyle) {\n  var attributes, location, circlePrimitive;\n\n  // Construct circle attributes\n  attributes = EMPWorldWind.editors.primitiveBuilders.createShapeAttributes(feature, selectionStyle);\n\n  // Set the location\n  location = new WorldWind.Location(feature.coordinates[1], feature.coordinates[0]);\n\n  // Construct the primitive\n  circlePrimitive = new WorldWind.SurfaceCircle(location, feature.properties.radius, attributes.attributes);\n\n  // Set the primitive properties\n  circlePrimitive.displayName = feature.name;\n  circlePrimitive.altitudeMode = feature.properties.altitudeMode || WorldWind.CLAMP_TO_GROUND;\n  circlePrimitive.highlightAttributes = attributes.highlightAttributes;\n\n  return circlePrimitive;\n};\n\n/**\n * Constructs a {@link EMPWorldWind.data.EmpFeature} using using the {@link WorldWind.SurfaceEllipse} primitive\n * @param {emp.typeLibrary.Feature} feature\n * @param {SelectionStyle} selectionStyle\n * @returns {WorldWind.SurfaceEllipse}\n */\nEMPWorldWind.editors.primitiveBuilders.constructSurfaceEllipse = function(feature, selectionStyle) {\n  var attributes, location, ellipsePrimitive;\n\n  // Construct the ellipse attributes\n  attributes = EMPWorldWind.editors.primitiveBuilders.createShapeAttributes(feature, selectionStyle);\n\n  // Set the location\n  location = new WorldWind.Location(feature.coordinates[1], feature.coordinates[0]);\n\n  // Construct the primitive\n  ellipsePrimitive = new WorldWind.SurfaceEllipse(location,\n    feature.properties.semiMajor,\n    feature.properties.semiMinor,\n    feature.properties.azimuth,\n    attributes.attributes);\n\n  // Set the primitive properties\n  ellipsePrimitive.displayName = feature.name;\n  ellipsePrimitive.altitudeMode = feature.properties.altitudeMode || WorldWind.CLAMP_TO_GROUND;\n  ellipsePrimitive.highlightAttributes = attributes.highlightAttributes;\n\n  return ellipsePrimitive;\n};\n\n/**\n * Constructs a {@link EMPWorldWind.data.EmpFeature} using using the {@link WorldWind.SurfacePolyline} primitive\n * @param {emp.typeLibrary.Feature} feature\n * @param {SelectionStyle} selectionStyle\n * @returns {WorldWind.SurfacePolyline}\n */\nEMPWorldWind.editors.primitiveBuilders.constructSurfacePolyline = function(feature, selectionStyle) {\n  var i, pathPrimitive, attributes,\n    len = feature.data.coordinates.length,\n    locations = [];\n\n  // Construct the path attributes\n  attributes = EMPWorldWind.editors.primitiveBuilders.createShapeAttributes(feature, selectionStyle);\n\n  // Set the locations\n  for (i = 0; i < len; i++) {\n    locations.push(new WorldWind.Location(feature.data.coordinates[i][1], feature.data.coordinates[i][0]));\n  }\n\n  // Construct the primitive\n  pathPrimitive = new WorldWind.SurfacePolyline(locations, attributes.attributes);\n\n  // Set the primitive properties\n  pathPrimitive.displayName = feature.name;\n  pathPrimitive.altitudeMode = feature.properties.altitudeMode || WorldWind.CLAMP_TO_GROUND;\n  pathPrimitive.highlightAttributes = attributes.highlightAttributes;\n\n  return pathPrimitive;\n};\n\n/**\n * This function is similar to the feature based version except it takes a geoJSON object as the only parameter.\n * @param {object} geoJSON\n * @param {SelectionStyle} selectionStyle\n * @returns {WorldWind.SurfacePolyline}\n */\nEMPWorldWind.editors.primitiveBuilders.constructSurfacePolylineFromGeoJSON = function(geoJSON, selectionStyle) {\n  var i, color, attributes, highlightAttributes, polylinePrimitive, selectedLineColor,\n    len = geoJSON.coordinates.length,\n    locations = [];\n\n  attributes = new WorldWind.ShapeAttributes();\n  // SurfacePolyline uses the following attributes\n  if (geoJSON.properties.strokeColor) {\n    color = EMPWorldWind.utils.hexToRGBA(geoJSON.properties.strokeColor, geoJSON.properties.lineOpacity, true);\n    attributes.outlineColor = new WorldWind.Color(color.r, color.g, color.b, color.a);\n  } else {\n    attributes.outlineColor = WorldWind.Color.BLACK;\n  }\n\n  attributes.outlineWidth = geoJSON.properties.strokeWidth || attributes.outlineWidth;\n\n  for (i = 0; i < len; i++) {\n    locations.push(new WorldWind.Location(geoJSON.coordinates[i][1], geoJSON.coordinates[i][0]));\n  }\n\n  highlightAttributes = new WorldWind.ShapeAttributes();\n  if (selectionStyle.lineColor) {\n    selectedLineColor = EMPWorldWind.utils.hexToRGBA(selectionStyle.lineColor);\n    highlightAttributes.outlineColor = new WorldWind.Color(selectedLineColor.r, selectedLineColor.g, selectedLineColor.b, selectedLineColor.a);\n  } else {\n    highlightAttributes.outlineColor = WorldWind.Color.YELLOW;\n  }\n\n  polylinePrimitive = new WorldWind.SurfacePolyline(locations, attributes);\n  polylinePrimitive.altitudeMode = geoJSON.properties.altitudeMode || WorldWind.CLAMP_TO_GROUND;\n  polylinePrimitive.highlightAttributes = new WorldWind.ShapeAttributes(highlightAttributes);\n\n  return polylinePrimitive;\n};\n\n/**\n * Constructs a {@link EMPWorldWind.data.EmpFeature} using using the {@link WorldWind.Placemark} primitive\n * @param {emp.typeLibrary.Feature} feature\n * @param {SelectionStyle} selectionStyle\n * @returns {WorldWind.Placemark}\n */\nEMPWorldWind.editors.primitiveBuilders.constructPlacemark = function(feature, selectionStyle) {\n  var position, placemark, attributes,\n    eyeDistanceScaling = false;\n\n  // Create the placemark attributes\n  attributes = EMPWorldWind.editors.primitiveBuilders.createShapeAttributes(feature, selectionStyle);\n\n  // Set the position\n  position = new WorldWind.Position(\n    feature.data.coordinates[1],\n    feature.data.coordinates[0],\n    feature.data.coordinates[2] || 0);\n\n  // Construct the primitive\n  placemark = new WorldWind.Placemark(position, eyeDistanceScaling, attributes.attributes);\n\n  // Set the placemark attributes\n  placemark.alwaysOnTop = true;\n  placemark.label = feature.name;\n  placemark.altitudeMode = feature.properties.altitudeMode || WorldWind.CLAMP_TO_GROUND;\n  placemark.highlightAttributes = new WorldWind.PlacemarkAttributes(attributes.highlightAttributes);\n\n  return placemark;\n};\n\n/**\n * Constructs a {@link EMPWorldWind.data.EmpFeature} using using the {@link WorldWind.SurfacePolygon} primitive\n * @param {emp.typeLibrary.Feature} feature\n * @param {SelectionStyle} selectionStyle\n * @returns {WorldWind.SurfacePolygon}\n */\nEMPWorldWind.editors.primitiveBuilders.constructSurfacePolygon = function(feature, selectionStyle) {\n  var polygonPrimitive, attributes, boundaryLen,\n    i, j,\n    boundaries = [],\n    numBounds = feature.data.coordinates.length;\n\n  // Construct the polygon attributes\n  attributes = EMPWorldWind.editors.primitiveBuilders.createShapeAttributes(feature, selectionStyle);\n\n  // Set the boundary locations\n  for (i = 0; i < numBounds; i++) {\n    boundaryLen = feature.data.coordinates[i].length;\n    var subBoundary = [];\n    for (j = 0; j < boundaryLen; j++) {\n      subBoundary.push(new WorldWind.Location(feature.data.coordinates[i][j][1], feature.data.coordinates[i][j][0]));\n    }\n    boundaries.push(subBoundary);\n  }\n\n  // Construct the primitive\n  polygonPrimitive = new WorldWind.SurfacePolygon(boundaries, attributes.attributes);\n\n  // Set the primitive properties\n  polygonPrimitive.displayName = feature.name;\n  polygonPrimitive.altitudeMode = feature.properties.altitudeMode || WorldWind.CLAMP_TO_GROUND;\n  polygonPrimitive.highlightAttributes = attributes.highlightAttributes;\n\n  return polygonPrimitive;\n};\n\n/**\n *\n * @param {object} geoJSON\n * @param {SelectionStyle} selectionStyle\n * @returns {WorldWind.SurfacePolygon}\n */\nEMPWorldWind.editors.primitiveBuilders.constructSurfacePolygonFromGeoJSON = function(geoJSON, selectionStyle) {\n  var attributes, interiorColor, outlineColor, boundaryLen, polygonPrimitive,\n    selectedLineColor, selectedFillColor, highlightAttributes,\n    i, j,\n    boundaries = [],\n    numBounds = geoJSON.geometry.coordinates.length;\n\n  for (i = 0; i < numBounds; i++) {\n    boundaryLen = geoJSON.geometry.coordinates[i].length;\n    var subBoundary = [];\n    for (j = 0; j < boundaryLen; j++) {\n      subBoundary.push(new WorldWind.Location(geoJSON.geometry.coordinates[i][j][1], geoJSON.geometry.coordinates[i][j][0]));\n    }\n    boundaries.push(subBoundary);\n  }\n\n  attributes = new WorldWind.ShapeAttributes();\n  if (geoJSON.properties.strokeColor) {\n    outlineColor = EMPWorldWind.utils.hexToRGBA(geoJSON.properties.strokeColor);\n    attributes.outlineColor = new WorldWind.Color(outlineColor.r, outlineColor.g, outlineColor.b, outlineColor.a);\n  } else {\n    attributes.outlineColor = WorldWind.Color.BLACK;\n  }\n\n  if (geoJSON.properties.fillColor) {\n    interiorColor = EMPWorldWind.utils.hexToRGBA(geoJSON.properties.fillColor);\n    attributes.interiorColor = new WorldWind.Color(interiorColor.r, interiorColor.g, interiorColor.b, interiorColor.a);\n  } else {\n    attributes.drawInterior = false;\n  }\n\n  attributes.outlineWidth = geoJSON.properties.strokeWidth || attributes.outlineWidth;\n\n  attributes.outlineStippleFactor = geoJSON.properties.stippleFactor || attributes.outlineStippleFactor;\n  attributes.outlineStipplePattern = geoJSON.properties.stipplePattern || attributes.outlineStipplePattern;\n\n  highlightAttributes = new WorldWind.ShapeAttributes();\n  if (selectionStyle.lineColor) {\n    selectedLineColor = EMPWorldWind.utils.hexToRGBA(selectionStyle.lineColor);\n    highlightAttributes.outlineColor = new WorldWind.Color(selectedLineColor.a, selectedLineColor.g, selectedLineColor.b, selectedLineColor.a);\n  } else {\n    highlightAttributes.outlineColor = WorldWind.Color.YELLOW;\n  }\n  if (selectionStyle.fillColor) {\n    selectedFillColor = EMPWorldWind.utils.hexToRGBA(selectionStyle.fillColor);\n    highlightAttributes.interiorColor = new WorldWind.Color(selectedFillColor.a, selectedFillColor.g, selectedFillColor.b, selectedFillColor.a);\n  } else {\n    highlightAttributes.drawInterior = false;\n  }\n\n  polygonPrimitive = new WorldWind.SurfacePolygon(boundaries, attributes);\n  polygonPrimitive.altitudeMode = geoJSON.properties.altitudeMode || WorldWind.CLAMP_TO_GROUND;\n  polygonPrimitive.displayName = geoJSON.properties.name;\n  polygonPrimitive.highlightAttributes = new WorldWind.ShapeAttributes(highlightAttributes);\n\n  return polygonPrimitive;\n};\n\n/**\n * Constructs a {@link EMPWorldWind.data.EmpFeature} using using the {@link WorldWind.SurfaceRectangle} primitive\n * This handles rectangles and squares\n * @param {emp.typeLibrary.Feature} feature\n * @param {SelectionStyle} selectionStyle\n * @returns {WorldWind.SurfaceRectangle}\n */\nEMPWorldWind.editors.primitiveBuilders.constructSurfaceRectangle = function(feature, selectionStyle) {\n  var attributes, location, width, height, rectPrimitive;\n\n  // Construct the rectangle/square attributes\n  attributes = EMPWorldWind.editors.primitiveBuilders.createShapeAttributes(feature, selectionStyle);\n\n  // Set the location\n  location = new WorldWind.Location(feature.coordinates[1], feature.coordinates[0]);\n\n  // Determine rect or square\n  if (feature.format === emp3.api.enums.FeatureTypeEnum.GEO_RECTANGLE) {\n    // Rectangle\n    width = feature.properties.width;\n    height = feature.properties.height;\n  } else {\n    // Square, width equals height\n    width = feature.properties.width;\n    height = feature.properties.width;\n  }\n\n  // Construct the primitive\n  rectPrimitive = new WorldWind.SurfaceRectangle(location, width, height, feature.properties.azimuth, attributes.attributes);\n\n  // Set the primitive properties\n  rectPrimitive.displayName = feature.name;\n  rectPrimitive.altitudeMode = feature.properties.altitudeMode || WorldWind.CLAMP_TO_GROUND;\n  rectPrimitive.highlightAttributes = attributes.highlightAttributes;\n\n  return rectPrimitive;\n};\n\n/**\n * Constructs a {@link EMPWorldWind.data.EmpFeature} using using the {@link WorldWind.Text} primitive\n * @param {emp.typeLibrary.Feature} feature\n * @param {SelectionStyle} selectionStyle\n * @returns {WorldWind.Text}\n */\nEMPWorldWind.editors.primitiveBuilders.constructText = function(feature, selectionStyle) {\n  var attributes, location, textPrimitive;\n\n  // Construct circle attributes\n  attributes = EMPWorldWind.editors.primitiveBuilders.createShapeAttributes(feature, selectionStyle);\n\n  // Set the location\n  location = new WorldWind.Location(feature.coordinates[1], feature.coordinates[0]);\n\n  // Construct the text\n  textPrimitive = new WorldWind.GeographicText(location, feature.name);\n\n  // Set the primitive properties\n  textPrimitive.attributes = attributes.attributes;\n  textPrimitive.altitudeMode = feature.properties.altitudeMode || WorldWind.CLAMP_TO_GROUND;\n  textPrimitive.highlightAttributes = attributes.highlightAttributes;\n\n  return textPrimitive;\n};\n\n/**\n * @param {object} geoJSON\n * @param {SelectionStyle} selectionStyle\n * @returns {WorldWind.Text}\n */\nEMPWorldWind.editors.primitiveBuilders.constructTextFromGeoJSON = function(geoJSON, selectionStyle) {\n  var textPrimitive, attributes, highlightAttributes, color, selectedColor, location;\n\n  attributes = new WorldWind.TextAttributes(null);\n  attributes.depthTest = false;\n\n  if (geoJSON.properties.labelStyle && geoJSON.properties.labelStyle.color) {\n    color = EMPWorldWind.utils.hexToRGBA(geoJSON.properties.labelStyle.color);\n    attributes.color = new WorldWind.Color(color.r, color.g, color.b, color.a);\n  } else {\n    attributes.color = WorldWind.Color.BLACK;\n  }\n\n  if (geoJSON.properties.labelStyle && geoJSON.properties.labelStyle.family) {\n    attributes.font.family = geoJSON.properties.labelStyle.family;\n  }\n\n  if (geoJSON.properties.labelStyle && geoJSON.properties.labelStyle.justification) {\n    attributes.font.horizontalAlignment = geoJSON.properties.labelStyle.justification;\n  }\n\n  if (geoJSON.properties.labelStyle && geoJSON.properties.labelStyle.size) {\n    attributes.font.size = geoJSON.properties.labelStyle.size;\n  }\n\n  if (geoJSON.properties.labelStyle && geoJSON.properties.labelStyle.scale) {\n    attributes.scale = geoJSON.properties.labelStyle.scale;\n  }\n\n  highlightAttributes = new WorldWind.TextAttributes();\n  if (selectionStyle.lineColor) {\n    selectedColor = EMPWorldWind.utils.hexToRGBA(selectionStyle.lineColor);\n    highlightAttributes.color = new WorldWind.Color(selectedColor.r, selectedColor.g, selectedColor.b, selectedColor.a);\n  } else {\n    highlightAttributes.color = WorldWind.Color.YELLOW;\n  }\n\n  location = new WorldWind.Location(geoJSON.geometry.coordinates[1], geoJSON.geometry.coordinates[0]);\n\n  textPrimitive = new WorldWind.GeographicText(location, geoJSON.properties.label);\n  textPrimitive.attributes = attributes;\n  textPrimitive.altitudeMode = geoJSON.properties.altitudeMode || WorldWind.CLAMP_TO_GROUND;\n  textPrimitive.highlightAttributes = highlightAttributes;\n\n  return textPrimitive;\n};\n","var EMPWorldWind = EMPWorldWind || {};\nEMPWorldWind.editors = EMPWorldWind.editors || {};\n\n/**\n * @classdesc The EditorController handles all drawing, editing, and updating of features\n * @class\n */\nEMPWorldWind.editors.EditorController = (function() {\n  /**\n   * @param {emp.typeLibrary.Feature} feature\n   * @param {object} modifiers\n   * @param {SelectionStyle} selectionStyle\n   * @returns {WorldWind.Placemark}\n   * @private\n   */\n  function _constructSinglePointMilStdSymbol(feature, modifiers, selectionStyle) {\n    var placemark, attributes, highlightAttributes, position, imageInfo, imageCenter, imageBounds, imageOffset,\n      selectedImage,\n      eyeDistanceScaling = false;\n\n    attributes = new WorldWind.PlacemarkAttributes();\n\n    // TODO pass in leaderline settings by feature or via config object\n    // Leaderline settings\n    attributes.drawLeaderLine = true;\n    attributes.leaderLineAttributes.outlineColor = WorldWind.Color.RED;\n\n    // Render\n    imageInfo = armyc2.c2sd.renderer.MilStdIconRenderer.Render(feature.symbolCode, modifiers);\n    imageCenter = imageInfo.getCenterPoint();\n    imageBounds = imageInfo.getImageBounds();\n\n    // Calculate offset\n    imageOffset = new WorldWind.Offset(\n      WorldWind.OFFSET_FRACTION, imageCenter.x / imageBounds.width,\n      WorldWind.OFFSET_FRACTION, 1 - (imageCenter.y / imageBounds.height)\n    );\n\n    attributes.imageScale = 1;\n    attributes.imageOffset = imageOffset;\n    attributes.imageSource = imageInfo.toDataUrl();\n\n    // Highlight attributes\n    highlightAttributes = new WorldWind.PlacemarkAttributes();\n    highlightAttributes.imageColor = WorldWind.Color.WHITE;\n    highlightAttributes.imageOffset = imageOffset;\n\n    // Note that this is done statically, if the selection style changes a bulk update to every feature will need to be done\n    modifiers.LINECOLOR = selectionStyle.lineColor;\n    modifiers.FILLCOLOR = selectionStyle.fillColor;\n    selectedImage = armyc2.c2sd.renderer.MilStdIconRenderer.Render(feature.symbolCode, modifiers).toDataUrl();\n    highlightAttributes.imageSource = selectedImage;\n\n    position = new WorldWind.Position(\n      feature.data.coordinates[1],\n      feature.data.coordinates[0],\n      EMPWorldWind.utils.defined(feature.data.coordinates[2]) ? feature.data.coordinates[2] : 0);\n\n    placemark = new WorldWind.Placemark(position, eyeDistanceScaling);\n    placemark.alwaysOnTop = true;\n    placemark.altitudeMode = feature.properties.altitudeMode || WorldWind.CLAMP_TO_GROUND;\n    placemark.attributes = new WorldWind.PlacemarkAttributes(attributes);\n    placemark.highlightAttributes = new WorldWind.PlacemarkAttributes(highlightAttributes);\n\n    return placemark;\n  }\n\n  /**\n   *\n   * @param {emp.typeLibrary.Feature} feature\n   * @param {object} modifiers\n   * @param {SelectionStyle} selectionStyle\n   * @returns {WorldWind.SurfaceShape[]}\n   * @private\n   */\n  function _constructMultiPointMilStdFeature(feature, modifiers, selectionStyle) {\n    var imageInfo, componentFeature, lineCount, subGeoJSON, bbox, bounds, scale, featureCoords,\n      i, j,\n      positions = \"\",\n      shapes = [];\n\n    // Generate position string\n    featureCoords = feature.data.coordinates.join().split(\",\");\n    for (i = 0; i < featureCoords.length; i += 2) {\n      positions += featureCoords[i] + \",\" + featureCoords[i + 1] + \" \";\n    }\n    positions = positions.trim();\n\n    // Convert bounds to bbox\n    bounds = this.getBounds();\n    bbox = bounds.west + \",\" + bounds.south + \",\" + bounds.east + \",\" + bounds.north;\n\n    // Calculate the approximate scale\n    scale = EMPWorldWind.utils.boundsWidth(bounds) >> 2;\n\n    // TODO get update to renderer to pass back raw JSON object\n    imageInfo = JSON.parse(sec.web.renderer.SECWebRenderer.RenderSymbol(\n      feature.name,\n      feature.coreId,\n      feature.description,\n      feature.symbolCode,\n      positions,\n      WorldWind.CLAMP_TO_GROUND,\n      scale,\n      bbox,\n      modifiers,\n      EMPWorldWind.constants.MultiPointRenderType.GEOJSON));\n\n    // Generate primitives from the geoJSON\n    for (i = 0; i < imageInfo.features.length; i++) {\n      componentFeature = imageInfo.features[i];\n      switch (componentFeature.geometry.type) {\n        case \"MultiLineString\":\n          lineCount = componentFeature.geometry.coordinates.length;\n\n          for (j = 0; j < lineCount; j++) {\n            subGeoJSON = {\n              properties: componentFeature.properties,\n              coordinates: componentFeature.geometry.coordinates[j]\n            };\n\n            shapes.push(EMPWorldWind.editors.primitiveBuilders.constructSurfacePolylineFromGeoJSON(subGeoJSON, selectionStyle));\n          }\n          break;\n        case \"LineString\":\n          shapes.push(EMPWorldWind.editors.primitiveBuilders.constructSurfacePolylineFromGeoJSON(componentFeature, selectionStyle));\n          break;\n        case \"Point\":\n          shapes.push(EMPWorldWind.editors.primitiveBuilders.constructTextFromGeoJSON(componentFeature, selectionStyle));\n          break;\n        case \"Polygon\":\n          shapes.push(EMPWorldWind.editors.primitiveBuilders.constructSurfacePolygonFromGeoJSON(componentFeature, selectionStyle));\n          break;\n        default:\n          window.console.error(\"Unable to render symbol with type \" + componentFeature.geometry.type);\n      }\n    }\n\n    return shapes;\n  }\n\n  /**\n   * Requires access to the current scope ie .bind .call .apply\n   *\n   * @param {emp.typeLibrary.Feature} feature\n   */\n  function processModifiers(feature) {\n    var modifiers, enhancedModifiers, override;\n    if (feature.data.type === \"Point\") {\n      modifiers = EMPWorldWind.utils.milstd.updateModifierLabels(feature.properties, feature.name, this.state.labelStyles, this.state.pixelSize);\n    } else {\n      modifiers = EMPWorldWind.utils.milstd.updateModifierLabels(feature.properties, feature.name, {}, this.state.pixelSize);\n    }\n\n    modifiers = EMPWorldWind.utils.milstd.convertModifierStringTo2525(modifiers, this.state.labelStyles.CN === true);\n\n    enhancedModifiers = EMPWorldWind.utils.milstd.checkForRequiredModifiers(feature);\n\n    for (override in enhancedModifiers) {\n      if (enhancedModifiers.hasOwnProperty(override)) {\n        modifiers[override] = enhancedModifiers[override];\n      }\n    }\n\n    return modifiers;\n  }\n\n  /**\n   * Requires access to the current scope.\n   * ie .bind .call .apply\n   *\n   * @param {emp.typeLibrary.Feature} feature\n   * @param {SelectionStyle} selectionStyle\n   * @returns {WorldWind.SurfaceShape[]}\n   */\n  function constructMilStdSymbol(feature, selectionStyle) {\n    var modifiers, shapes = [];\n\n    // Process the modifiers\n    modifiers = processModifiers.call(this, feature);\n\n    if (feature.data.type === \"Point\") {\n      shapes.push(_constructSinglePointMilStdSymbol(feature, modifiers, selectionStyle));\n    } else if (feature.data.type === \"LineString\") {\n      // Requires access to the WorldWindow navigator, bind to the current scope\n      shapes = shapes.concat(_constructMultiPointMilStdFeature.call(this, feature, modifiers, selectionStyle));\n    } else {\n      window.console.error(\"Unhandled feature type: \" + feature.data.type + \" in EMPWorldWind\");\n    }\n\n    return shapes;\n  }\n\n  /**\n   * Async function\n   * @param {emp.classLibrary.Feature} feature\n   * @param {PlotFeatureCB} callback\n   * @this EMPWorldWind.map\n   */\n  function asyncPlotKMLFeature(feature, callback) {\n    var url, kmlFilePromise, kmlLayer, wwFeature,\n      rc = {\n        success: false\n      };\n\n    // Convert the kml string to a data url\n    url = \"data:text/xml,\" + encodeURIComponent(feature.data);\n\n    // Build the KML file promise\n    kmlFilePromise = new WorldWind.KmlFile(url);\n    kmlFilePromise\n      .then(function(kmlFile) {\n        // Construct the KML layer to hold the document\n        kmlLayer = new WorldWind.RenderableLayer(feature.coreId);\n\n        // Add the KML layer to the map\n        kmlLayer.addRenderable(kmlFile);\n        this.worldWindow.addLayer(kmlLayer);\n\n        // Use the standard data holder to keep track of the layer\n        wwFeature = new EMPWorldWind.data.EmpFeature(feature, this.state.labelStyles);\n        wwFeature.addShapes(kmlLayer); // This isn't a WW primitive but use it as if it was\n\n        // Record the layer so we can remove/modify it later\n        this.layers[feature.coreId] = kmlLayer;\n\n        // Configure the callback args\n        rc.success = true;\n        rc.feature = wwFeature;\n\n        // Fire the callback\n        callback(rc);\n      }.bind(this));\n  }\n\n  return {\n    /**\n     * Creates a new EMPWorldWind feature and associated WorldWind features from an EMP feature and adds it to the map\n     *\n     * @param {emp.typeLibrary.Feature} empFeature\n     * @param {PlotFeatureCB} callback Callback to be invoked on completion\n     * @this EMPWorldWind.map\n     */\n    plotFeature: function(empFeature, callback) {\n      var wwFeature, layer, buildShapes, shapes;\n\n      var rc = {\n        message: \"\",\n        success: true,\n        feature: undefined\n      };\n\n      switch (empFeature.format) {\n        case emp3.api.enums.FeatureTypeEnum.GEO_ACM:\n          buildShapes = EMPWorldWind.editors.primitiveBuilders.constructAirControlMeasure;\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_CIRCLE:\n          buildShapes = EMPWorldWind.editors.primitiveBuilders.constructSurfaceCircle;\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_ELLIPSE:\n          buildShapes = EMPWorldWind.editors.primitiveBuilders.constructSurfaceEllipse;\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_MIL_SYMBOL:\n          buildShapes = constructMilStdSymbol.bind(this);\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_PATH:\n          buildShapes = EMPWorldWind.editors.primitiveBuilders.constructSurfacePolyline;\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_POINT:\n          buildShapes = EMPWorldWind.editors.primitiveBuilders.constructPlacemark;\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_POLYGON:\n          buildShapes = EMPWorldWind.editors.primitiveBuilders.constructSurfacePolygon;\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_RECTANGLE:\n        case emp3.api.enums.FeatureTypeEnum.GEO_SQUARE:\n          buildShapes = EMPWorldWind.editors.primitiveBuilders.constructSurfaceRectangle;\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_TEXT:\n          buildShapes = EMPWorldWind.editors.primitiveBuilders.constructText;\n          break;\n        case emp3.api.enums.FeatureTypeEnum.KML:\n          // KML is not supported as native primitives in WorldWind\n          // TODO KML selection, not sure how to support it or represent it\n          return asyncPlotKMLFeature.call(this, empFeature, callback);\n        default:\n          rc.success = false;\n          rc.message = \"Missing feature constructor for format: \" + empFeature.format;\n      }\n\n      // Check if we have a builder for standard primitives\n      if (!rc.success) {\n        callback(rc);\n        return;\n      }\n\n      // construct the feature\n      wwFeature = new EMPWorldWind.data.EmpFeature(empFeature, this.state.labelStyles);\n\n      // Build the primitives\n      shapes = buildShapes(empFeature, this.state.selectionStyle);\n      wwFeature.addShapes(shapes);\n\n      // Add the feature to the layer\n      layer = this.getLayer(empFeature.parentCoreId);\n      layer.addFeature(wwFeature);\n\n      // Configure the callback params\n      rc.feature = wwFeature;\n      rc.success = true;\n\n      // Fire the callback\n      callback(rc);\n    },\n    /**\n     * Updates a WorldWind Renderable object on the map and returns the updated objects in the response\n     * @param {EMPWorldWind.data.EmpFeature} wwFeature\n     * @param {emp.typeLibrary.Feature} empFeature\n     * @param {PlotFeatureCB} callback\n     * @this EMPWorldWind.map\n     */\n    updateFeature: function(wwFeature, empFeature, callback) {\n      var layer,\n        rc = {\n          success: true,\n          message: \"\",\n          feature: wwFeature\n        };\n\n      // Remove existing primitives from the map\n      if (empFeature.format !== emp3.api.enums.FeatureTypeEnum.KML) {\n        layer = this.getLayer(empFeature.parentCoreId);\n        layer.removeFeature(wwFeature);\n      } else {\n        // Handle KML\n        this.worldWindow.removeLayer(this.layers[empFeature.coreId]);\n      }\n\n      // Clear the primitives from the feature\n      wwFeature.clearShapes();\n\n      switch (empFeature.format) {\n        case emp3.api.enums.FeatureTypeEnum.GEO_MIL_SYMBOL:\n          wwFeature.addShapes(constructMilStdSymbol.call(this, empFeature, this.state.labelStyles));\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_ACM:\n          wwFeature.addShapes(EMPWorldWind.editors.primitiveBuilders.constructAirControlMeasure(empFeature, this.state.labelStyles));\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_CIRCLE:\n          wwFeature.addShapes(EMPWorldWind.editors.primitiveBuilders.constructSurfaceCircle(empFeature, this.state.labelStyles));\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_ELLIPSE:\n          wwFeature.addShapes(EMPWorldWind.editors.primitiveBuilders.constructSurfaceEllipse(empFeature, this.state.labelStyles));\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_PATH:\n          wwFeature.addShapes(EMPWorldWind.editors.primitiveBuilders.constructSurfacePolyline(empFeature, this.state.labelStyles));\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_POINT:\n          wwFeature.addShapes(EMPWorldWind.editors.primitiveBuilders.constructPlacemark(empFeature, this.state.labelStyles));\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_POLYGON:\n          wwFeature.addShapes(EMPWorldWind.editors.primitiveBuilders.constructSurfacePolygon(empFeature, this.state.labelStyles));\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_RECTANGLE:\n        case emp3.api.enums.FeatureTypeEnum.GEO_SQUARE:\n          wwFeature.addShapes(EMPWorldWind.editors.primitiveBuilders.constructSurfaceRectangle(empFeature, this.state.labelStyles));\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_TEXT:\n          wwFeature.addShapes(EMPWorldWind.editors.primitiveBuilders.constructText(empFeature, this.state.labelStyles));\n          break;\n        case emp3.api.enums.FeatureTypeEnum.KML:\n          // KML is not supported as native primitives in WorldWind\n          return asyncPlotKMLFeature.call(this, empFeature, callback);\n        default:\n          rc.success = false;\n          rc.message = \"Missing feature constructor for format: \" + empFeature.format;\n      }\n\n      // Redraw the new shapes\n      if (rc.success) {\n        layer.addFeature(wwFeature);\n        rc.feature = wwFeature;\n      }\n\n      callback(rc);\n    }\n\n    ,\n    /**\n     *\n     * @param {EMPWorldWind.data.EmpFeature} wwFeature\n     * @this EMPWorldWind.map\n     */\n    updateFeatureLabelStyle: function(wwFeature) {\n      var shapes,\n        empLayer = this.getLayer(wwFeature.feature.parentCoreId);\n\n      switch (wwFeature.feature.format) {\n        case emp3.api.enums.FeatureTypeEnum.GEO_MIL_SYMBOL:\n          empLayer.removeFeature(wwFeature);\n          wwFeature.clearShapes();\n          shapes = constructMilStdSymbol.call(this, wwFeature.feature, this.state.selectionStyle);\n          wwFeature.addShapes(shapes);\n          empLayer.addFeature(wwFeature);\n          break;\n        case emp3.api.enums.FeatureTypeEnum.GEO_ACM:\n        case emp3.api.enums.FeatureTypeEnum.GEO_CIRCLE:\n        case emp3.api.enums.FeatureTypeEnum.GEO_ELLIPSE:\n        case emp3.api.enums.FeatureTypeEnum.GEO_PATH:\n        case emp3.api.enums.FeatureTypeEnum.GEO_POINT:\n        case emp3.api.enums.FeatureTypeEnum.GEO_POLYGON:\n        case emp3.api.enums.FeatureTypeEnum.GEO_RECTANGLE:\n        case emp3.api.enums.FeatureTypeEnum.GEO_SQUARE:\n        case emp3.api.enums.FeatureTypeEnum.GEO_TEXT:\n        default:\n        // do nothing\n      }\n    }\n  };\n})\n();\n","var EMPWorldWind = EMPWorldWind || {};\nEMPWorldWind.eventHandlers = EMPWorldWind.eventHandlers || {};\n\n/**\n * Throttles a function to a restrict the number of calls to it to prevent the engine from locking up under heavy use\n * @param {function} fn callback to throttle\n * @param {number} [threshold=20]\n * @param {context} scope\n * @returns {Function}\n */\nEMPWorldWind.eventHandlers.throttle = function(fn, threshold, scope) {\n  threshold = threshold || 20; // 20 ms throttle\n  var last, deferTimer;\n\n  return function() {\n    var context = scope || this;\n\n    var now = +new Date,\n      args = arguments;\n    if (last && now < last + threshold) {\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(function() {\n        last = now;\n        fn.apply(context, args);\n      }, threshold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n};\n\n/**\n * Notifies the map the view has been updated\n *\n * NOTE: The altitude, latitude, and longitude for the returned view may not be accurate as they are still based on\n * the navigator which is based on the lookAt location.\n *\n * @param {emp3.api.enums.CameraEventType} [viewEventType]\n * @this EMPWorldWind.map\n */\nEMPWorldWind.eventHandlers.notifyViewChange = function(viewEventType) {\n  var view = {\n    range: this.worldWindow.navigator.range,\n    tilt: this.worldWindow.navigator.tilt,\n    roll: this.worldWindow.navigator.roll,\n    heading: this.worldWindow.navigator.heading,\n    altitude: this.worldWindow.navigator.range, // TODO this is not correct, just an approximation until camera support\n    location: {\n      lat: this.worldWindow.navigator.lookAtLocation.latitude,\n      lon: this.worldWindow.navigator.lookAtLocation.longitude\n    },\n    bounds: this.getBounds()\n  };\n\n  var lookAt = {\n    range: this.worldWindow.navigator.range,\n    tilt: this.worldWindow.navigator.tilt,\n    heading: this.worldWindow.navigator.heading,\n    altitude: this.worldWindow.navigator.lookAtLocation.altitude || 0,\n    latitude: this.worldWindow.navigator.lookAtLocation.latitude,\n    longitude: this.worldWindow.navigator.lookAtLocation.longitude\n  };\n\n  this.empMapInstance.eventing.ViewChange(view, lookAt, viewEventType);\n\n  EMPWorldWind.eventHandlers.triggerRenderUpdate.call(this);\n};\n\n/**\n * Notify the that a re-render of the MilStd graphics is required based off of a delta from the last time the renderer\n * was called. This may trigger based on altitude delta or distance delta.\n * @this EMPWorldWind.map\n */\nEMPWorldWind.eventHandlers.triggerRenderUpdate = function() {\n  // TODO trigger this less often or on a timer\n  this.state.lastRender.bounds = this.getBounds();\n  this.state.lastRender.altitude = this.worldWindow.navigator.range;\n\n  emp.util.each(Object.keys(this.features), function(featureId) {\n    var feature = this.features[featureId];\n\n    // TODO check if the symbol is visible first\n    if (feature.feature.format === emp3.api.enums.FeatureTypeEnum.GEO_MIL_SYMBOL &&\n      feature.feature.data.type === \"LineString\") {\n      this.plotFeature(feature.feature);\n    }\n  }.bind(this));\n  this.worldWindow.redraw();\n};\n\n/**\n *\n * @param mouseEvent\n * @param empEventingArgs\n */\nEMPWorldWind.eventHandlers.extractFeatureFromEvent = function(mouseEvent, empEventingArgs) {\n  var obj, len,\n    pickList = this.worldWindow.pick(this.worldWindow.canvasCoordinates(mouseEvent.clientX, mouseEvent.clientY));\n\n  len = pickList.objects.length;\n  for (var i = 0; i < len; i++) {\n    obj = pickList.objects[i];\n    if (!obj.isTerrain) {\n      if (obj.userObject.userProperties && obj.userObject.userProperties.id) {\n        empEventingArgs.coreId = obj.userObject.userProperties.id;\n        empEventingArgs.target = \"feature\";\n        break;\n      }\n    }\n  }\n};\n","var EMPWorldWind = EMPWorldWind || {};\nEMPWorldWind.eventHandlers = EMPWorldWind.eventHandlers || {};\n\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent}\n * @typedef {Object} MouseEvent\n */\n\n\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent}\n * @typedef {Object} WheelEvent\n */\n\n/**\n * Mouse event handlers\n */\nEMPWorldWind.eventHandlers.mouse = {\n  /**\n   * @param {MouseEvent} event\n   * @this EMPWorldWind.map\n   */\n  click: function (event) {\n    var clickEvent = EMPWorldWind.utils.getEventCoordinates.call(this, event);\n    clickEvent.type = emp.typeLibrary.Pointer.EventType.SINGLE_CLICK;\n\n    EMPWorldWind.eventHandlers.extractFeatureFromEvent.call(this, event, clickEvent);\n    this.empMapInstance.eventing.Pointer(clickEvent);\n  },\n  /**\n   *\n   * @param {MouseEvent} event\n   * @this EMPWorldWind.map\n   */\n  dblclick: function (event) {\n    var dblClickEvent = EMPWorldWind.utils.getEventCoordinates.call(this, event);\n    dblClickEvent.type = emp.typeLibrary.Pointer.EventType.DBL_CLICK;\n\n    EMPWorldWind.eventHandlers.extractFeatureFromEvent.call(this, event, dblClickEvent);\n\n    this.empMapInstance.eventing.Pointer(dblClickEvent);\n  },\n  /**\n   * @param {MouseEvent} event\n   * @this EMPWorldWind.map\n   */\n  mousedown: function (event) {\n    var mousedownEvent = EMPWorldWind.utils.getEventCoordinates.call(this, event);\n\n    mousedownEvent.type = emp.typeLibrary.Pointer.EventType.MOUSEDOWN;\n    EMPWorldWind.eventHandlers.extractFeatureFromEvent.call(this, event, mousedownEvent);\n\n    this.empMapInstance.eventing.Pointer(mousedownEvent);\n  },\n  /**\n   * @param {MouseEvent} event\n   * @this EMPWorldWind.map\n   */\n  mouseup: function (event) {\n    var mouseupEvent = EMPWorldWind.utils.getEventCoordinates.call(this, event);\n    mouseupEvent.type = emp.typeLibrary.Pointer.EventType.MOUSEUP;\n    EMPWorldWind.eventHandlers.extractFeatureFromEvent.call(this, event, mouseupEvent);\n    \n    if (this.state.dragging) {\n      this.state.dragging = false;\n      EMPWorldWind.eventHandlers.notifyViewChange.call(this, emp3.api.enums.CameraEventEnum.CAMERA_MOTION_STOPPED);\n    }\n\n    this.state.autoPanning = EMPWorldWind.constants.NO_PANNING;\n    this.empMapInstance.eventing.Pointer(mouseupEvent);\n  },\n  /**\n   *\n   * @param {WheelEvent} event\n   * @this EMPWorldWind.map\n   */\n  wheel: function (event) {\n    if (event.wheelDeltaY < 0 && this.worldWindow.navigator.range > EMPWorldWind.constants.view.MAX_HEIGHT) {\n      this.worldWindow.navigator.range = EMPWorldWind.constants.view.MAX_HEIGHT;\n      event.preventDefault();\n    }\n\n    switch (this.state.lockState) {\n      case emp3.api.enums.MapMotionLockEnum.NO_MOTION:\n      case emp3.api.enums.MapMotionLockEnum.NO_ZOOM_NO_PAN:\n      case emp3.api.enums.MapMotionLockEnum.NO_ZOOM:\n        event.preventDefault();\n        break;\n      default:\n        // business as usual\n    }\n    EMPWorldWind.eventHandlers.notifyViewChange.call(this);\n  },\n  /**\n   * @param {MouseEvent} event\n   * @this EMPWorldWind.map\n   */\n  mousemove: function (event) {\n    var coords = EMPWorldWind.utils.getEventCoordinates.call(this, event);\n    coords.type = emp.typeLibrary.Pointer.EventType.MOVE;\n\n    EMPWorldWind.eventHandlers.extractFeatureFromEvent.call(this, event, coords);\n    if (coords.lat !== undefined) {\n      this.empMapInstance.eventing.Pointer(coords);\n    }\n\n    var element = event.srcElement || event.originalTarget;\n    var smartAreaBuffer = 0.05;\n    var elementBounds = element.getBoundingClientRect();\n    var pan = {\n      up: false,\n      down: false,\n      left: false,\n      right: false\n    };\n\n    switch (event.buttons) {\n      case 1: // Left button, we're moving the map\n      case 2: // Right button, we're tilting/rotating the map\n        switch (this.state.lockState) {\n          case emp3.api.enums.MapMotionLockEnum.NO_MOTION:\n          case emp3.api.enums.MapMotionLockEnum.NO_PAN:\n          case emp3.api.enums.MapMotionLockEnum.NO_ZOOM_NO_PAN:\n            this.state.dragging = true;\n            event.preventDefault();\n            break;\n          case emp3.api.enums.MapMotionLockEnum.SMART_MOTION:\n            event.preventDefault();\n\n            // Pan left or right\n            pan.left = event.offsetX < elementBounds.width * smartAreaBuffer;\n            pan.right = event.offsetX > elementBounds.width - (elementBounds.width * smartAreaBuffer);\n\n            // Pan up or down\n            pan.up = event.offsetY < elementBounds.height * smartAreaBuffer;\n            pan.down = event.offsetY > elementBounds.height - (elementBounds.height * smartAreaBuffer);\n\n            if (pan.up || pan.down || pan.left || pan.right) {\n              this.state.autoPanning = pan;\n              this.spinGlobe();\n            } else {\n              this.state.autoPanning = EMPWorldWind.constants.NO_PANNING;\n            }\n            break;\n          case emp3.api.enums.MapMotionLockEnum.UNLOCKED:\n          default:\n            EMPWorldWind.eventHandlers.notifyViewChange.call(this);\n        }\n        break;\n      case 4: // Wheel/middle button\n      case 8: // 4th button (back)\n      case 16: // 5th button (forward)\n      default:\n      // No actions\n    }\n\n    this.state.lastInteractionEvent = event;\n  }\n};\n","var EMPWorldWind = EMPWorldWind || {};\nEMPWorldWind.eventHandlers = EMPWorldWind.eventHandlers || {};\n\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Touch}\n * @typedef {object} Touch\n */\n\n/**\n * @typedef {object} TouchEvent\n * @property {Touch[]} touches\n */\n\n/**\n * Touch event handlers\n */\nEMPWorldWind.eventHandlers.touch = {\n  /**\n   * Touch down event handler,\n   * Approximates mousedown\n   * @param {TouchEvent} event\n   * @this EMPWorldWind.map\n   */\n  touchstart: function(event) {\n    var coords = EMPWorldWind.utils.getEventCoordinates.call(this, event.touches[0]);\n\n    coords.type = emp.typeLibrary.Pointer.EventType.MOUSEDOWN;\n    this.state.lastInteractionEvent = event;\n    this.empMapInstance.eventing.Pointer(coords);\n  },\n  /**\n   * Touch end event handler\n   * Approximates mouseup\n   * @this EMPWorldWind.map\n   */\n  touchend: function(/*event*/) {\n    var coords = EMPWorldWind.utils.getEventCoordinates.call(this, this.state.lastInteractionEvent.touches[0]);\n\n    coords.type = emp.typeLibrary.Pointer.EventType.MOUSEUP;\n    this.empMapInstance.eventing.Pointer(coords);\n  },\n  /**\n   * Touch cancel event handler, placeholder until it is needed\n   */\n  touchcancel: function(/*event*/) {\n    // Placeholder\n    // var coords = EMPWorldWind.utils.getEventCoordinates.call(this, event.touches[0]);\n    // window.console.debug(event, coords);\n  },\n  /**\n   * Touch move event handler\n   * @param {TouchEvent} event\n   * @this EMPWorldWind.map\n   */\n  touchmove: function(event) {\n    var coords = EMPWorldWind.utils.getEventCoordinates.call(this, event.touches[0]);\n    coords.type = emp.typeLibrary.Pointer.EventType.MOVE;\n    if (coords.lat !== undefined) {\n      this.empMapInstance.eventing.Pointer(coords);\n    }\n\n    // TODO check if map is locked or not before notifying view change\n    this.state.lastInteractionEvent = event;\n    EMPWorldWind.eventHandlers.notifyViewChange.call(this);\n  }\n};","var EMPWorldWind = EMPWorldWind || {};\nEMPWorldWind.eventHandlers = EMPWorldWind.eventHandlers || {};\n/**\n * @typedef {object} WWDragEvent\n */\n\n\n/**\n * The event handlers listed here are not standard DOM drag event handlers. They represent notification functions\n * to alert the core to different drag states.\n *\n * @see WorldWind.DragRecognizer\n *\n * @namespace\n */\nEMPWorldWind.eventHandlers.drag = {\n  /**\n   *\n   * @param {WWDragEvent} event\n   * @this EMPWorldWind.map\n   */\n  began: function (/*event*/) {\n    //window.console.debug(event);\n  },\n  /**\n   *\n   * @param {WWDragEvent} event\n   * @this EMPWorldWind.map\n   */\n  changed: function (/*event*/) {\n    //window.console.debug(event);\n  },\n  /**\n   *\n   * @param {WWDragEvent} event\n   * @this EMPWorldWind.map\n   */\n  ended: function (/*event*/) {\n    //window.console.debug(event);\n  }\n};\n","var EMPWorldWind = EMPWorldWind || {};\nEMPWorldWind.eventHandlers = EMPWorldWind.eventHandlers || {};\n\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events}\n * @typedef {object} PointerEvent\n */\n\n/**\n * Pointer events are currently aliases for their mouseevent counterparts\n *\n * @namespace\n * @borrows EMPWorldWind.eventHandlers.mouse.mousedown as pointerdown\n * @borrows EMPWorldWind.eventHandlers.mouse.mouseup as pointerup\n * @borrows EMPWorldWind.eventHandlers.mouse.mousemove as pointermove\n */\nEMPWorldWind.eventHandlers.pointer = {\n  /**\n   * Wrapper for mousedown\n   * @see EMPWorldWind.eventHandlers.mouse.mousedown\n   * @this EMPWorldWind.map\n   */\n  pointerdown: EMPWorldWind.eventHandlers.mouse.mousedown,\n  /**\n   * @see EMPWorldWind.eventHandlers.mouse.mouseup\n   * @this EMPWorldWind.map\n   */\n  pointerup: EMPWorldWind.eventHandlers.mouse.mouseup,\n  /**\n   * @see EMPWorldWind.eventHandlers.mouse.mousemove\n   * @this EMPWorldWind.map\n   */\n  pointermove: EMPWorldWind.eventHandlers.mouse.mousemove\n};"]}